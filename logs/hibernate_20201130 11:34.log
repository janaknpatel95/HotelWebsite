[DEBUG] 2020-11-30 11:28:28.953 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-11-30 11:28:28.964 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-11-30 11:28:28.974 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-11-30 11:28:29.475 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-11-30 11:28:29.488 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-11-30 11:28:30.963 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-11-30 11:28:32.940 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-11-30 11:28:33.041 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-11-30 11:28:33.044 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-11-30 11:28:33.234 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-11-30 11:28:33.802 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2785db06
[DEBUG] 2020-11-30 11:28:33.806 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2785db06
[DEBUG] 2020-11-30 11:28:33.808 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2785db06
[DEBUG] 2020-11-30 11:28:33.810 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@61ffd148
[DEBUG] 2020-11-30 11:28:33.819 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@715a70e9
[DEBUG] 2020-11-30 11:28:33.829 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@42507640
[DEBUG] 2020-11-30 11:28:33.833 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ff6dd3c
[DEBUG] 2020-11-30 11:28:33.839 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ff6dd3c
[DEBUG] 2020-11-30 11:28:33.843 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ff6dd3c
[DEBUG] 2020-11-30 11:28:33.857 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@576b7c74
[DEBUG] 2020-11-30 11:28:33.858 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@576b7c74
[DEBUG] 2020-11-30 11:28:33.859 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@576b7c74
[DEBUG] 2020-11-30 11:28:33.869 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2251b3bc
[DEBUG] 2020-11-30 11:28:33.871 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2251b3bc
[DEBUG] 2020-11-30 11:28:33.876 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2251b3bc
[DEBUG] 2020-11-30 11:28:33.890 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4130a648
[DEBUG] 2020-11-30 11:28:33.905 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4130a648
[DEBUG] 2020-11-30 11:28:33.918 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4130a648
[DEBUG] 2020-11-30 11:28:33.952 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3aed69dd
[DEBUG] 2020-11-30 11:28:33.952 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3aed69dd
[DEBUG] 2020-11-30 11:28:33.956 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3aed69dd
[DEBUG] 2020-11-30 11:28:33.967 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7bbfc5ff
[DEBUG] 2020-11-30 11:28:33.970 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7bbfc5ff
[DEBUG] 2020-11-30 11:28:33.973 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7bbfc5ff
[DEBUG] 2020-11-30 11:28:33.990 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62b09715
[DEBUG] 2020-11-30 11:28:34.004 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62b09715
[DEBUG] 2020-11-30 11:28:34.006 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62b09715
[DEBUG] 2020-11-30 11:28:34.025 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39941489
[DEBUG] 2020-11-30 11:28:34.033 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39941489
[DEBUG] 2020-11-30 11:28:34.041 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4538856f
[DEBUG] 2020-11-30 11:28:34.042 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4538856f
[DEBUG] 2020-11-30 11:28:34.050 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7f79edee
[DEBUG] 2020-11-30 11:28:34.059 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f79edee
[DEBUG] 2020-11-30 11:28:34.072 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3bfae028
[DEBUG] 2020-11-30 11:28:34.074 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43f03c23
[DEBUG] 2020-11-30 11:28:34.082 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@40d52be7
[DEBUG] 2020-11-30 11:28:34.086 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40d52be7
[DEBUG] 2020-11-30 11:28:34.101 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@71e7adbb
[DEBUG] 2020-11-30 11:28:34.111 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71e7adbb
[DEBUG] 2020-11-30 11:28:34.159 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4e3f2908
[DEBUG] 2020-11-30 11:28:34.159 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4e3f2908
[DEBUG] 2020-11-30 11:28:34.164 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a3b42
[DEBUG] 2020-11-30 11:28:34.165 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a3b42
[DEBUG] 2020-11-30 11:28:34.166 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5af5d76f
[DEBUG] 2020-11-30 11:28:34.166 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5af5d76f
[DEBUG] 2020-11-30 11:28:34.171 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766a52f5
[DEBUG] 2020-11-30 11:28:34.172 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766a52f5
[DEBUG] 2020-11-30 11:28:34.179 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a7b2e2
[DEBUG] 2020-11-30 11:28:34.179 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a7b2e2
[DEBUG] 2020-11-30 11:28:34.185 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@673e76b3
[DEBUG] 2020-11-30 11:28:34.186 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@673e76b3
[DEBUG] 2020-11-30 11:28:34.197 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3663d0ba
[DEBUG] 2020-11-30 11:28:34.198 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3663d0ba
[DEBUG] 2020-11-30 11:28:34.209 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7f4596d0
[DEBUG] 2020-11-30 11:28:34.215 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f4596d0
[DEBUG] 2020-11-30 11:28:34.217 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@29bcf51d
[DEBUG] 2020-11-30 11:28:34.219 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29bcf51d
[DEBUG] 2020-11-30 11:28:34.225 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4351ed61
[DEBUG] 2020-11-30 11:28:34.227 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4351ed61
[DEBUG] 2020-11-30 11:28:34.228 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4351ed61
[DEBUG] 2020-11-30 11:28:34.235 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c34365c
[DEBUG] 2020-11-30 11:28:34.240 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@422ab737
[DEBUG] 2020-11-30 11:28:34.243 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@422ab737
[DEBUG] 2020-11-30 11:28:34.243 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@422ab737
[DEBUG] 2020-11-30 11:28:34.245 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@11381415
[DEBUG] 2020-11-30 11:28:34.251 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3ad8717d
[DEBUG] 2020-11-30 11:28:34.253 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ad8717d
[DEBUG] 2020-11-30 11:28:34.259 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2ac519dc
[DEBUG] 2020-11-30 11:28:34.259 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ac519dc
[DEBUG] 2020-11-30 11:28:34.260 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6be6931f
[DEBUG] 2020-11-30 11:28:34.261 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6be6931f
[DEBUG] 2020-11-30 11:28:34.265 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4872669f
[DEBUG] 2020-11-30 11:28:34.271 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4872669f
[DEBUG] 2020-11-30 11:28:34.272 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3dc40ab9
[DEBUG] 2020-11-30 11:28:34.273 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3dc40ab9
[DEBUG] 2020-11-30 11:28:34.280 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@cde8c6c
[DEBUG] 2020-11-30 11:28:34.286 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@151ab2b9
[DEBUG] 2020-11-30 11:28:34.290 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@151ab2b9
[DEBUG] 2020-11-30 11:28:34.290 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@151ab2b9
[DEBUG] 2020-11-30 11:28:34.298 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4f116ca2
[DEBUG] 2020-11-30 11:28:34.298 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4f116ca2
[DEBUG] 2020-11-30 11:28:34.298 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4f116ca2
[DEBUG] 2020-11-30 11:28:34.303 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@78b7f805
[DEBUG] 2020-11-30 11:28:34.304 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@23468512
[DEBUG] 2020-11-30 11:28:34.312 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@64b0d1fa
[DEBUG] 2020-11-30 11:28:34.312 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@64b0d1fa
[DEBUG] 2020-11-30 11:28:34.313 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@64b0d1fa
[DEBUG] 2020-11-30 11:28:34.314 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59838256
[DEBUG] 2020-11-30 11:28:34.314 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59838256
[DEBUG] 2020-11-30 11:28:34.314 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59838256
[DEBUG] 2020-11-30 11:28:34.315 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@12219f6a
[DEBUG] 2020-11-30 11:28:34.315 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1f736d00
[DEBUG] 2020-11-30 11:28:34.317 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@46fc522d
[DEBUG] 2020-11-30 11:28:34.327 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46fc522d
[DEBUG] 2020-11-30 11:28:34.336 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77cb452c
[DEBUG] 2020-11-30 11:28:34.343 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@53aa38be
[DEBUG] 2020-11-30 11:28:34.344 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53aa38be
[DEBUG] 2020-11-30 11:28:34.355 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@35adf623
[DEBUG] 2020-11-30 11:28:34.355 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35adf623
[DEBUG] 2020-11-30 11:28:34.356 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5232e3f1
[DEBUG] 2020-11-30 11:28:34.357 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f31df32
[DEBUG] 2020-11-30 11:28:34.363 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1c8f6c66
[DEBUG] 2020-11-30 11:28:34.373 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6661d8c0
[DEBUG] 2020-11-30 11:28:34.373 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6661d8c0
[DEBUG] 2020-11-30 11:28:34.379 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@315c081
[DEBUG] 2020-11-30 11:28:34.380 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b2dd3df
[DEBUG] 2020-11-30 11:28:34.380 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4db77402
[DEBUG] 2020-11-30 11:28:34.381 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@73c48264
[DEBUG] 2020-11-30 11:28:34.381 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ef85555
[DEBUG] 2020-11-30 11:28:34.382 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5bcec67e
[DEBUG] 2020-11-30 11:28:34.382 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2dafae61
[DEBUG] 2020-11-30 11:28:34.388 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a2fce12
[DEBUG] 2020-11-30 11:28:34.805 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-11-30 11:28:34.821 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-11-30 11:28:34.845 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 11:28:34.861 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 11:28:34.878 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-11-30 11:28:34.916 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-11-30 11:28:34.938 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-11-30 11:28:35.002 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 11:28:35.015 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-11-30 11:28:35.025 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-11-30 11:28:35.079 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-11-30 11:28:35.082 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-11-30 11:28:35.093 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 11:28:35.150 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-11-30 11:28:35.373 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotelFull_test
[INFO ] 2020-11-30 11:28:35.385 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-11-30 11:28:35.391 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-11-30 11:28:37.565 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-11-30 11:28:39.150 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-11-30 11:28:39.166 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-11-30 11:28:39.170 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-11-30 11:28:39.754 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-11-30 11:28:39.957 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-11-30 11:28:40.730 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-11-30 11:28:41.159 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-11-30 11:28:41.170 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b8aaeab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d1bdd4a]
[DEBUG] 2020-11-30 11:28:41.741 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-11-30 11:28:42.086 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:28:42.151 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-11-30 11:28:42.154 [main] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-11-30 11:28:42.344 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.366 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:28:42.384 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-11-30 11:28:42.405 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:28:42.445 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:28:42.484 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:28:42.490 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.491 [main] PropertyBinder - MetadataSourceProcessor property Password with lazy=false
[DEBUG] 2020-11-30 11:28:42.491 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:Password]
[DEBUG] 2020-11-30 11:28:42.492 [main] SimpleValueBinder - building SimpleValue for Password
[DEBUG] 2020-11-30 11:28:42.492 [main] PropertyBinder - Building property Password
[DEBUG] 2020-11-30 11:28:42.493 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.497 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-11-30 11:28:42.502 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:address]
[DEBUG] 2020-11-30 11:28:42.504 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-11-30 11:28:42.507 [main] PropertyBinder - Building property address
[DEBUG] 2020-11-30 11:28:42.508 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=details, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.539 [main] PropertyBinder - MetadataSourceProcessor property details with lazy=false
[DEBUG] 2020-11-30 11:28:42.540 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:details]
[DEBUG] 2020-11-30 11:28:42.541 [main] SimpleValueBinder - building SimpleValue for details
[DEBUG] 2020-11-30 11:28:42.549 [main] PropertyBinder - Building property details
[DEBUG] 2020-11-30 11:28:42.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.554 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-11-30 11:28:42.554 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:email]
[DEBUG] 2020-11-30 11:28:42.555 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-11-30 11:28:42.565 [main] PropertyBinder - Building property email
[DEBUG] 2020-11-30 11:28:42.565 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.566 [main] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-11-30 11:28:42.572 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-11-30 11:28:42.572 [main] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-11-30 11:28:42.573 [main] PropertyBinder - Building property first_name
[DEBUG] 2020-11-30 11:28:42.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.574 [main] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-11-30 11:28:42.574 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-11-30 11:28:42.589 [main] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-11-30 11:28:42.590 [main] PropertyBinder - Building property last_name
[DEBUG] 2020-11-30 11:28:42.595 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.602 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-11-30 11:28:42.603 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:phone]
[DEBUG] 2020-11-30 11:28:42.607 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-11-30 11:28:42.608 [main] PropertyBinder - Building property phone
[DEBUG] 2020-11-30 11:28:42.650 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:28:42.653 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.678 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.752 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.755 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.756 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:28:42.760 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:28:42.760 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:28:42.761 [main] CollectionBinder - Collection role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:42.772 [main] PropertyBinder - Building property reservations
[DEBUG] 2020-11-30 11:28:42.773 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:28:42.774 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.775 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.776 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.777 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.778 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:28:42.779 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:28:42.779 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:28:42.779 [main] CollectionBinder - Collection role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:42.779 [main] PropertyBinder - Building property roles
[DEBUG] 2020-11-30 11:28:42.780 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.780 [main] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-11-30 11:28:42.780 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-11-30 11:28:42.780 [main] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-11-30 11:28:42.781 [main] PropertyBinder - Building property user_name
[DEBUG] 2020-11-30 11:28:42.782 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Role
[DEBUG] 2020-11-30 11:28:42.785 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:28:42.785 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-11-30 11:28:42.786 [main] EntityBinder - Bind entity hote.entity.Role on table role
[DEBUG] 2020-11-30 11:28:42.816 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.817 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:28:42.817 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:id]
[DEBUG] 2020-11-30 11:28:42.820 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:28:42.821 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:28:42.821 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:28:42.822 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.827 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-11-30 11:28:42.828 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:roleName]
[DEBUG] 2020-11-30 11:28:42.828 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-11-30 11:28:42.828 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-11-30 11:28:42.829 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:28:42.835 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.845 [main] PropertyBinder - Building property user
[DEBUG] 2020-11-30 11:28:42.846 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.846 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-11-30 11:28:42.847 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:userName]
[DEBUG] 2020-11-30 11:28:42.847 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-11-30 11:28:42.847 [main] PropertyBinder - Building property userName
[DEBUG] 2020-11-30 11:28:42.847 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:28:42.850 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:28:42.850 [main] EntityBinder - Import with entity name Reservation
[DEBUG] 2020-11-30 11:28:42.851 [main] EntityBinder - Bind entity hote.entity.Reservation on table reservation
[DEBUG] 2020-11-30 11:28:42.861 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.861 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:28:42.862 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:id]
[DEBUG] 2020-11-30 11:28:42.862 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:28:42.862 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:28:42.863 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:28:42.867 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.874 [main] PropertyBinder - MetadataSourceProcessor property end_date with lazy=false
[DEBUG] 2020-11-30 11:28:42.877 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:end_date]
[DEBUG] 2020-11-30 11:28:42.878 [main] SimpleValueBinder - building SimpleValue for end_date
[DEBUG] 2020-11-30 11:28:42.880 [main] PropertyBinder - Building property end_date
[DEBUG] 2020-11-30 11:28:42.880 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:28:42.882 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.882 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.884 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.885 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.885 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:28:42.888 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:28:42.888 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:28:42.888 [main] CollectionBinder - Collection role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:42.889 [main] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-11-30 11:28:42.890 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=start_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.891 [main] PropertyBinder - MetadataSourceProcessor property start_date with lazy=false
[DEBUG] 2020-11-30 11:28:42.891 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:start_date]
[DEBUG] 2020-11-30 11:28:42.891 [main] SimpleValueBinder - building SimpleValue for start_date
[DEBUG] 2020-11-30 11:28:42.891 [main] PropertyBinder - Building property start_date
[DEBUG] 2020-11-30 11:28:42.891 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=total_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.891 [main] PropertyBinder - MetadataSourceProcessor property total_price with lazy=false
[DEBUG] 2020-11-30 11:28:42.891 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:total_price]
[DEBUG] 2020-11-30 11:28:42.892 [main] SimpleValueBinder - building SimpleValue for total_price
[DEBUG] 2020-11-30 11:28:42.893 [main] PropertyBinder - Building property total_price
[DEBUG] 2020-11-30 11:28:42.893 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='guest_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:28:42.895 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.897 [main] PropertyBinder - Building property user
[DEBUG] 2020-11-30 11:28:42.897 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Room
[DEBUG] 2020-11-30 11:28:42.897 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:28:42.897 [main] EntityBinder - Import with entity name Room
[DEBUG] 2020-11-30 11:28:42.897 [main] EntityBinder - Bind entity hote.entity.Room on table room
[DEBUG] 2020-11-30 11:28:42.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.903 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:28:42.903 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:id]
[DEBUG] 2020-11-30 11:28:42.904 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:28:42.904 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:28:42.904 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:28:42.906 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=Avalable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.906 [main] PropertyBinder - MetadataSourceProcessor property Avalable with lazy=false
[DEBUG] 2020-11-30 11:28:42.906 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:Avalable]
[DEBUG] 2020-11-30 11:28:42.906 [main] SimpleValueBinder - building SimpleValue for Avalable
[DEBUG] 2020-11-30 11:28:42.910 [main] PropertyBinder - Building property Avalable
[DEBUG] 2020-11-30 11:28:42.912 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=current_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.912 [main] PropertyBinder - MetadataSourceProcessor property current_price with lazy=false
[DEBUG] 2020-11-30 11:28:42.912 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:current_price]
[DEBUG] 2020-11-30 11:28:42.912 [main] SimpleValueBinder - building SimpleValue for current_price
[DEBUG] 2020-11-30 11:28:42.913 [main] PropertyBinder - Building property current_price
[DEBUG] 2020-11-30 11:28:42.915 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.915 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-11-30 11:28:42.915 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:description]
[DEBUG] 2020-11-30 11:28:42.916 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-11-30 11:28:42.916 [main] PropertyBinder - Building property description
[DEBUG] 2020-11-30 11:28:42.920 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:28:42.921 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.923 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.924 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.925 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.925 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:28:42.926 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:28:42.927 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:28:42.933 [main] CollectionBinder - Collection role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:28:42.933 [main] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-11-30 11:28:42.936 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=room_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.936 [main] PropertyBinder - MetadataSourceProcessor property room_name with lazy=false
[DEBUG] 2020-11-30 11:28:42.936 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:room_name]
[DEBUG] 2020-11-30 11:28:42.936 [main] SimpleValueBinder - building SimpleValue for room_name
[DEBUG] 2020-11-30 11:28:42.936 [main] PropertyBinder - Building property room_name
[DEBUG] 2020-11-30 11:28:42.937 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:28:42.937 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:28:42.937 [main] EntityBinder - Import with entity name Roomreserved
[DEBUG] 2020-11-30 11:28:42.937 [main] EntityBinder - Bind entity hote.entity.RoomReserved on table room_reserved
[DEBUG] 2020-11-30 11:28:42.942 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.944 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:28:42.944 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:id]
[DEBUG] 2020-11-30 11:28:42.944 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:28:42.944 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:28:42.945 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:28:42.945 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.946 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-11-30 11:28:42.946 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:price]
[DEBUG] 2020-11-30 11:28:42.947 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-11-30 11:28:42.947 [main] PropertyBinder - Building property price
[DEBUG] 2020-11-30 11:28:42.947 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservation_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:28:42.947 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=reservation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.947 [main] PropertyBinder - Building property reservation
[DEBUG] 2020-11-30 11:28:42.947 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='room_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:28:42.947 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=room, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:28:42.948 [main] PropertyBinder - Building property room
[DEBUG] 2020-11-30 11:28:42.956 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:28:42.959 [main] SimpleValueBinder - Starting fillSimpleValue for Password
[DEBUG] 2020-11-30 11:28:42.960 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-11-30 11:28:42.961 [main] SimpleValueBinder - Starting fillSimpleValue for details
[DEBUG] 2020-11-30 11:28:42.962 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-11-30 11:28:42.966 [main] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-11-30 11:28:42.966 [main] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-11-30 11:28:42.966 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-11-30 11:28:42.966 [main] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-11-30 11:28:42.966 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:28:42.968 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-11-30 11:28:42.968 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-11-30 11:28:42.968 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:28:42.969 [main] SimpleValueBinder - Starting fillSimpleValue for end_date
[DEBUG] 2020-11-30 11:28:42.969 [main] SimpleValueBinder - Starting fillSimpleValue for start_date
[DEBUG] 2020-11-30 11:28:42.969 [main] SimpleValueBinder - Starting fillSimpleValue for total_price
[DEBUG] 2020-11-30 11:28:42.969 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:28:42.969 [main] SimpleValueBinder - Starting fillSimpleValue for Avalable
[DEBUG] 2020-11-30 11:28:42.969 [main] SimpleValueBinder - Starting fillSimpleValue for current_price
[DEBUG] 2020-11-30 11:28:42.970 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-11-30 11:28:42.970 [main] SimpleValueBinder - Starting fillSimpleValue for room_name
[DEBUG] 2020-11-30 11:28:42.971 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:28:42.971 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-11-30 11:28:42.995 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-11-30 11:28:42.995 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-11-30 11:28:42.999 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [reservation]
[DEBUG] 2020-11-30 11:28:43.000 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room]
[DEBUG] 2020-11-30 11:28:43.000 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room_reserved]
[DEBUG] 2020-11-30 11:28:43.000 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:43.001 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.reservations through a foreign key
[DEBUG] 2020-11-30 11:28:43.005 [main] CollectionBinder - Mapping collection: hote.entity.User.reservations -> reservation
[DEBUG] 2020-11-30 11:28:43.011 [main] TableBinder - Retrieving property hote.entity.Reservation.user
[DEBUG] 2020-11-30 11:28:43.018 [main] CollectionSecondPass - Mapped collection key: guest_id, one-to-many: hote.entity.Reservation
[DEBUG] 2020-11-30 11:28:43.018 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:43.019 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.roles through a foreign key
[DEBUG] 2020-11-30 11:28:43.019 [main] CollectionBinder - Mapping collection: hote.entity.User.roles -> role
[DEBUG] 2020-11-30 11:28:43.019 [main] TableBinder - Retrieving property hote.entity.Role.user
[DEBUG] 2020-11-30 11:28:43.020 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Role
[DEBUG] 2020-11-30 11:28:43.036 [main] CollectionSecondPass - Second pass for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:43.037 [main] CollectionBinder - Binding a OneToMany: hote.entity.Reservation.roomReserveds through a foreign key
[DEBUG] 2020-11-30 11:28:43.042 [main] CollectionBinder - Mapping collection: hote.entity.Reservation.roomReserveds -> room_reserved
[DEBUG] 2020-11-30 11:28:43.043 [main] TableBinder - Retrieving property hote.entity.RoomReserved.reservation
[DEBUG] 2020-11-30 11:28:43.051 [main] CollectionSecondPass - Mapped collection key: reservation_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:28:43.051 [main] CollectionSecondPass - Second pass for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:28:43.051 [main] CollectionBinder - Binding a OneToMany: hote.entity.Room.roomReserveds through a foreign key
[DEBUG] 2020-11-30 11:28:43.051 [main] CollectionBinder - Mapping collection: hote.entity.Room.roomReserveds -> room_reserved
[DEBUG] 2020-11-30 11:28:43.052 [main] TableBinder - Retrieving property hote.entity.RoomReserved.room
[DEBUG] 2020-11-30 11:28:43.052 [main] CollectionSecondPass - Mapped collection key: room_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:28:43.052 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:28:43.053 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:28:43.054 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:28:43.054 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-11-30 11:28:43.081 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:28:43.081 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:28:43.081 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:28:43.082 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-11-30 11:28:43.258 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-11-30 11:28:43.271 [main] Settings - SessionFactory name : null
[DEBUG] 2020-11-30 11:28:43.276 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-11-30 11:28:43.276 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-11-30 11:28:43.277 [main] Settings - Statistics: disabled
[DEBUG] 2020-11-30 11:28:43.278 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-11-30 11:28:43.278 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-11-30 11:28:43.278 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-11-30 11:28:43.279 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-11-30 11:28:43.279 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-11-30 11:28:43.279 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-11-30 11:28:43.279 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-11-30 11:28:43.285 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-11-30 11:28:43.285 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - Named query checking : enabled
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-11-30 11:28:43.286 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-11-30 11:28:43.291 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-11-30 11:28:43.291 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-11-30 11:28:43.291 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-11-30 11:28:43.291 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-11-30 11:28:43.292 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-11-30 11:28:43.293 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-11-30 11:28:43.293 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-11-30 11:28:43.704 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-11-30 11:28:43.847 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-11-30 11:28:43.852 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=/home/student/IdeaProjects/HotelWebsie/target/surefire/surefirebooter8436946876085032025.jar /home/student/IdeaProjects/HotelWebsie/target/surefire/surefire4150927593564354768tmp /home/student/IdeaProjects/HotelWebsie/target/surefire/surefire_017836357371849116387tmp, jdk.debug=release, surefire.test.class.path=/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, basedir=/home/student/IdeaProjects/HotelWebsie, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/student/IdeaProjects/HotelWebsie/target/surefire/surefirebooter8436946876085032025.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotelFull_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, localRepository=/home/student/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, idea.version=2020.2.4, java.version=11.0.8, user.dir=/home/student/IdeaProjects/HotelWebsie, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7185e611, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hotelFull_test, java.class.version=55.0}
[DEBUG] 2020-11-30 11:28:43.944 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-11-30 11:28:43.944 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-11-30 11:28:43.948 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-11-30 11:28:43.949 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b8aaeab] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@35dcd032]
[DEBUG] 2020-11-30 11:28:44.330 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:28:44.332 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:28:44.545 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:28:44.546 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:28:46.547 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:28:46.548 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:28:46.552 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:28:46.552 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:28:46.922 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:28:46.924 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:28:46.929 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:28:46.930 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:28:47.203 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:28:47.208 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:28:47.218 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:28:47.218 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:28:47.774 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:28:47.775 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:28:47.777 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:28:47.777 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:28:47.935 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:47.937 [main] AbstractCollectionPersister -  Row insert: update reservation set guest_id=? where id=?
[DEBUG] 2020-11-30 11:28:47.938 [main] AbstractCollectionPersister -  Row update: update reservation set  where id=?
[DEBUG] 2020-11-30 11:28:47.938 [main] AbstractCollectionPersister -  Row delete: update reservation set guest_id=null where guest_id=? and id=?
[DEBUG] 2020-11-30 11:28:47.938 [main] AbstractCollectionPersister -  One-shot delete: update reservation set guest_id=null where guest_id=?
[DEBUG] 2020-11-30 11:28:47.940 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:47.940 [main] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-11-30 11:28:47.940 [main] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-11-30 11:28:47.940 [main] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-11-30 11:28:47.940 [main] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-11-30 11:28:47.941 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:47.941 [main] AbstractCollectionPersister -  Row insert: update room_reserved set reservation_id=? where id=?
[DEBUG] 2020-11-30 11:28:47.941 [main] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-11-30 11:28:47.941 [main] AbstractCollectionPersister -  Row delete: update room_reserved set reservation_id=null where reservation_id=? and id=?
[DEBUG] 2020-11-30 11:28:47.941 [main] AbstractCollectionPersister -  One-shot delete: update room_reserved set reservation_id=null where reservation_id=?
[DEBUG] 2020-11-30 11:28:47.942 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:28:47.942 [main] AbstractCollectionPersister -  Row insert: update room_reserved set room_id=? where id=?
[DEBUG] 2020-11-30 11:28:47.942 [main] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-11-30 11:28:47.942 [main] AbstractCollectionPersister -  Row delete: update room_reserved set room_id=null where room_id=? and id=?
[DEBUG] 2020-11-30 11:28:47.947 [main] AbstractCollectionPersister -  One-shot delete: update room_reserved set room_id=null where room_id=?
[DEBUG] 2020-11-30 11:28:47.983 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Reservation
[DEBUG] 2020-11-30 11:28:47.984 [main] AbstractEntityPersister -  Version select: select id from reservation where id =?
[DEBUG] 2020-11-30 11:28:47.984 [main] AbstractEntityPersister -  Snapshot select: select reservatio_.id, reservatio_.end_date as end_date2_0_, reservatio_.start_date as start_da3_0_, reservatio_.total_price as total_pr4_0_, reservatio_.guest_id as guest_id5_0_ from reservation reservatio_ where reservatio_.id=?
[DEBUG] 2020-11-30 11:28:47.984 [main] AbstractEntityPersister -  Insert 0: insert into reservation (end_date, start_date, total_price, guest_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:47.988 [main] AbstractEntityPersister -  Update 0: update reservation set end_date=?, start_date=?, total_price=?, guest_id=? where id=?
[DEBUG] 2020-11-30 11:28:47.988 [main] AbstractEntityPersister -  Delete 0: delete from reservation where id=?
[DEBUG] 2020-11-30 11:28:47.990 [main] AbstractEntityPersister -  Identity insert: insert into reservation (end_date, start_date, total_price, guest_id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:48.282 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9147ba2]
[DEBUG] 2020-11-30 11:28:48.290 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:28:48.290 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:28:48.340 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4045fd1f]
[DEBUG] 2020-11-30 11:28:48.361 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a62d697]
[DEBUG] 2020-11-30 11:28:48.383 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:28:48.384 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:48.388 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:48.409 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:28:48.416 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac9b66b]
[DEBUG] 2020-11-30 11:28:48.421 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-11-30 11:28:48.426 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-11-30 11:28:48.426 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-11-30 11:28:48.430 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:28:48.431 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:28:48.431 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-11-30 11:28:48.435 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:28:48.435 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:28:48.438 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:28:48.443 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@738a39cc]
[DEBUG] 2020-11-30 11:28:48.446 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:28:48.447 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:28:48.447 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:28:48.454 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:28:48.456 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:28:48.457 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:28:48.457 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:28:48.459 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:28:48.460 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-11-30 11:28:48.460 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:28:48.460 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38e7860c]
[DEBUG] 2020-11-30 11:28:48.461 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62158991]
[DEBUG] 2020-11-30 11:28:48.461 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 11:28:48.462 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 11:28:48.462 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 11:28:48.462 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-11-30 11:28:48.463 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:28:48.476 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:48.680 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:48.775 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:28:48.791 [main] EntityLoader - Static select for entity hote.entity.Reservation [NONE]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:28:48.792 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b28cff]
[DEBUG] 2020-11-30 11:28:48.793 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:28:48.793 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:28:48.794 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bfd97fb]
[DEBUG] 2020-11-30 11:28:48.794 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bfdaa7a]
[DEBUG] 2020-11-30 11:28:48.797 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:28:48.804 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:48.804 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:48.806 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:28:48.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73be4cdd]
[DEBUG] 2020-11-30 11:28:48.810 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-11-30 11:28:48.811 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-11-30 11:28:48.811 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-11-30 11:28:48.816 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:28:48.816 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:28:48.817 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-11-30 11:28:48.818 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:28:48.818 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:28:48.818 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:28:48.823 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@638977e0]
[DEBUG] 2020-11-30 11:28:48.824 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:28:48.832 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:28:48.832 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:28:48.832 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:28:48.832 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:28:48.833 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:28:48.833 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:28:48.833 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:28:48.833 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-11-30 11:28:48.834 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:28:48.834 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c1a8529]
[DEBUG] 2020-11-30 11:28:48.834 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7865d6]
[DEBUG] 2020-11-30 11:28:48.835 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 11:28:48.835 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 11:28:48.835 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 11:28:48.835 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-11-30 11:28:48.835 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:28:48.840 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:48.841 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:48.857 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:28:48.862 [main] EntityLoader - Static select for entity hote.entity.Reservation [READ]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:28:49.001 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:28:49.004 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:28:49.005 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Room
[DEBUG] 2020-11-30 11:28:49.006 [main] AbstractEntityPersister -  Version select: select id from room where id =?
[DEBUG] 2020-11-30 11:28:49.006 [main] AbstractEntityPersister -  Snapshot select: select room_.id, room_.Avalable as Avalable2_2_, room_.current_price as current_3_2_, room_.description as descript4_2_, room_.room_name as room_nam5_2_ from room room_ where room_.id=?
[DEBUG] 2020-11-30 11:28:49.006 [main] AbstractEntityPersister -  Insert 0: insert into room (Avalable, current_price, description, room_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:49.006 [main] AbstractEntityPersister -  Update 0: update room set Avalable=?, current_price=?, description=?, room_name=? where id=?
[DEBUG] 2020-11-30 11:28:49.011 [main] AbstractEntityPersister -  Delete 0: delete from room where id=?
[DEBUG] 2020-11-30 11:28:49.011 [main] AbstractEntityPersister -  Identity insert: insert into room (Avalable, current_price, description, room_name) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:49.021 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39afe59f]
[DEBUG] 2020-11-30 11:28:49.035 [main] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-11-30 11:28:49.035 [main] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-11-30 11:28:49.036 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 11:28:49.036 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:28:49.036 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ede035e]
[DEBUG] 2020-11-30 11:28:49.037 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43756cb]
[DEBUG] 2020-11-30 11:28:49.037 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:28:49.037 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:49.038 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70ecf57b]
[DEBUG] 2020-11-30 11:28:49.038 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-11-30 11:28:49.038 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.043 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.043 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-11-30 11:28:49.043 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-11-30 11:28:49.043 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-11-30 11:28:49.043 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a336906]
[DEBUG] 2020-11-30 11:28:49.044 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:28:49.044 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-11-30 11:28:49.047 [main] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-11-30 11:28:49.048 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.053 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.070 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:28:49.085 [main] EntityLoader - Static select for entity hote.entity.Room [NONE]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-11-30 11:28:49.086 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62054faf]
[DEBUG] 2020-11-30 11:28:49.089 [main] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-11-30 11:28:49.090 [main] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-11-30 11:28:49.090 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 11:28:49.090 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:28:49.098 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20f63ddc]
[DEBUG] 2020-11-30 11:28:49.105 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@210c1b9d]
[DEBUG] 2020-11-30 11:28:49.112 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:28:49.113 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:49.116 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24f177f5]
[DEBUG] 2020-11-30 11:28:49.117 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-11-30 11:28:49.127 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.127 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.127 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-11-30 11:28:49.127 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-11-30 11:28:49.127 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-11-30 11:28:49.127 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed691fd]
[DEBUG] 2020-11-30 11:28:49.127 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:28:49.127 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-11-30 11:28:49.127 [main] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-11-30 11:28:49.127 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.127 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.128 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:28:49.128 [main] EntityLoader - Static select for entity hote.entity.Room [READ]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-11-30 11:28:49.128 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-11-30 11:28:49.129 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-11-30 11:28:49.129 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:28:49.129 [main] AbstractEntityPersister -  Version select: select id from room_reserved where id =?
[DEBUG] 2020-11-30 11:28:49.129 [main] AbstractEntityPersister -  Snapshot select: select roomreserv_.id, roomreserv_.price as price2_3_, roomreserv_.reservation_id as reservat3_3_, roomreserv_.room_id as room_id4_3_ from room_reserved roomreserv_ where roomreserv_.id=?
[DEBUG] 2020-11-30 11:28:49.129 [main] AbstractEntityPersister -  Insert 0: insert into room_reserved (price, reservation_id, room_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:49.129 [main] AbstractEntityPersister -  Update 0: update room_reserved set price=?, reservation_id=?, room_id=? where id=?
[DEBUG] 2020-11-30 11:28:49.129 [main] AbstractEntityPersister -  Delete 0: delete from room_reserved where id=?
[DEBUG] 2020-11-30 11:28:49.129 [main] AbstractEntityPersister -  Identity insert: insert into room_reserved (price, reservation_id, room_id) values (?, ?, ?)
[DEBUG] 2020-11-30 11:28:49.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efcba00]
[DEBUG] 2020-11-30 11:28:49.129 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:28:49.129 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:28:49.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@569a26ab]
[DEBUG] 2020-11-30 11:28:49.129 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:28:49.129 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.129 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.129 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:28:49.129 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:28:49.129 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:28:49.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77ce8bc5]
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:28:49.130 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28e48b65]
[DEBUG] 2020-11-30 11:28:49.130 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cde0c69]
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:28:49.130 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:28:49.130 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f4d2294]
[DEBUG] 2020-11-30 11:28:49.140 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:28:49.140 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:28:49.141 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:28:49.141 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:28:49.141 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:28:49.141 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:28:49.141 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.141 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.146 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-11-30 11:28:49.146 [main] EntityLoader - Static select for entity hote.entity.RoomReserved [NONE]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:28:49.147 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e0516a3]
[DEBUG] 2020-11-30 11:28:49.147 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:28:49.148 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:28:49.148 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@347b370c]
[DEBUG] 2020-11-30 11:28:49.148 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:28:49.148 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.148 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.148 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:28:49.148 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:28:49.148 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:28:49.149 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20184ade]
[DEBUG] 2020-11-30 11:28:49.149 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:28:49.149 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:28:49.149 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:28:49.151 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:28:49.153 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:28:49.154 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:28:49.154 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:28:49.154 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:28:49.154 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:28:49.154 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:28:49.154 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5855b0ed]
[DEBUG] 2020-11-30 11:28:49.154 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@92fd091]
[DEBUG] 2020-11-30 11:28:49.155 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:28:49.159 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:28:49.160 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0325d0]
[DEBUG] 2020-11-30 11:28:49.164 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:28:49.164 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:28:49.164 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:28:49.167 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:28:49.167 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:28:49.167 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:28:49.167 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.168 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.170 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-11-30 11:28:49.175 [main] EntityLoader - Static select for entity hote.entity.RoomReserved [READ]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:28:49.177 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:28:49.180 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:28:49.183 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-11-30 11:28:49.184 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-11-30 11:28:49.184 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.Password as Password2_4_, user_.address as address3_4_, user_.details as details4_4_, user_.email as email5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.phone as phone8_4_, user_.user_name as user_nam9_4_ from user user_ where user_.id=?
[DEBUG] 2020-11-30 11:28:49.184 [main] AbstractEntityPersister -  Insert 0: insert into user (Password, address, details, email, first_name, last_name, phone, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:49.184 [main] AbstractEntityPersister -  Update 0: update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-11-30 11:28:49.184 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-11-30 11:28:49.184 [main] AbstractEntityPersister -  Identity insert: insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:49.184 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a33316]
[DEBUG] 2020-11-30 11:28:49.187 [main] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-11-30 11:28:49.187 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-11-30 11:28:49.187 [main] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-11-30 11:28:49.187 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 11:28:49.187 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-30 11:28:49.187 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-30 11:28:49.187 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-11-30 11:28:49.187 [main] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-11-30 11:28:49.188 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77204651]
[DEBUG] 2020-11-30 11:28:49.188 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51cca357]
[DEBUG] 2020-11-30 11:28:49.190 [main] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-11-30 11:28:49.191 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-11-30 11:28:49.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@340b4f07]
[DEBUG] 2020-11-30 11:28:49.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e994ca]
[DEBUG] 2020-11-30 11:28:49.191 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-11-30 11:28:49.192 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:49.195 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:49.200 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-11-30 11:28:49.203 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11295cb1]
[DEBUG] 2020-11-30 11:28:49.205 [main] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-11-30 11:28:49.205 [main] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-11-30 11:28:49.205 [main] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-11-30 11:28:49.210 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-11-30 11:28:49.214 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 11:28:49.215 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5daad59a]
[DEBUG] 2020-11-30 11:28:49.216 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5256fbc]
[DEBUG] 2020-11-30 11:28:49.223 [main] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 11:28:49.223 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 11:28:49.224 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 11:28:49.224 [main] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-11-30 11:28:49.224 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-30 11:28:49.226 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.232 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.241 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:28:49.242 [main] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:49.242 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ef1d58]
[DEBUG] 2020-11-30 11:28:49.243 [main] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-11-30 11:28:49.243 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-11-30 11:28:49.243 [main] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-11-30 11:28:49.243 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 11:28:49.244 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-30 11:28:49.244 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-30 11:28:49.244 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-11-30 11:28:49.244 [main] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-11-30 11:28:49.244 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f2c9e8]
[DEBUG] 2020-11-30 11:28:49.244 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@457692cb]
[DEBUG] 2020-11-30 11:28:49.245 [main] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-11-30 11:28:49.248 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-11-30 11:28:49.251 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dd44289]
[DEBUG] 2020-11-30 11:28:49.251 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cc56b32]
[DEBUG] 2020-11-30 11:28:49.255 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-11-30 11:28:49.255 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:49.255 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:28:49.256 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-11-30 11:28:49.256 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a543e09]
[DEBUG] 2020-11-30 11:28:49.256 [main] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-11-30 11:28:49.256 [main] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-11-30 11:28:49.256 [main] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-11-30 11:28:49.261 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-11-30 11:28:49.262 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 11:28:49.264 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d0f548a]
[DEBUG] 2020-11-30 11:28:49.264 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc3df43]
[DEBUG] 2020-11-30 11:28:49.268 [main] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 11:28:49.268 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 11:28:49.274 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 11:28:49.274 [main] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-11-30 11:28:49.274 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-30 11:28:49.280 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.280 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.286 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:28:49.298 [main] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:49.300 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:49.312 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:49.316 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Role
[DEBUG] 2020-11-30 11:28:49.317 [main] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-11-30 11:28:49.317 [main] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_1_, role_.user_id as user_id4_1_, role_.user_name as user_nam3_1_ from role role_ where role_.id=?
[DEBUG] 2020-11-30 11:28:49.317 [main] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:49.317 [main] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2020-11-30 11:28:49.317 [main] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-11-30 11:28:49.317 [main] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2020-11-30 11:28:49.317 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@900649e]
[DEBUG] 2020-11-30 11:28:49.318 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:28:49.318 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:28:49.318 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@526893f]
[DEBUG] 2020-11-30 11:28:49.318 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:28:49.325 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:28:49.325 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:28:49.325 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:28:49.325 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:28:49.325 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:28:49.325 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:28:49.325 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:28:49.326 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37caecda]
[DEBUG] 2020-11-30 11:28:49.326 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be7c052]
[DEBUG] 2020-11-30 11:28:49.326 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-11-30 11:28:49.326 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-11-30 11:28:49.326 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35554635]
[DEBUG] 2020-11-30 11:28:49.331 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f5f59d]
[DEBUG] 2020-11-30 11:28:49.331 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-11-30 11:28:49.331 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-11-30 11:28:49.331 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-11-30 11:28:49.331 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-11-30 11:28:49.332 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:28:49.332 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 11:28:49.332 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:28:49.333 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:28:49.333 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.333 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.335 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:28:49.335 [main] EntityLoader - Static select for entity hote.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-11-30 11:28:49.335 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74431832]
[DEBUG] 2020-11-30 11:28:49.335 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:28:49.336 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:28:49.343 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70592729]
[DEBUG] 2020-11-30 11:28:49.343 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:28:49.343 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:28:49.343 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:28:49.343 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:28:49.343 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:28:49.344 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:28:49.345 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:28:49.345 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:28:49.345 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43b172e3]
[DEBUG] 2020-11-30 11:28:49.346 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39695803]
[DEBUG] 2020-11-30 11:28:49.346 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-11-30 11:28:49.346 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-11-30 11:28:49.347 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cb849b2]
[DEBUG] 2020-11-30 11:28:49.347 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe2a366]
[DEBUG] 2020-11-30 11:28:49.347 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-11-30 11:28:49.347 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-11-30 11:28:49.349 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-11-30 11:28:49.349 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-11-30 11:28:49.349 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:28:49.349 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 11:28:49.349 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:28:49.350 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:28:49.350 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.353 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.358 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:28:49.364 [main] EntityLoader - Static select for entity hote.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-11-30 11:28:49.371 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 11:28:49.372 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 11:28:49.397 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6106dfb6]
[DEBUG] 2020-11-30 11:28:49.398 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14239223]
[DEBUG] 2020-11-30 11:28:49.403 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:28:49.403 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:28:49.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b8cf049]
[DEBUG] 2020-11-30 11:28:49.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2336cd91]
[DEBUG] 2020-11-30 11:28:49.413 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:28:49.414 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:28:49.414 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:28:49.415 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 11:28:49.423 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.446 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.450 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.reservations)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:0>, path=[hote.entity.User.reservations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=[hote.entity.User.reservations].<elements>)
             - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:2>, path=[hote.entity.User.reservations].<elements>.roomReserveds)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:3>, path=[hote.entity.User.reservations].<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.reservations)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {guest_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-11-30 11:28:49.453 [main] CollectionLoader - Static select for collection hote.entity.User.reservations: select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:28:49.454 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46d148bd]
[DEBUG] 2020-11-30 11:28:49.454 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f41a81]
[DEBUG] 2020-11-30 11:28:49.460 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:28:49.460 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:28:49.460 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 11:28:49.461 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:28:49.467 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.475 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.479 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:0>, path=[hote.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:1>, path=[hote.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-30 11:28:49.487 [main] CollectionLoader - Static select for collection hote.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:28:49.488 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@563ada5]
[DEBUG] 2020-11-30 11:28:49.488 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12548f9a]
[DEBUG] 2020-11-30 11:28:49.488 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:28:49.488 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:28:49.489 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation
[DEBUG] 2020-11-30 11:28:49.489 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:28:49.489 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@185339ed]
[DEBUG] 2020-11-30 11:28:49.492 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:28:49.492 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:28:49.493 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:28:49.498 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:28:49.501 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:28:49.507 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:28:49.508 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.512 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.528 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Reservation.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Reservation.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Reservation.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:2>, path=[hote.entity.Reservation.roomReserveds].<elements>.room)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Reservation.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {reservat3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(room)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Room)
                      - SQL table alias mapping - room1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-11-30 11:28:49.534 [main] CollectionLoader - Static select for collection hote.entity.Reservation.roomReserveds: select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:28:49.535 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4470106b]
[DEBUG] 2020-11-30 11:28:49.535 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@690ed13a]
[DEBUG] 2020-11-30 11:28:49.536 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:28:49.536 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:28:49.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c4db77]
[DEBUG] 2020-11-30 11:28:49.537 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:28:49.537 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.537 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:49.538 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:28:49.538 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:28:49.538 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:28:49.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b2e931]
[DEBUG] 2020-11-30 11:28:49.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:28:49.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:28:49.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:28:49.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:28:49.546 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:28:49.547 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:28:49.547 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:28:49.547 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:28:49.547 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:28:49.552 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:28:49.552 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e89eba7]
[DEBUG] 2020-11-30 11:28:49.553 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc25ac2]
[DEBUG] 2020-11-30 11:28:49.553 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:28:49.553 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:28:49.554 [main] MetamodelGraphWalker - Property path deemed to be circular : room
[DEBUG] 2020-11-30 11:28:49.554 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:28:49.557 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:28:49.566 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Room.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Room.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Room.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=[hote.entity.Room.roomReserveds].<elements>.reservation)
                - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:3>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user)
                   - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:4>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:5>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Room.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {room_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(reservation)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}

[DEBUG] 2020-11-30 11:28:49.600 [main] CollectionLoader - Static select for collection hote.entity.Room.roomReserveds: select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:28:49.847 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-11-30 11:28:49.850 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-11-30 11:28:49.854 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-11-30 11:28:49.903 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-11-30 11:28:49.904 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-11-30 11:28:49.913 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-11-30 11:28:49.914 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-11-30 11:28:49.935 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@295f2d1b
[DEBUG] 2020-11-30 11:28:49.956 [main] SessionFactoryRegistry - Registering SessionFactory: f68d6aa4-efbf-4e5a-83b1-72171d7c06d1 (<unnamed>)
[DEBUG] 2020-11-30 11:28:49.957 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-11-30 11:28:50.316 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-11-30 11:28:50.429 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:50.515 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:50.527 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 11:28:50.564 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:50.574 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:50.579 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:50.580 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:28:50.580 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.580 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:28:50.580 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.580 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:28:50.580 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.580 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:28:50.580 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.581 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:28:50.581 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.581 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:28:50.581 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.581 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:28:50.581 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.581 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:50.582 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.585 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:50.586 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.586 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:28:50.586 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:50.587 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:50.588 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:50.589 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:50.593 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:50.594 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:50.594 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:50.594 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:50.594 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:50.597 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:50.597 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-11-30 11:28:50.599 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:50.625 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-11-30 11:28:50.626 [main] TransactionImpl - begin
[DEBUG] 2020-11-30 11:28:50.675 [main] TransactionImpl - committing
[DEBUG] 2020-11-30 11:28:50.676 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-11-30 11:28:50.676 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-11-30 11:28:50.688 [main] Collections - Collection dereferenced: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:50.696 [main] Collections - Collection dereferenced: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:50.705 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-11-30 11:28:50.705 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 2 removals to 2 collections
[DEBUG] 2020-11-30 11:28:50.713 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-11-30 11:28:50.714 [main] EntityPrinter - hote.entity.User{address=1014 8th street, baraboo, wi, reservations=[], phone=6049638522, user_name=jpatel1, roles=[], last_name=ptel, details=has reseasion, id=2, first_name=jackk, email=jate@some.com, Password=jpatel2}
[DEBUG] 2020-11-30 11:28:50.729 [main] SQL - delete from user where id=?
[DEBUG] 2020-11-30 11:28:50.752 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:50.759 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:50.759 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-11-30 11:28:50.766 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:50.781 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:50.783 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:50.783 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:50.783 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:50.784 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-11-30 11:28:50.784 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:50.954 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-11-30 11:28:50.959 [main] TransactionImpl - begin
[DEBUG] 2020-11-30 11:28:50.976 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-11-30 11:28:50.977 [main] SQL - insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:28:51.005 [main] IdentifierGeneratorHelper - Natively generated identity: 44
[DEBUG] 2020-11-30 11:28:51.006 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:51.012 [main] TransactionImpl - committing
[DEBUG] 2020-11-30 11:28:51.012 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-11-30 11:28:51.012 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-11-30 11:28:51.015 [main] Collections - Collection found: [hote.entity.User.reservations#44], was: [<unreferenced>] (initialized)
[DEBUG] 2020-11-30 11:28:51.015 [main] Collections - Collection found: [hote.entity.User.roles#44], was: [<unreferenced>] (initialized)
[DEBUG] 2020-11-30 11:28:51.015 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-11-30 11:28:51.015 [main] AbstractFlushingEventListener - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2020-11-30 11:28:51.015 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-11-30 11:28:51.015 [main] EntityPrinter - hote.entity.User{address=101 8th st, reservations=[], phone=60800000000, user_name=jackrobert, roles=[], last_name=robertson, details=hi, id=44, first_name=jack, email=some@some.com, Password=null}
[DEBUG] 2020-11-30 11:28:51.033 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:51.040 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:51.041 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:51.058 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:51.063 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 11:28:51.064 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#44]
[DEBUG] 2020-11-30 11:28:51.064 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#44]
[DEBUG] 2020-11-30 11:28:51.065 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#44]
[DEBUG] 2020-11-30 11:28:51.065 [main] TwoPhaseLoad - Processing attribute `Password` : value = null
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `address` : value = 101 8th st
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `details` : value = hi
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `email` : value = some@some.com
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jack
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `last_name` : value = robertson
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `phone` : value = 60800000000
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jackrobert
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:51.067 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#44]
[DEBUG] 2020-11-30 11:28:51.070 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:51.070 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:51.070 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#44]
[DEBUG] 2020-11-30 11:28:51.070 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:51.070 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:51.070 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#44]
[DEBUG] 2020-11-30 11:28:51.070 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:51.070 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:51.070 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#44
[DEBUG] 2020-11-30 11:28:51.070 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:51.500 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-11-30 11:28:51.612 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4adcc981
[DEBUG] 2020-11-30 11:28:51.804 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-11-30 11:28:51.862 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:28:51.909 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'hote'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-11-30 11:28:52.012 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-11-30 11:28:52.085 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-11-30 11:28:52.103 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:28:52.128 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-11-30 11:28:52.138 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-11-30 11:28:52.221 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-11-30 11:28:52.221 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-11-30 11:28:52.222 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}

[DEBUG] 2020-11-30 11:28:52.222 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:28:52.245 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-11-30 11:28:52.245 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_
[DEBUG] 2020-11-30 11:28:52.245 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:28:52.331 [main] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_
[DEBUG] 2020-11-30 11:28:52.356 [main] Loader - Result set row: 0
[DEBUG] 2020-11-30 11:28:52.358 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-30 11:28:52.362 [main] Loader - Result set row: 1
[DEBUG] 2020-11-30 11:28:52.362 [main] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:52.363 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-30 11:28:52.363 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-11-30 11:28:52.363 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.366 [main] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:28:52.366 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.366 [main] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-11-30 11:28:52.366 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:52.367 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.368 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:52.372 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.372 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-11-30 11:28:52.372 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.373 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-30 11:28:52.377 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:52.377 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:28:52.378 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.378 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:28:52.378 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.378 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:28:52.378 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.378 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:28:52.378 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.379 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:28:52.379 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.379 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:28:52.379 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.379 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:28:52.379 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.379 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:52.379 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.382 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:52.383 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.383 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:28:52.385 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.386 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:52.410 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:52.411 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:28:52.413 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:52.413 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:52.413 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:52.413 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:52.413 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:52.414 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:52.414 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:52.414 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:28:52.415 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:52.416 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:52.416 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:52.416 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:52.416 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:52.419 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:52.419 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:28:52.419 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:28:52.420 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:28:52.421 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:52.421 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:28:52.421 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:52.421 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:52.421 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:52.421 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:28:52.421 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:28:52.422 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:28:52.423 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:52.431 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:28:52.431 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:28:52.431 [main] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-11-30 11:28:52.431 [main] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.431 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:52.431 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.431 [main] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-11-30 11:28:52.432 [main] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.432 [main] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-11-30 11:28:52.432 [main] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.432 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 11:28:52.432 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.432 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:28:52.432 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:52.432 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:28:52.432 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:52.432 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:52.432 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:52.432 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:52.432 [main] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:28:52.438 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:52.438 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:52.443 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:52.446 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:28:52.446 [main] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-11-30 11:28:52.446 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.446 [main] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-11-30 11:28:52.446 [main] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.446 [main] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-11-30 11:28:52.446 [main] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:52.448 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:28:52.449 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:52.455 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:52.455 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:52.456 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:52.456 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:52.456 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:52.457 [main] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:28:52.462 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:52.462 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:52.464 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:52.464 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:28:52.524 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:52.525 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:28:52.525 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:52.525 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:52.545 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:53.212 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-11-30 11:28:53.216 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-11-30 11:28:53.222 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:28:53.225 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'last_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-11-30 11:28:53.226 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-11-30 11:28:53.227 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-11-30 11:28:53.227 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:28:53.232 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:28:53.238 [main] DotNode - getDataType() : last_name -> org.hibernate.type.StringType@7f79edee
[DEBUG] 2020-11-30 11:28:53.238 [main] FromReferenceNode - Resolved : generatedAlias0.last_name -> user0_.last_name
[DEBUG] 2020-11-30 11:28:53.240 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-11-30 11:28:53.240 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.last_name user0_.id last_name ) ? ) ) )
[DEBUG] 2020-11-30 11:28:53.240 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-11-30 11:28:53.240 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-11-30 11:28:53.243 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=last_name,dereferenceType=PRIMITIVE,getPropertyPath=last_name,path=generatedAlias0.last_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'last_name' {originalText=last_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7f79edee}

[DEBUG] 2020-11-30 11:28:53.243 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:28:53.243 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-11-30 11:28:53.243 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-11-30 11:28:53.243 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:28:53.263 [main] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-11-30 11:28:53.277 [main] Loader - Result set row: 0
[DEBUG] 2020-11-30 11:28:53.283 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-30 11:28:53.291 [main] Loader - Result set row: 1
[DEBUG] 2020-11-30 11:28:53.292 [main] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.300 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:53.302 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.302 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-11-30 11:28:53.302 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.308 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-30 11:28:53.309 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:53.309 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:28:53.309 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.309 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:28:53.309 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.309 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:28:53.309 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.311 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:28:53.312 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.312 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:28:53.312 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.312 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:28:53.312 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.312 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:28:53.316 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.316 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:53.316 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.316 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:53.316 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.316 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:28:53.316 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.316 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:53.317 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:53.317 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:28:53.329 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:53.330 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:53.330 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:53.330 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:53.330 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:53.330 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:53.330 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:53.330 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:28:53.336 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:53.341 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:53.341 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:53.341 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:53.341 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:53.341 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:53.341 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:28:53.342 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:28:53.353 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:28:53.353 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:53.353 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:28:53.353 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:53.357 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:53.358 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:53.364 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:28:53.364 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:28:53.383 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:28:53.384 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:53.402 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:28:53.403 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 11:28:53.404 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.409 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:28:53.409 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:53.409 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:28:53.409 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:53.415 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:53.416 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:53.416 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:53.416 [main] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:28:53.442 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:53.443 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:53.472 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:53.474 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:28:53.487 [main] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-11-30 11:28:53.487 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.487 [main] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-11-30 11:28:53.487 [main] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.508 [main] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-11-30 11:28:53.508 [main] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.508 [main] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:28:53.508 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:28:53.508 [main] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-11-30 11:28:53.509 [main] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.509 [main] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-11-30 11:28:53.509 [main] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.509 [main] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-11-30 11:28:53.509 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.509 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:53.509 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.510 [main] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-11-30 11:28:53.510 [main] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:53.510 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:28:53.510 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:53.512 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:53.512 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:53.513 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:53.513 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:53.523 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:53.525 [main] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:28:53.557 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:53.557 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:53.603 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:53.621 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:28:53.621 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:28:53.621 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:28:53.622 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:53.622 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:28:53.622 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:54.429 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:54.475 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:54.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 11:28:54.492 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:54.493 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.493 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:54.493 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:54.493 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:54.493 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:54.493 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:54.493 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:54.495 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:54.495 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:54.495 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:54.495 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-11-30 11:28:54.495 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:28:54.512 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:28:54.517 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:28:54.518 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 11:28:54.519 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:54.519 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:28:54.519 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.520 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:54.520 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.520 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:28:54.520 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.520 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:28:54.520 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:28:54.520 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:28:54.520 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:28:54.520 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:54.520 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:28:54.520 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:28:54.520 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:54.520 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:28:54.520 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:28:54.520 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:28:54.520 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-11-30 11:28:54.520 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:33:09.327 [http-nio-8080-exec-15] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-11-30 11:33:09.338 [http-nio-8080-exec-15] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-11-30 11:33:09.348 [http-nio-8080-exec-15] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-11-30 11:33:12.410 [http-nio-8080-exec-15] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-11-30 11:33:12.417 [http-nio-8080-exec-15] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-11-30 11:33:15.774 [http-nio-8080-exec-15] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-11-30 11:33:18.342 [http-nio-8080-exec-15] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-11-30 11:33:18.511 [http-nio-8080-exec-15] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-11-30 11:33:18.514 [http-nio-8080-exec-15] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-11-30 11:33:18.688 [http-nio-8080-exec-15] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-11-30 11:33:18.956 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5354b073
[DEBUG] 2020-11-30 11:33:18.957 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5354b073
[DEBUG] 2020-11-30 11:33:18.960 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5354b073
[DEBUG] 2020-11-30 11:33:18.976 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a238943
[DEBUG] 2020-11-30 11:33:18.983 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@309b3fcf
[DEBUG] 2020-11-30 11:33:18.986 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6344a9e0
[DEBUG] 2020-11-30 11:33:18.993 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10dcff56
[DEBUG] 2020-11-30 11:33:18.994 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10dcff56
[DEBUG] 2020-11-30 11:33:18.994 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10dcff56
[DEBUG] 2020-11-30 11:33:18.996 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1cc0e8b4
[DEBUG] 2020-11-30 11:33:18.996 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1cc0e8b4
[DEBUG] 2020-11-30 11:33:18.996 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1cc0e8b4
[DEBUG] 2020-11-30 11:33:19.019 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5c1fe6c1
[DEBUG] 2020-11-30 11:33:19.020 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5c1fe6c1
[DEBUG] 2020-11-30 11:33:19.020 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5c1fe6c1
[DEBUG] 2020-11-30 11:33:19.047 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@708dd5d5
[DEBUG] 2020-11-30 11:33:19.047 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@708dd5d5
[DEBUG] 2020-11-30 11:33:19.047 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@708dd5d5
[DEBUG] 2020-11-30 11:33:19.051 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@151c7c2a
[DEBUG] 2020-11-30 11:33:19.051 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@151c7c2a
[DEBUG] 2020-11-30 11:33:19.051 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@151c7c2a
[DEBUG] 2020-11-30 11:33:19.054 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7e768faf
[DEBUG] 2020-11-30 11:33:19.054 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7e768faf
[DEBUG] 2020-11-30 11:33:19.054 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e768faf
[DEBUG] 2020-11-30 11:33:19.058 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e1227f6
[DEBUG] 2020-11-30 11:33:19.058 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e1227f6
[DEBUG] 2020-11-30 11:33:19.058 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e1227f6
[DEBUG] 2020-11-30 11:33:19.060 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52897156
[DEBUG] 2020-11-30 11:33:19.060 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52897156
[DEBUG] 2020-11-30 11:33:19.064 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4a19aeb9
[DEBUG] 2020-11-30 11:33:19.064 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4a19aeb9
[DEBUG] 2020-11-30 11:33:19.085 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7fa9c290
[DEBUG] 2020-11-30 11:33:19.090 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7fa9c290
[DEBUG] 2020-11-30 11:33:19.093 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6abdd64d
[DEBUG] 2020-11-30 11:33:19.094 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6e8169dc
[DEBUG] 2020-11-30 11:33:19.095 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3019ceee
[DEBUG] 2020-11-30 11:33:19.096 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3019ceee
[DEBUG] 2020-11-30 11:33:19.097 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@15e22fad
[DEBUG] 2020-11-30 11:33:19.097 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@15e22fad
[DEBUG] 2020-11-30 11:33:19.100 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@a37b05b
[DEBUG] 2020-11-30 11:33:19.100 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@a37b05b
[DEBUG] 2020-11-30 11:33:19.106 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3df583e7
[DEBUG] 2020-11-30 11:33:19.113 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3df583e7
[DEBUG] 2020-11-30 11:33:19.121 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4095ac0e
[DEBUG] 2020-11-30 11:33:19.122 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4095ac0e
[DEBUG] 2020-11-30 11:33:19.136 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5de74667
[DEBUG] 2020-11-30 11:33:19.136 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5de74667
[DEBUG] 2020-11-30 11:33:19.139 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37ea493b
[DEBUG] 2020-11-30 11:33:19.140 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37ea493b
[DEBUG] 2020-11-30 11:33:19.142 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@455b6b73
[DEBUG] 2020-11-30 11:33:19.142 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@455b6b73
[DEBUG] 2020-11-30 11:33:19.144 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4ed2397
[DEBUG] 2020-11-30 11:33:19.144 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4ed2397
[DEBUG] 2020-11-30 11:33:19.147 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@20b58136
[DEBUG] 2020-11-30 11:33:19.147 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@20b58136
[DEBUG] 2020-11-30 11:33:19.149 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1cfb31f6
[DEBUG] 2020-11-30 11:33:19.158 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cfb31f6
[DEBUG] 2020-11-30 11:33:19.160 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@73925f4b
[DEBUG] 2020-11-30 11:33:19.161 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@73925f4b
[DEBUG] 2020-11-30 11:33:19.161 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@73925f4b
[DEBUG] 2020-11-30 11:33:19.164 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e59f763
[DEBUG] 2020-11-30 11:33:19.167 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@512f7479
[DEBUG] 2020-11-30 11:33:19.168 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@512f7479
[DEBUG] 2020-11-30 11:33:19.168 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@512f7479
[DEBUG] 2020-11-30 11:33:19.176 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34d55fdf
[DEBUG] 2020-11-30 11:33:19.206 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@fa9bbc0
[DEBUG] 2020-11-30 11:33:19.217 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fa9bbc0
[DEBUG] 2020-11-30 11:33:19.244 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@36d2c13f
[DEBUG] 2020-11-30 11:33:19.244 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36d2c13f
[DEBUG] 2020-11-30 11:33:19.248 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c46aedb
[DEBUG] 2020-11-30 11:33:19.248 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c46aedb
[DEBUG] 2020-11-30 11:33:19.264 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@ec196fc
[DEBUG] 2020-11-30 11:33:19.264 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ec196fc
[DEBUG] 2020-11-30 11:33:19.266 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f47cc7
[DEBUG] 2020-11-30 11:33:19.267 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f47cc7
[DEBUG] 2020-11-30 11:33:19.267 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5409e20b
[DEBUG] 2020-11-30 11:33:19.287 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2134cb95
[DEBUG] 2020-11-30 11:33:19.287 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2134cb95
[DEBUG] 2020-11-30 11:33:19.288 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2134cb95
[DEBUG] 2020-11-30 11:33:19.291 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ed6797a
[DEBUG] 2020-11-30 11:33:19.292 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ed6797a
[DEBUG] 2020-11-30 11:33:19.292 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ed6797a
[DEBUG] 2020-11-30 11:33:19.294 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1694c62f
[DEBUG] 2020-11-30 11:33:19.295 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@47cd9ffd
[DEBUG] 2020-11-30 11:33:19.296 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4cf2e1b7
[DEBUG] 2020-11-30 11:33:19.297 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4cf2e1b7
[DEBUG] 2020-11-30 11:33:19.297 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4cf2e1b7
[DEBUG] 2020-11-30 11:33:19.298 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d14790d
[DEBUG] 2020-11-30 11:33:19.299 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d14790d
[DEBUG] 2020-11-30 11:33:19.299 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d14790d
[DEBUG] 2020-11-30 11:33:19.299 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@44a21632
[DEBUG] 2020-11-30 11:33:19.300 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1057be89
[DEBUG] 2020-11-30 11:33:19.318 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@39ee0f5
[DEBUG] 2020-11-30 11:33:19.318 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39ee0f5
[DEBUG] 2020-11-30 11:33:19.319 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@180a3bef
[DEBUG] 2020-11-30 11:33:19.328 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@470d999a
[DEBUG] 2020-11-30 11:33:19.329 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@470d999a
[DEBUG] 2020-11-30 11:33:19.352 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@292ec200
[DEBUG] 2020-11-30 11:33:19.352 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@292ec200
[DEBUG] 2020-11-30 11:33:19.353 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21436c27
[DEBUG] 2020-11-30 11:33:19.354 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@415fdd14
[DEBUG] 2020-11-30 11:33:19.357 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@516a40ee
[DEBUG] 2020-11-30 11:33:19.383 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@651cbbd1
[DEBUG] 2020-11-30 11:33:19.384 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@651cbbd1
[DEBUG] 2020-11-30 11:33:19.385 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a9d2590
[DEBUG] 2020-11-30 11:33:19.385 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@aa34e39
[DEBUG] 2020-11-30 11:33:19.386 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@76052062
[DEBUG] 2020-11-30 11:33:19.386 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7287bb18
[DEBUG] 2020-11-30 11:33:19.386 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6125b17d
[DEBUG] 2020-11-30 11:33:19.387 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7167f9e6
[DEBUG] 2020-11-30 11:33:19.387 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e3ec198
[DEBUG] 2020-11-30 11:33:19.387 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61aee03c
[DEBUG] 2020-11-30 11:33:19.589 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-11-30 11:33:19.590 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-11-30 11:33:19.599 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 11:33:19.600 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 11:33:19.603 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-11-30 11:33:19.605 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-11-30 11:33:19.637 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-11-30 11:33:19.661 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 11:33:19.665 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-11-30 11:33:19.667 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-11-30 11:33:19.668 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-11-30 11:33:19.671 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-11-30 11:33:19.671 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 11:33:19.675 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-11-30 11:33:19.703 [http-nio-8080-exec-15] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotelFull
[INFO ] 2020-11-30 11:33:19.704 [http-nio-8080-exec-15] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-11-30 11:33:19.705 [http-nio-8080-exec-15] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-11-30 11:33:22.162 [http-nio-8080-exec-15] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-11-30 11:33:25.747 [http-nio-8080-exec-15] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-11-30 11:33:25.766 [http-nio-8080-exec-15] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-11-30 11:33:25.796 [http-nio-8080-exec-15] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-11-30 11:33:26.964 [http-nio-8080-exec-15] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-11-30 11:33:27.710 [http-nio-8080-exec-15] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-11-30 11:33:28.647 [http-nio-8080-exec-15] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-11-30 11:33:29.950 [http-nio-8080-exec-15] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-11-30 11:33:30.076 [http-nio-8080-exec-15] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3450b449] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4aaa7c2b]
[DEBUG] 2020-11-30 11:33:31.449 [http-nio-8080-exec-15] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-11-30 11:33:32.129 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:33:32.156 [http-nio-8080-exec-15] EntityBinder - Import with entity name User
[DEBUG] 2020-11-30 11:33:32.206 [http-nio-8080-exec-15] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-11-30 11:33:32.758 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:32.858 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:33:32.938 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-11-30 11:33:33.014 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:33:33.090 [http-nio-8080-exec-15] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:33:33.217 [http-nio-8080-exec-15] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:33:33.247 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.248 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property Password with lazy=false
[DEBUG] 2020-11-30 11:33:33.248 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:Password]
[DEBUG] 2020-11-30 11:33:33.248 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for Password
[DEBUG] 2020-11-30 11:33:33.248 [http-nio-8080-exec-15] PropertyBinder - Building property Password
[DEBUG] 2020-11-30 11:33:33.273 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.291 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-11-30 11:33:33.299 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:address]
[DEBUG] 2020-11-30 11:33:33.299 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-11-30 11:33:33.300 [http-nio-8080-exec-15] PropertyBinder - Building property address
[DEBUG] 2020-11-30 11:33:33.308 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=details, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.317 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property details with lazy=false
[DEBUG] 2020-11-30 11:33:33.327 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:details]
[DEBUG] 2020-11-30 11:33:33.330 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for details
[DEBUG] 2020-11-30 11:33:33.330 [http-nio-8080-exec-15] PropertyBinder - Building property details
[DEBUG] 2020-11-30 11:33:33.331 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.339 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-11-30 11:33:33.340 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:email]
[DEBUG] 2020-11-30 11:33:33.340 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-11-30 11:33:33.340 [http-nio-8080-exec-15] PropertyBinder - Building property email
[DEBUG] 2020-11-30 11:33:33.353 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.360 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-11-30 11:33:33.370 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-11-30 11:33:33.383 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-11-30 11:33:33.384 [http-nio-8080-exec-15] PropertyBinder - Building property first_name
[DEBUG] 2020-11-30 11:33:33.401 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.401 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-11-30 11:33:33.401 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-11-30 11:33:33.402 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-11-30 11:33:33.402 [http-nio-8080-exec-15] PropertyBinder - Building property last_name
[DEBUG] 2020-11-30 11:33:33.402 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.402 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-11-30 11:33:33.402 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:phone]
[DEBUG] 2020-11-30 11:33:33.411 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-11-30 11:33:33.415 [http-nio-8080-exec-15] PropertyBinder - Building property phone
[DEBUG] 2020-11-30 11:33:33.461 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:33:33.468 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.529 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.950 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.979 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:33.991 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:33:34.040 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:33:34.052 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:33:34.065 [http-nio-8080-exec-15] CollectionBinder - Collection role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:33:34.211 [http-nio-8080-exec-15] PropertyBinder - Building property reservations
[DEBUG] 2020-11-30 11:33:34.225 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:33:34.228 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.229 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.229 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.239 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.255 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:33:34.277 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:33:34.287 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:33:34.288 [http-nio-8080-exec-15] CollectionBinder - Collection role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:33:34.289 [http-nio-8080-exec-15] PropertyBinder - Building property roles
[DEBUG] 2020-11-30 11:33:34.299 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.301 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-11-30 11:33:34.301 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-11-30 11:33:34.301 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-11-30 11:33:34.311 [http-nio-8080-exec-15] PropertyBinder - Building property user_name
[DEBUG] 2020-11-30 11:33:34.375 [http-nio-8080-exec-15] AnnotationBinder - Binding entity from annotated class: hote.entity.Role
[DEBUG] 2020-11-30 11:33:34.377 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:33:34.399 [http-nio-8080-exec-15] EntityBinder - Import with entity name Role
[DEBUG] 2020-11-30 11:33:34.399 [http-nio-8080-exec-15] EntityBinder - Bind entity hote.entity.Role on table role
[DEBUG] 2020-11-30 11:33:34.442 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.464 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:33:34.482 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:id]
[DEBUG] 2020-11-30 11:33:34.486 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:33:34.491 [http-nio-8080-exec-15] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:33:34.506 [http-nio-8080-exec-15] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:33:34.517 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.517 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-11-30 11:33:34.518 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:roleName]
[DEBUG] 2020-11-30 11:33:34.518 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-11-30 11:33:34.518 [http-nio-8080-exec-15] PropertyBinder - Building property roleName
[DEBUG] 2020-11-30 11:33:34.519 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:33:34.550 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.629 [http-nio-8080-exec-15] PropertyBinder - Building property user
[DEBUG] 2020-11-30 11:33:34.641 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.668 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-11-30 11:33:34.669 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:userName]
[DEBUG] 2020-11-30 11:33:34.669 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-11-30 11:33:34.670 [http-nio-8080-exec-15] PropertyBinder - Building property userName
[DEBUG] 2020-11-30 11:33:34.670 [http-nio-8080-exec-15] AnnotationBinder - Binding entity from annotated class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:33:34.685 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:33:34.686 [http-nio-8080-exec-15] EntityBinder - Import with entity name Reservation
[DEBUG] 2020-11-30 11:33:34.711 [http-nio-8080-exec-15] EntityBinder - Bind entity hote.entity.Reservation on table reservation
[DEBUG] 2020-11-30 11:33:34.762 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.763 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:33:34.763 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:id]
[DEBUG] 2020-11-30 11:33:34.763 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:33:34.793 [http-nio-8080-exec-15] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:33:34.795 [http-nio-8080-exec-15] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:33:34.795 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.795 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property end_date with lazy=false
[DEBUG] 2020-11-30 11:33:34.796 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:end_date]
[DEBUG] 2020-11-30 11:33:34.816 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for end_date
[DEBUG] 2020-11-30 11:33:34.816 [http-nio-8080-exec-15] PropertyBinder - Building property end_date
[DEBUG] 2020-11-30 11:33:34.817 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:33:34.817 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.818 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.818 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.847 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.848 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:33:34.848 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:33:34.848 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:33:34.849 [http-nio-8080-exec-15] CollectionBinder - Collection role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:34.849 [http-nio-8080-exec-15] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-11-30 11:33:34.886 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=start_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.886 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property start_date with lazy=false
[DEBUG] 2020-11-30 11:33:34.895 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:start_date]
[DEBUG] 2020-11-30 11:33:34.896 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for start_date
[DEBUG] 2020-11-30 11:33:34.896 [http-nio-8080-exec-15] PropertyBinder - Building property start_date
[DEBUG] 2020-11-30 11:33:34.911 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=total_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.911 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property total_price with lazy=false
[DEBUG] 2020-11-30 11:33:34.912 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:total_price]
[DEBUG] 2020-11-30 11:33:34.912 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for total_price
[DEBUG] 2020-11-30 11:33:34.912 [http-nio-8080-exec-15] PropertyBinder - Building property total_price
[DEBUG] 2020-11-30 11:33:34.944 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='guest_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:33:34.952 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:34.967 [http-nio-8080-exec-15] PropertyBinder - Building property user
[DEBUG] 2020-11-30 11:33:34.997 [http-nio-8080-exec-15] AnnotationBinder - Binding entity from annotated class: hote.entity.Room
[DEBUG] 2020-11-30 11:33:34.998 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:33:34.998 [http-nio-8080-exec-15] EntityBinder - Import with entity name Room
[DEBUG] 2020-11-30 11:33:34.998 [http-nio-8080-exec-15] EntityBinder - Bind entity hote.entity.Room on table room
[DEBUG] 2020-11-30 11:33:35.033 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.061 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:33:35.061 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:id]
[DEBUG] 2020-11-30 11:33:35.062 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:33:35.062 [http-nio-8080-exec-15] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:33:35.086 [http-nio-8080-exec-15] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:33:35.095 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=Avalable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.099 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property Avalable with lazy=false
[DEBUG] 2020-11-30 11:33:35.100 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:Avalable]
[DEBUG] 2020-11-30 11:33:35.103 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for Avalable
[DEBUG] 2020-11-30 11:33:35.121 [http-nio-8080-exec-15] PropertyBinder - Building property Avalable
[DEBUG] 2020-11-30 11:33:35.131 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=current_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.135 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property current_price with lazy=false
[DEBUG] 2020-11-30 11:33:35.135 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:current_price]
[DEBUG] 2020-11-30 11:33:35.135 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for current_price
[DEBUG] 2020-11-30 11:33:35.150 [http-nio-8080-exec-15] PropertyBinder - Building property current_price
[DEBUG] 2020-11-30 11:33:35.162 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.162 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-11-30 11:33:35.162 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:description]
[DEBUG] 2020-11-30 11:33:35.163 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-11-30 11:33:35.163 [http-nio-8080-exec-15] PropertyBinder - Building property description
[DEBUG] 2020-11-30 11:33:35.180 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:33:35.192 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.193 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.193 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.193 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.193 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:33:35.193 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:33:35.195 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:33:35.195 [http-nio-8080-exec-15] CollectionBinder - Collection role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:33:35.195 [http-nio-8080-exec-15] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-11-30 11:33:35.195 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=room_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.195 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property room_name with lazy=false
[DEBUG] 2020-11-30 11:33:35.197 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:room_name]
[DEBUG] 2020-11-30 11:33:35.197 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for room_name
[DEBUG] 2020-11-30 11:33:35.197 [http-nio-8080-exec-15] PropertyBinder - Building property room_name
[DEBUG] 2020-11-30 11:33:35.197 [http-nio-8080-exec-15] AnnotationBinder - Binding entity from annotated class: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:33:35.198 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:33:35.198 [http-nio-8080-exec-15] EntityBinder - Import with entity name Roomreserved
[DEBUG] 2020-11-30 11:33:35.200 [http-nio-8080-exec-15] EntityBinder - Bind entity hote.entity.RoomReserved on table room_reserved
[DEBUG] 2020-11-30 11:33:35.216 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.217 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:33:35.218 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:id]
[DEBUG] 2020-11-30 11:33:35.218 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:33:35.219 [http-nio-8080-exec-15] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:33:35.219 [http-nio-8080-exec-15] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:33:35.219 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.222 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-11-30 11:33:35.222 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:price]
[DEBUG] 2020-11-30 11:33:35.223 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-11-30 11:33:35.223 [http-nio-8080-exec-15] PropertyBinder - Building property price
[DEBUG] 2020-11-30 11:33:35.223 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservation_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:33:35.223 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=reservation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.223 [http-nio-8080-exec-15] PropertyBinder - Building property reservation
[DEBUG] 2020-11-30 11:33:35.223 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='room_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:33:35.223 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=room, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:33:35.223 [http-nio-8080-exec-15] PropertyBinder - Building property room
[DEBUG] 2020-11-30 11:33:35.228 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:33:35.231 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for Password
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for details
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for end_date
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for start_date
[DEBUG] 2020-11-30 11:33:35.232 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for total_price
[DEBUG] 2020-11-30 11:33:35.244 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:33:35.244 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for Avalable
[DEBUG] 2020-11-30 11:33:35.244 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for current_price
[DEBUG] 2020-11-30 11:33:35.244 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-11-30 11:33:35.244 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for room_name
[DEBUG] 2020-11-30 11:33:35.245 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:33:35.245 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-11-30 11:33:35.316 [http-nio-8080-exec-15] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-11-30 11:33:35.321 [http-nio-8080-exec-15] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-11-30 11:33:35.326 [http-nio-8080-exec-15] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [reservation]
[DEBUG] 2020-11-30 11:33:35.326 [http-nio-8080-exec-15] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room]
[DEBUG] 2020-11-30 11:33:35.330 [http-nio-8080-exec-15] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room_reserved]
[DEBUG] 2020-11-30 11:33:35.331 [http-nio-8080-exec-15] CollectionSecondPass - Second pass for collection: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:33:35.363 [http-nio-8080-exec-15] CollectionBinder - Binding a OneToMany: hote.entity.User.reservations through a foreign key
[DEBUG] 2020-11-30 11:33:35.398 [http-nio-8080-exec-15] CollectionBinder - Mapping collection: hote.entity.User.reservations -> reservation
[DEBUG] 2020-11-30 11:33:35.459 [http-nio-8080-exec-15] TableBinder - Retrieving property hote.entity.Reservation.user
[DEBUG] 2020-11-30 11:33:35.461 [http-nio-8080-exec-15] CollectionSecondPass - Mapped collection key: guest_id, one-to-many: hote.entity.Reservation
[DEBUG] 2020-11-30 11:33:35.483 [http-nio-8080-exec-15] CollectionSecondPass - Second pass for collection: hote.entity.User.roles
[DEBUG] 2020-11-30 11:33:35.485 [http-nio-8080-exec-15] CollectionBinder - Binding a OneToMany: hote.entity.User.roles through a foreign key
[DEBUG] 2020-11-30 11:33:35.486 [http-nio-8080-exec-15] CollectionBinder - Mapping collection: hote.entity.User.roles -> role
[DEBUG] 2020-11-30 11:33:35.493 [http-nio-8080-exec-15] TableBinder - Retrieving property hote.entity.Role.user
[DEBUG] 2020-11-30 11:33:35.494 [http-nio-8080-exec-15] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Role
[DEBUG] 2020-11-30 11:33:35.507 [http-nio-8080-exec-15] CollectionSecondPass - Second pass for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:35.513 [http-nio-8080-exec-15] CollectionBinder - Binding a OneToMany: hote.entity.Reservation.roomReserveds through a foreign key
[DEBUG] 2020-11-30 11:33:35.514 [http-nio-8080-exec-15] CollectionBinder - Mapping collection: hote.entity.Reservation.roomReserveds -> room_reserved
[DEBUG] 2020-11-30 11:33:35.514 [http-nio-8080-exec-15] TableBinder - Retrieving property hote.entity.RoomReserved.reservation
[DEBUG] 2020-11-30 11:33:35.529 [http-nio-8080-exec-15] CollectionSecondPass - Mapped collection key: reservation_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:33:35.536 [http-nio-8080-exec-15] CollectionSecondPass - Second pass for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:33:35.543 [http-nio-8080-exec-15] CollectionBinder - Binding a OneToMany: hote.entity.Room.roomReserveds through a foreign key
[DEBUG] 2020-11-30 11:33:35.544 [http-nio-8080-exec-15] CollectionBinder - Mapping collection: hote.entity.Room.roomReserveds -> room_reserved
[DEBUG] 2020-11-30 11:33:35.545 [http-nio-8080-exec-15] TableBinder - Retrieving property hote.entity.RoomReserved.room
[DEBUG] 2020-11-30 11:33:35.577 [http-nio-8080-exec-15] CollectionSecondPass - Mapped collection key: room_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:33:35.600 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:33:35.601 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:33:35.601 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:33:35.601 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-11-30 11:33:35.620 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:33:35.623 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:33:35.625 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:33:35.625 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-11-30 11:33:36.921 [http-nio-8080-exec-15] SessionFactoryImpl - Building session factory
[DEBUG] 2020-11-30 11:33:36.948 [http-nio-8080-exec-15] Settings - SessionFactory name : null
[DEBUG] 2020-11-30 11:33:36.966 [http-nio-8080-exec-15] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-11-30 11:33:36.966 [http-nio-8080-exec-15] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-11-30 11:33:36.966 [http-nio-8080-exec-15] Settings - Statistics: disabled
[DEBUG] 2020-11-30 11:33:36.966 [http-nio-8080-exec-15] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-11-30 11:33:36.972 [http-nio-8080-exec-15] Settings - Default entity-mode: pojo
[DEBUG] 2020-11-30 11:33:36.973 [http-nio-8080-exec-15] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-11-30 11:33:36.973 [http-nio-8080-exec-15] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-11-30 11:33:36.973 [http-nio-8080-exec-15] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-11-30 11:33:36.973 [http-nio-8080-exec-15] Settings - Default batch fetch size: -1
[DEBUG] 2020-11-30 11:33:36.973 [http-nio-8080-exec-15] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-11-30 11:33:36.973 [http-nio-8080-exec-15] Settings - Default null ordering: NONE
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - Query language substitutions: {}
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - Named query checking : enabled
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - Second-level cache: disabled
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - Second-level query cache: disabled
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - Second-level query cache factory: null
[DEBUG] 2020-11-30 11:33:36.974 [http-nio-8080-exec-15] Settings - Second-level cache region prefix: null
[DEBUG] 2020-11-30 11:33:36.975 [http-nio-8080-exec-15] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-11-30 11:33:36.975 [http-nio-8080-exec-15] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-11-30 11:33:37.001 [http-nio-8080-exec-15] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-11-30 11:33:37.015 [http-nio-8080-exec-15] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-11-30 11:33:37.016 [http-nio-8080-exec-15] Settings - JDBC batch size: 15
[DEBUG] 2020-11-30 11:33:37.019 [http-nio-8080-exec-15] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-11-30 11:33:37.019 [http-nio-8080-exec-15] Settings - Scrollable result sets: enabled
[DEBUG] 2020-11-30 11:33:37.020 [http-nio-8080-exec-15] Settings - Wrap result sets: disabled
[DEBUG] 2020-11-30 11:33:37.020 [http-nio-8080-exec-15] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-11-30 11:33:37.020 [http-nio-8080-exec-15] Settings - JDBC result set fetch size: null
[DEBUG] 2020-11-30 11:33:37.020 [http-nio-8080-exec-15] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-11-30 11:33:37.020 [http-nio-8080-exec-15] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-11-30 11:33:37.020 [http-nio-8080-exec-15] Settings - JPA compliance - query : 
[DEBUG] 2020-11-30 11:33:37.020 [http-nio-8080-exec-15] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-11-30 11:33:37.021 [http-nio-8080-exec-15] Settings - JPA compliance - lists : 
[DEBUG] 2020-11-30 11:33:37.021 [http-nio-8080-exec-15] Settings - JPA compliance - transactions : 
[INFO ] 2020-11-30 11:33:39.157 [http-nio-8080-exec-15] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-11-30 11:33:39.348 [http-nio-8080-exec-15] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-11-30 11:33:39.365 [http-nio-8080-exec-15] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.8, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-51-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotelFull, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@50c1d554, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/hotelFull, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-11-30 11:33:39.455 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:33:39.455 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:33:39.459 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:33:39.459 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:33:39.468 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:33:39.471 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:33:39.473 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:33:39.473 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:33:39.496 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:33:39.496 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:33:39.600 [http-nio-8080-exec-15] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-11-30 11:33:39.621 [http-nio-8080-exec-15] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-11-30 11:33:39.652 [http-nio-8080-exec-15] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3450b449] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7c6c71ab]
[DEBUG] 2020-11-30 11:33:40.502 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:33:40.503 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:33:40.690 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:33:40.691 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:33:44.617 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:33:44.631 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:33:44.640 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:33:44.640 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:33:45.011 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:33:45.011 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:33:45.013 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:33:45.014 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:33:45.327 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:33:45.350 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:33:45.384 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:33:45.391 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:33:46.333 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:33:46.335 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:33:46.343 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:33:46.343 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:33:47.154 [http-nio-8080-exec-15] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:33:47.160 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row insert: update reservation set guest_id=? where id=?
[DEBUG] 2020-11-30 11:33:47.160 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row update: update reservation set  where id=?
[DEBUG] 2020-11-30 11:33:47.160 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row delete: update reservation set guest_id=null where guest_id=? and id=?
[DEBUG] 2020-11-30 11:33:47.160 [http-nio-8080-exec-15] AbstractCollectionPersister -  One-shot delete: update reservation set guest_id=null where guest_id=?
[DEBUG] 2020-11-30 11:33:47.161 [http-nio-8080-exec-15] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.roles
[DEBUG] 2020-11-30 11:33:47.161 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-11-30 11:33:47.161 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-11-30 11:33:47.161 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-11-30 11:33:47.161 [http-nio-8080-exec-15] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-11-30 11:33:47.161 [http-nio-8080-exec-15] AbstractCollectionPersister - Static SQL for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:47.161 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row insert: update room_reserved set reservation_id=? where id=?
[DEBUG] 2020-11-30 11:33:47.161 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-11-30 11:33:47.162 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row delete: update room_reserved set reservation_id=null where reservation_id=? and id=?
[DEBUG] 2020-11-30 11:33:47.162 [http-nio-8080-exec-15] AbstractCollectionPersister -  One-shot delete: update room_reserved set reservation_id=null where reservation_id=?
[DEBUG] 2020-11-30 11:33:47.162 [http-nio-8080-exec-15] AbstractCollectionPersister - Static SQL for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:33:47.162 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row insert: update room_reserved set room_id=? where id=?
[DEBUG] 2020-11-30 11:33:47.162 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-11-30 11:33:47.162 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row delete: update room_reserved set room_id=null where room_id=? and id=?
[DEBUG] 2020-11-30 11:33:47.162 [http-nio-8080-exec-15] AbstractCollectionPersister -  One-shot delete: update room_reserved set room_id=null where room_id=?
[DEBUG] 2020-11-30 11:33:47.226 [http-nio-8080-exec-15] AbstractEntityPersister - Static SQL for entity: hote.entity.Reservation
[DEBUG] 2020-11-30 11:33:47.230 [http-nio-8080-exec-15] AbstractEntityPersister -  Version select: select id from reservation where id =?
[DEBUG] 2020-11-30 11:33:47.230 [http-nio-8080-exec-15] AbstractEntityPersister -  Snapshot select: select reservatio_.id, reservatio_.end_date as end_date2_0_, reservatio_.start_date as start_da3_0_, reservatio_.total_price as total_pr4_0_, reservatio_.guest_id as guest_id5_0_ from reservation reservatio_ where reservatio_.id=?
[DEBUG] 2020-11-30 11:33:47.234 [http-nio-8080-exec-15] AbstractEntityPersister -  Insert 0: insert into reservation (end_date, start_date, total_price, guest_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:33:47.235 [http-nio-8080-exec-15] AbstractEntityPersister -  Update 0: update reservation set end_date=?, start_date=?, total_price=?, guest_id=? where id=?
[DEBUG] 2020-11-30 11:33:47.235 [http-nio-8080-exec-15] AbstractEntityPersister -  Delete 0: delete from reservation where id=?
[DEBUG] 2020-11-30 11:33:47.235 [http-nio-8080-exec-15] AbstractEntityPersister -  Identity insert: insert into reservation (end_date, start_date, total_price, guest_id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:33:48.104 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb1e554]
[DEBUG] 2020-11-30 11:33:48.172 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:33:48.177 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:33:48.279 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56982a57]
[DEBUG] 2020-11-30 11:33:48.304 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452513da]
[DEBUG] 2020-11-30 11:33:48.307 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:33:48.308 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:48.308 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:48.311 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:33:48.312 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@508d4b67]
[DEBUG] 2020-11-30 11:33:48.315 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-11-30 11:33:48.315 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-11-30 11:33:48.316 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-11-30 11:33:48.347 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:33:48.365 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:33:48.370 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-11-30 11:33:48.385 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:33:48.385 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:33:48.389 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:33:48.390 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b4752b]
[DEBUG] 2020-11-30 11:33:48.405 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:33:48.406 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:33:48.406 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:33:48.412 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:33:48.412 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:33:48.412 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:33:48.412 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:33:48.412 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:33:48.413 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-11-30 11:33:48.429 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:33:48.430 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e057cb1]
[DEBUG] 2020-11-30 11:33:48.439 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff5fccb]
[DEBUG] 2020-11-30 11:33:48.440 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 11:33:48.441 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 11:33:48.441 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 11:33:48.442 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-11-30 11:33:48.442 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:33:48.483 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:48.863 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:48.949 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:33:49.082 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.Reservation [NONE]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:33:49.091 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb13ef9]
[DEBUG] 2020-11-30 11:33:49.091 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:33:49.092 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:33:49.092 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cd3709]
[DEBUG] 2020-11-30 11:33:49.092 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ba5f91]
[DEBUG] 2020-11-30 11:33:49.106 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:33:49.106 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:49.112 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:49.129 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:33:49.133 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7295682]
[DEBUG] 2020-11-30 11:33:49.135 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-11-30 11:33:49.135 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-11-30 11:33:49.135 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-11-30 11:33:49.136 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:33:49.136 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:33:49.148 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-11-30 11:33:49.152 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:33:49.152 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:33:49.152 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:33:49.161 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@402cfeb8]
[DEBUG] 2020-11-30 11:33:49.173 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:33:49.174 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:33:49.174 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:33:49.174 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:33:49.174 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:33:49.174 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:33:49.174 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:33:49.174 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:33:49.175 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-11-30 11:33:49.175 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:33:49.191 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@408d4181]
[DEBUG] 2020-11-30 11:33:49.195 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d02746e]
[DEBUG] 2020-11-30 11:33:49.198 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 11:33:49.201 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 11:33:49.201 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 11:33:49.209 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-11-30 11:33:49.210 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:33:49.245 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:49.255 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:49.292 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:33:49.318 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.Reservation [READ]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:33:49.957 [http-nio-8080-exec-15] Loader - Static select for action ACTION_MERGE on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:33:49.965 [http-nio-8080-exec-15] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:33:49.981 [http-nio-8080-exec-15] AbstractEntityPersister - Static SQL for entity: hote.entity.Room
[DEBUG] 2020-11-30 11:33:49.981 [http-nio-8080-exec-15] AbstractEntityPersister -  Version select: select id from room where id =?
[DEBUG] 2020-11-30 11:33:49.982 [http-nio-8080-exec-15] AbstractEntityPersister -  Snapshot select: select room_.id, room_.Avalable as Avalable2_2_, room_.current_price as current_3_2_, room_.description as descript4_2_, room_.room_name as room_nam5_2_ from room room_ where room_.id=?
[DEBUG] 2020-11-30 11:33:49.982 [http-nio-8080-exec-15] AbstractEntityPersister -  Insert 0: insert into room (Avalable, current_price, description, room_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:33:50.003 [http-nio-8080-exec-15] AbstractEntityPersister -  Update 0: update room set Avalable=?, current_price=?, description=?, room_name=? where id=?
[DEBUG] 2020-11-30 11:33:50.003 [http-nio-8080-exec-15] AbstractEntityPersister -  Delete 0: delete from room where id=?
[DEBUG] 2020-11-30 11:33:50.005 [http-nio-8080-exec-15] AbstractEntityPersister -  Identity insert: insert into room (Avalable, current_price, description, room_name) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:33:50.006 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79774f62]
[DEBUG] 2020-11-30 11:33:50.009 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-11-30 11:33:50.010 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-11-30 11:33:50.017 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 11:33:50.020 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:33:50.020 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1301d992]
[DEBUG] 2020-11-30 11:33:50.021 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7316daf8]
[DEBUG] 2020-11-30 11:33:50.021 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:33:50.021 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:50.049 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7efbdc]
[DEBUG] 2020-11-30 11:33:50.050 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-11-30 11:33:50.053 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:50.053 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:50.053 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-11-30 11:33:50.053 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-11-30 11:33:50.054 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-11-30 11:33:50.054 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7562e386]
[DEBUG] 2020-11-30 11:33:50.054 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:33:50.055 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-11-30 11:33:50.070 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-11-30 11:33:50.070 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:50.083 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:50.115 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:33:50.116 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.Room [NONE]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-11-30 11:33:50.131 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57c78f7d]
[DEBUG] 2020-11-30 11:33:50.148 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-11-30 11:33:50.154 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-11-30 11:33:50.154 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 11:33:50.154 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:33:50.162 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34b335c9]
[DEBUG] 2020-11-30 11:33:50.173 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@562f9e0a]
[DEBUG] 2020-11-30 11:33:50.174 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:33:50.193 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:50.203 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d6b3ea9]
[DEBUG] 2020-11-30 11:33:50.209 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-11-30 11:33:50.209 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:50.209 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:50.210 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-11-30 11:33:50.210 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-11-30 11:33:50.210 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-11-30 11:33:50.227 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4867cb01]
[DEBUG] 2020-11-30 11:33:50.245 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:33:50.245 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-11-30 11:33:50.245 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-11-30 11:33:50.245 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:50.246 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:50.257 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:33:50.258 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.Room [READ]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-11-30 11:33:50.263 [http-nio-8080-exec-15] Loader - Static select for action ACTION_MERGE on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-11-30 11:33:50.266 [http-nio-8080-exec-15] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-11-30 11:33:50.267 [http-nio-8080-exec-15] AbstractEntityPersister - Static SQL for entity: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:33:50.268 [http-nio-8080-exec-15] AbstractEntityPersister -  Version select: select id from room_reserved where id =?
[DEBUG] 2020-11-30 11:33:50.268 [http-nio-8080-exec-15] AbstractEntityPersister -  Snapshot select: select roomreserv_.id, roomreserv_.price as price2_3_, roomreserv_.reservation_id as reservat3_3_, roomreserv_.room_id as room_id4_3_ from room_reserved roomreserv_ where roomreserv_.id=?
[DEBUG] 2020-11-30 11:33:50.268 [http-nio-8080-exec-15] AbstractEntityPersister -  Insert 0: insert into room_reserved (price, reservation_id, room_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:33:50.268 [http-nio-8080-exec-15] AbstractEntityPersister -  Update 0: update room_reserved set price=?, reservation_id=?, room_id=? where id=?
[DEBUG] 2020-11-30 11:33:50.268 [http-nio-8080-exec-15] AbstractEntityPersister -  Delete 0: delete from room_reserved where id=?
[DEBUG] 2020-11-30 11:33:50.280 [http-nio-8080-exec-15] AbstractEntityPersister -  Identity insert: insert into room_reserved (price, reservation_id, room_id) values (?, ?, ?)
[DEBUG] 2020-11-30 11:33:50.280 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22963173]
[DEBUG] 2020-11-30 11:33:50.283 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207285db]
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b5d31a]
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:33:50.284 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@717edc4b]
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c20c4a6]
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:33:50.285 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e6e53b]
[DEBUG] 2020-11-30 11:33:50.294 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:33:50.294 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:33:50.294 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:33:50.294 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:33:50.294 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:33:50.294 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:33:50.294 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:50.295 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:50.311 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-11-30 11:33:50.312 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.RoomReserved [NONE]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6333734f]
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39237f54]
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:33:50.314 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:33:50.326 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6645062c]
[DEBUG] 2020-11-30 11:33:50.331 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:33:50.334 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:33:50.338 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:33:50.339 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:33:50.339 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:33:50.339 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:33:50.339 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:33:50.339 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:33:50.339 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:33:50.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:33:50.353 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39fce632]
[DEBUG] 2020-11-30 11:33:50.354 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eeafd0]
[DEBUG] 2020-11-30 11:33:50.354 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:33:50.360 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:33:50.360 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c54bdc7]
[DEBUG] 2020-11-30 11:33:50.361 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:33:50.361 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:33:50.361 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:33:50.361 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:33:50.361 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:33:50.361 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:33:50.361 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:50.362 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:50.376 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-11-30 11:33:50.382 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.RoomReserved [READ]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:33:50.383 [http-nio-8080-exec-15] Loader - Static select for action ACTION_MERGE on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:33:50.400 [http-nio-8080-exec-15] Loader - Static select for action ACTION_REFRESH on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:33:50.416 [http-nio-8080-exec-15] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-11-30 11:33:50.421 [http-nio-8080-exec-15] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-11-30 11:33:50.421 [http-nio-8080-exec-15] AbstractEntityPersister -  Snapshot select: select user_.id, user_.Password as Password2_4_, user_.address as address3_4_, user_.details as details4_4_, user_.email as email5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.phone as phone8_4_, user_.user_name as user_nam9_4_ from user user_ where user_.id=?
[DEBUG] 2020-11-30 11:33:50.421 [http-nio-8080-exec-15] AbstractEntityPersister -  Insert 0: insert into user (Password, address, details, email, first_name, last_name, phone, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:33:50.421 [http-nio-8080-exec-15] AbstractEntityPersister -  Update 0: update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-11-30 11:33:50.421 [http-nio-8080-exec-15] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-11-30 11:33:50.421 [http-nio-8080-exec-15] AbstractEntityPersister -  Identity insert: insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:33:50.421 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367a30f6]
[DEBUG] 2020-11-30 11:33:50.454 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-11-30 11:33:50.454 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-11-30 11:33:50.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-11-30 11:33:50.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 11:33:50.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-30 11:33:50.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-30 11:33:50.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-11-30 11:33:50.456 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-11-30 11:33:50.456 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@284ebeb7]
[DEBUG] 2020-11-30 11:33:50.469 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c36096f]
[DEBUG] 2020-11-30 11:33:50.474 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-11-30 11:33:50.474 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-11-30 11:33:50.485 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bb4a7fe]
[DEBUG] 2020-11-30 11:33:50.497 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f5b896]
[DEBUG] 2020-11-30 11:33:50.504 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-11-30 11:33:50.505 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:50.509 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:50.510 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-11-30 11:33:50.535 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47588bae]
[DEBUG] 2020-11-30 11:33:50.543 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-11-30 11:33:50.544 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-11-30 11:33:50.544 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-11-30 11:33:50.544 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-11-30 11:33:50.559 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 11:33:50.560 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d63aadb]
[DEBUG] 2020-11-30 11:33:50.567 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b53a47c]
[DEBUG] 2020-11-30 11:33:50.568 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 11:33:50.569 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 11:33:50.569 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 11:33:50.569 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-11-30 11:33:50.569 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-30 11:33:50.569 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:50.570 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:50.609 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:33:50.610 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:33:50.621 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b8f3828]
[DEBUG] 2020-11-30 11:33:50.645 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-11-30 11:33:50.650 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-11-30 11:33:50.653 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-11-30 11:33:50.661 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 11:33:50.662 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-30 11:33:50.672 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-30 11:33:50.676 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-11-30 11:33:50.676 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-11-30 11:33:50.692 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21f44e49]
[DEBUG] 2020-11-30 11:33:50.693 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6931cb87]
[DEBUG] 2020-11-30 11:33:50.708 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-11-30 11:33:50.708 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-11-30 11:33:50.708 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d9f2d78]
[DEBUG] 2020-11-30 11:33:50.708 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a95aabf]
[DEBUG] 2020-11-30 11:33:50.710 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-11-30 11:33:50.715 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:50.732 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:33:50.733 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-11-30 11:33:50.744 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@310dae75]
[DEBUG] 2020-11-30 11:33:50.747 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-11-30 11:33:50.750 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-11-30 11:33:50.756 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-11-30 11:33:50.756 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-11-30 11:33:50.768 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 11:33:50.768 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36ca2ab9]
[DEBUG] 2020-11-30 11:33:50.769 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708c01a9]
[DEBUG] 2020-11-30 11:33:50.770 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 11:33:50.770 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 11:33:50.770 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 11:33:50.770 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-11-30 11:33:50.812 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-30 11:33:50.813 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:50.828 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:50.849 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:33:50.850 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:33:50.876 [http-nio-8080-exec-15] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-11-30 11:33:50.908 [http-nio-8080-exec-15] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-11-30 11:33:50.909 [http-nio-8080-exec-15] AbstractEntityPersister - Static SQL for entity: hote.entity.Role
[DEBUG] 2020-11-30 11:33:50.919 [http-nio-8080-exec-15] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-11-30 11:33:50.930 [http-nio-8080-exec-15] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_1_, role_.user_id as user_id4_1_, role_.user_name as user_nam3_1_ from role role_ where role_.id=?
[DEBUG] 2020-11-30 11:33:50.934 [http-nio-8080-exec-15] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:33:50.934 [http-nio-8080-exec-15] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2020-11-30 11:33:50.934 [http-nio-8080-exec-15] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-11-30 11:33:50.934 [http-nio-8080-exec-15] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2020-11-30 11:33:50.935 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23498932]
[DEBUG] 2020-11-30 11:33:50.968 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:33:50.969 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:33:50.969 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f38ba9]
[DEBUG] 2020-11-30 11:33:50.969 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:33:50.979 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:33:50.980 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:33:50.980 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:33:50.985 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:33:50.989 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:33:50.990 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:33:50.990 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:33:50.999 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1301d98a]
[DEBUG] 2020-11-30 11:33:50.999 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@620533dc]
[DEBUG] 2020-11-30 11:33:51.000 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-11-30 11:33:51.000 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-11-30 11:33:51.000 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e4dbfb5]
[DEBUG] 2020-11-30 11:33:51.018 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@151dfc73]
[DEBUG] 2020-11-30 11:33:51.023 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-11-30 11:33:51.029 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-11-30 11:33:51.029 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-11-30 11:33:51.029 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-11-30 11:33:51.030 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:33:51.037 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 11:33:51.042 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:33:51.057 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:33:51.057 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:51.070 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:51.097 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:33:51.123 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e418bd4]
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41ed616d]
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:33:51.124 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:33:51.125 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:33:51.125 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:33:51.125 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:33:51.125 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6924c0d5]
[DEBUG] 2020-11-30 11:33:51.142 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0a3fab]
[DEBUG] 2020-11-30 11:33:51.147 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-11-30 11:33:51.147 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-11-30 11:33:51.147 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c2ca1cf]
[DEBUG] 2020-11-30 11:33:51.147 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40e73e86]
[DEBUG] 2020-11-30 11:33:51.147 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-11-30 11:33:51.147 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-11-30 11:33:51.147 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-11-30 11:33:51.149 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-11-30 11:33:51.150 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:33:51.150 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 11:33:51.150 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:33:51.150 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:33:51.150 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:51.150 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:51.158 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:33:51.158 [http-nio-8080-exec-15] EntityLoader - Static select for entity hote.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-11-30 11:33:51.158 [http-nio-8080-exec-15] Loader - Static select for action ACTION_MERGE on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 11:33:51.161 [http-nio-8080-exec-15] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 11:33:51.201 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3dec0339]
[DEBUG] 2020-11-30 11:33:51.201 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd48f8e]
[DEBUG] 2020-11-30 11:33:51.201 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:33:51.201 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:33:51.202 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2125ab36]
[DEBUG] 2020-11-30 11:33:51.202 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea2e863]
[DEBUG] 2020-11-30 11:33:51.202 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:33:51.202 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:33:51.202 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:33:51.202 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 11:33:51.207 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:51.250 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:51.257 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.reservations)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:0>, path=[hote.entity.User.reservations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=[hote.entity.User.reservations].<elements>)
             - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:2>, path=[hote.entity.User.reservations].<elements>.roomReserveds)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:3>, path=[hote.entity.User.reservations].<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.reservations)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {guest_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-11-30 11:33:51.258 [http-nio-8080-exec-15] CollectionLoader - Static select for collection hote.entity.User.reservations: select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:33:51.265 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4290391e]
[DEBUG] 2020-11-30 11:33:51.273 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79a61d20]
[DEBUG] 2020-11-30 11:33:51.279 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:33:51.279 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:33:51.279 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 11:33:51.279 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:33:51.279 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:51.301 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:51.331 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:0>, path=[hote.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:1>, path=[hote.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-30 11:33:51.356 [http-nio-8080-exec-15] CollectionLoader - Static select for collection hote.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:33:51.356 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d812028]
[DEBUG] 2020-11-30 11:33:51.356 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4077ba5]
[DEBUG] 2020-11-30 11:33:51.357 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:33:51.357 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:33:51.357 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservation
[DEBUG] 2020-11-30 11:33:51.357 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:33:51.357 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46743b10]
[DEBUG] 2020-11-30 11:33:51.358 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:33:51.358 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:33:51.358 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:33:51.358 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:33:51.358 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:33:51.367 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:33:51.367 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:51.368 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:51.409 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Reservation.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Reservation.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Reservation.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:2>, path=[hote.entity.Reservation.roomReserveds].<elements>.room)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Reservation.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {reservat3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(room)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Room)
                      - SQL table alias mapping - room1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-11-30 11:33:51.409 [http-nio-8080-exec-15] CollectionLoader - Static select for collection hote.entity.Reservation.roomReserveds: select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:33:51.409 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20e6603d]
[DEBUG] 2020-11-30 11:33:51.410 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@240a2794]
[DEBUG] 2020-11-30 11:33:51.410 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:33:51.410 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:33:51.410 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2401ff5f]
[DEBUG] 2020-11-30 11:33:51.441 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:33:51.448 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:51.448 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:33:51.448 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:33:51.448 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:33:51.449 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:33:51.449 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bec609e]
[DEBUG] 2020-11-30 11:33:51.449 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:33:51.449 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:33:51.465 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:33:51.465 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:33:51.465 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:33:51.465 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:33:51.465 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:33:51.465 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:33:51.465 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:33:51.466 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:33:51.475 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2be2fc1f]
[DEBUG] 2020-11-30 11:33:51.475 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68b5c795]
[DEBUG] 2020-11-30 11:33:51.496 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:33:51.496 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:33:51.496 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : room
[DEBUG] 2020-11-30 11:33:51.497 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:33:51.510 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:33:51.524 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Room.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Room.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Room.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=[hote.entity.Room.roomReserveds].<elements>.reservation)
                - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:3>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user)
                   - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:4>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:5>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Room.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {room_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(reservation)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}

[DEBUG] 2020-11-30 11:33:51.524 [http-nio-8080-exec-15] CollectionLoader - Static select for collection hote.entity.Room.roomReserveds: select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:33:52.807 [http-nio-8080-exec-15] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-11-30 11:33:52.811 [http-nio-8080-exec-15] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-11-30 11:33:52.825 [http-nio-8080-exec-15] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-11-30 11:33:53.214 [http-nio-8080-exec-15] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-11-30 11:33:53.258 [http-nio-8080-exec-15] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-11-30 11:33:53.275 [http-nio-8080-exec-15] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-11-30 11:33:53.276 [http-nio-8080-exec-15] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-11-30 11:33:53.381 [http-nio-8080-exec-15] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@46cb92b9
[DEBUG] 2020-11-30 11:33:53.475 [http-nio-8080-exec-15] SessionFactoryRegistry - Registering SessionFactory: 0b0e40eb-3f10-4663-b68d-28d2d08b7487 (<unnamed>)
[DEBUG] 2020-11-30 11:33:53.479 [http-nio-8080-exec-15] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-11-30 11:33:56.365 [http-nio-8080-exec-15] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-11-30 11:33:57.672 [http-nio-8080-exec-15] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-11-30 11:33:58.441 [http-nio-8080-exec-15] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3f434bec
[DEBUG] 2020-11-30 11:33:59.699 [http-nio-8080-exec-15] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-11-30 11:33:59.949 [http-nio-8080-exec-15] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:33:59.968 [http-nio-8080-exec-15] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'first_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-11-30 11:34:00.497 [http-nio-8080-exec-15] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-11-30 11:34:00.869 [http-nio-8080-exec-15] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-11-30 11:34:00.893 [http-nio-8080-exec-15] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:34:00.957 [http-nio-8080-exec-15] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:34:00.980 [http-nio-8080-exec-15] DotNode - getDataType() : first_name -> org.hibernate.type.StringType@7fa9c290
[DEBUG] 2020-11-30 11:34:00.986 [http-nio-8080-exec-15] FromReferenceNode - Resolved : generatedAlias0.first_name -> user0_.first_name
[DEBUG] 2020-11-30 11:34:01.077 [http-nio-8080-exec-15] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-11-30 11:34:01.079 [http-nio-8080-exec-15] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.first_name user0_.id first_name ) ? ) ) )
[DEBUG] 2020-11-30 11:34:01.450 [http-nio-8080-exec-15] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-11-30 11:34:01.474 [http-nio-8080-exec-15] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-11-30 11:34:01.494 [http-nio-8080-exec-15] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.first_name' {propertyName=first_name,dereferenceType=PRIMITIVE,getPropertyPath=first_name,path=generatedAlias0.first_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'first_name' {originalText=first_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7fa9c290}

[DEBUG] 2020-11-30 11:34:01.494 [http-nio-8080-exec-15] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:34:01.713 [http-nio-8080-exec-15] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-11-30 11:34:01.721 [http-nio-8080-exec-15] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.first_name=?
[DEBUG] 2020-11-30 11:34:01.722 [http-nio-8080-exec-15] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:34:02.292 [http-nio-8080-exec-15] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.first_name=?
[DEBUG] 2020-11-30 11:34:03.046 [http-nio-8080-exec-15] Loader - Result set row: 0
[DEBUG] 2020-11-30 11:34:03.345 [http-nio-8080-exec-15] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-30 11:34:03.765 [http-nio-8080-exec-15] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-30 11:34:03.830 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-11-30 11:34:03.830 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:03.830 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:34:03.831 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.132 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:34:04.132 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.133 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-11-30 11:34:04.133 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.133 [http-nio-8080-exec-15] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-30 11:34:04.137 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:34:04.138 [http-nio-8080-exec-15] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:34:04.145 [http-nio-8080-exec-15] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:34:04.161 [http-nio-8080-exec-15] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:34:04.164 [http-nio-8080-exec-15] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:34:04.190 [http-nio-8080-exec-15] TwoPhaseLoad - Resolving attributes for [hote.entity.Role#2]
[DEBUG] 2020-11-30 11:34:04.191 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-11-30 11:34:04.191 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.191 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 11:34:04.191 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.194 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `userName` : value = jpatel
[DEBUG] 2020-11-30 11:34:04.194 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.194 [http-nio-8080-exec-15] TwoPhaseLoad - Done materializing entity [hote.entity.Role#2]
[DEBUG] 2020-11-30 11:34:04.195 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:34:04.196 [http-nio-8080-exec-15] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:34:04.196 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:34:04.197 [http-nio-8080-exec-15] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:34:04.198 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:34:04.199 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:34:04.200 [http-nio-8080-exec-15] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:34:04.249 [http-nio-8080-exec-15] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:34:04.249 [http-nio-8080-exec-15] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:34:04.309 [http-nio-8080-exec-15] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:34:04.310 [http-nio-8080-exec-15] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:34:04.310 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-11-30 11:34:04.310 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.319 [http-nio-8080-exec-15] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:34:04.320 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:34:04.320 [http-nio-8080-exec-15] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:34:04.320 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:34:04.320 [http-nio-8080-exec-15] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:34:04.320 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:34:04.320 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:34:04.320 [http-nio-8080-exec-15] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:34:04.327 [http-nio-8080-exec-15] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:34:04.327 [http-nio-8080-exec-15] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:34:04.338 [http-nio-8080-exec-15] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:34:04.338 [http-nio-8080-exec-15] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:34:04.339 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-11-30 11:34:04.339 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.339 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-11-30 11:34:04.339 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.342 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-11-30 11:34:04.342 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:34:04.346 [http-nio-8080-exec-15] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:34:04.351 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:34:04.351 [http-nio-8080-exec-15] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:34:04.351 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:34:04.359 [http-nio-8080-exec-15] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:34:04.360 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:34:04.360 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:34:04.360 [http-nio-8080-exec-15] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:34:04.416 [http-nio-8080-exec-15] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:34:04.417 [http-nio-8080-exec-15] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:34:04.450 [http-nio-8080-exec-15] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:34:04.456 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:34:04.456 [http-nio-8080-exec-15] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:34:04.456 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:34:04.456 [http-nio-8080-exec-15] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:34:04.457 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:34:04.503 [http-nio-8080-exec-15] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
