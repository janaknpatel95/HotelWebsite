[DEBUG] 2020-10-06 11:44:54.910 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-06 11:44:54.922 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-06 11:44:54.944 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-10-06 11:44:55.212 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-10-06 11:44:55.219 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-10-06 11:44:55.756 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-06 11:44:56.467 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-06 11:44:56.527 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-06 11:44:56.529 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-10-06 11:44:56.594 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-10-06 11:44:56.693 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@69b2f8e5
[DEBUG] 2020-10-06 11:44:56.698 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@69b2f8e5
[DEBUG] 2020-10-06 11:44:56.698 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@69b2f8e5
[DEBUG] 2020-10-06 11:44:56.699 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a411233
[DEBUG] 2020-10-06 11:44:56.701 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f462e3b
[DEBUG] 2020-10-06 11:44:56.705 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@585c13de
[DEBUG] 2020-10-06 11:44:56.706 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@77128dab
[DEBUG] 2020-10-06 11:44:56.706 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@77128dab
[DEBUG] 2020-10-06 11:44:56.706 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77128dab
[DEBUG] 2020-10-06 11:44:56.707 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@60baef24
[DEBUG] 2020-10-06 11:44:56.707 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@60baef24
[DEBUG] 2020-10-06 11:44:56.708 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60baef24
[DEBUG] 2020-10-06 11:44:56.711 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@43b0ade
[DEBUG] 2020-10-06 11:44:56.716 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@43b0ade
[DEBUG] 2020-10-06 11:44:56.716 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@43b0ade
[DEBUG] 2020-10-06 11:44:56.717 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@a0a9fa5
[DEBUG] 2020-10-06 11:44:56.717 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@a0a9fa5
[DEBUG] 2020-10-06 11:44:56.717 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a0a9fa5
[DEBUG] 2020-10-06 11:44:56.723 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@466d49f0
[DEBUG] 2020-10-06 11:44:56.723 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@466d49f0
[DEBUG] 2020-10-06 11:44:56.723 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@466d49f0
[DEBUG] 2020-10-06 11:44:56.727 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@72458efc
[DEBUG] 2020-10-06 11:44:56.728 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@72458efc
[DEBUG] 2020-10-06 11:44:56.728 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72458efc
[DEBUG] 2020-10-06 11:44:56.729 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2e3a5237
[DEBUG] 2020-10-06 11:44:56.729 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2e3a5237
[DEBUG] 2020-10-06 11:44:56.729 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2e3a5237
[DEBUG] 2020-10-06 11:44:56.729 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b44b63d
[DEBUG] 2020-10-06 11:44:56.731 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b44b63d
[DEBUG] 2020-10-06 11:44:56.732 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b87581
[DEBUG] 2020-10-06 11:44:56.732 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b87581
[DEBUG] 2020-10-06 11:44:56.734 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1c12f3ee
[DEBUG] 2020-10-06 11:44:56.734 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c12f3ee
[DEBUG] 2020-10-06 11:44:56.735 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5cbb84b1
[DEBUG] 2020-10-06 11:44:56.735 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@511d5d04
[DEBUG] 2020-10-06 11:44:56.736 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@11653e3b
[DEBUG] 2020-10-06 11:44:56.736 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@11653e3b
[DEBUG] 2020-10-06 11:44:56.740 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7c974942
[DEBUG] 2020-10-06 11:44:56.744 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7c974942
[DEBUG] 2020-10-06 11:44:56.753 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@34b9fc7d
[DEBUG] 2020-10-06 11:44:56.754 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34b9fc7d
[DEBUG] 2020-10-06 11:44:56.759 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@588ffeb
[DEBUG] 2020-10-06 11:44:56.759 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@588ffeb
[DEBUG] 2020-10-06 11:44:56.762 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@34cf5a97
[DEBUG] 2020-10-06 11:44:56.762 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@34cf5a97
[DEBUG] 2020-10-06 11:44:56.763 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6443b128
[DEBUG] 2020-10-06 11:44:56.763 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6443b128
[DEBUG] 2020-10-06 11:44:56.774 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61d01788
[DEBUG] 2020-10-06 11:44:56.774 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61d01788
[DEBUG] 2020-10-06 11:44:56.779 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ad6fa53
[DEBUG] 2020-10-06 11:44:56.779 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ad6fa53
[DEBUG] 2020-10-06 11:44:56.783 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30af7377
[DEBUG] 2020-10-06 11:44:56.783 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30af7377
[DEBUG] 2020-10-06 11:44:56.785 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@46c00568
[DEBUG] 2020-10-06 11:44:56.785 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46c00568
[DEBUG] 2020-10-06 11:44:56.787 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@59712875
[DEBUG] 2020-10-06 11:44:56.787 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59712875
[DEBUG] 2020-10-06 11:44:56.787 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@25b865b5
[DEBUG] 2020-10-06 11:44:56.787 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25b865b5
[DEBUG] 2020-10-06 11:44:56.789 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25b865b5
[DEBUG] 2020-10-06 11:44:56.790 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@bdecc21
[DEBUG] 2020-10-06 11:44:56.791 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@54da32dc
[DEBUG] 2020-10-06 11:44:56.791 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@54da32dc
[DEBUG] 2020-10-06 11:44:56.791 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@54da32dc
[DEBUG] 2020-10-06 11:44:56.791 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e8a46b7
[DEBUG] 2020-10-06 11:44:56.794 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1e6308a9
[DEBUG] 2020-10-06 11:44:56.800 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e6308a9
[DEBUG] 2020-10-06 11:44:56.803 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@783ec989
[DEBUG] 2020-10-06 11:44:56.803 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@783ec989
[DEBUG] 2020-10-06 11:44:56.804 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@50825a02
[DEBUG] 2020-10-06 11:44:56.804 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@50825a02
[DEBUG] 2020-10-06 11:44:56.805 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2abc224d
[DEBUG] 2020-10-06 11:44:56.807 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2abc224d
[DEBUG] 2020-10-06 11:44:56.808 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71178a52
[DEBUG] 2020-10-06 11:44:56.808 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71178a52
[DEBUG] 2020-10-06 11:44:56.808 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9a7a808
[DEBUG] 2020-10-06 11:44:56.809 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6a4d7f76
[DEBUG] 2020-10-06 11:44:56.809 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6a4d7f76
[DEBUG] 2020-10-06 11:44:56.809 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6a4d7f76
[DEBUG] 2020-10-06 11:44:56.810 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6edaa77a
[DEBUG] 2020-10-06 11:44:56.810 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6edaa77a
[DEBUG] 2020-10-06 11:44:56.811 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6edaa77a
[DEBUG] 2020-10-06 11:44:56.812 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@29314cc9
[DEBUG] 2020-10-06 11:44:56.815 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6b1e7ad3
[DEBUG] 2020-10-06 11:44:56.816 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5972d253
[DEBUG] 2020-10-06 11:44:56.816 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5972d253
[DEBUG] 2020-10-06 11:44:56.816 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5972d253
[DEBUG] 2020-10-06 11:44:56.816 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@551de37d
[DEBUG] 2020-10-06 11:44:56.816 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@551de37d
[DEBUG] 2020-10-06 11:44:56.820 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@551de37d
[DEBUG] 2020-10-06 11:44:56.820 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@997d532
[DEBUG] 2020-10-06 11:44:56.825 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3028e50e
[DEBUG] 2020-10-06 11:44:56.827 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5f14a673
[DEBUG] 2020-10-06 11:44:56.828 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f14a673
[DEBUG] 2020-10-06 11:44:56.828 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@76911385
[DEBUG] 2020-10-06 11:44:56.837 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@77ee25f1
[DEBUG] 2020-10-06 11:44:56.837 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77ee25f1
[DEBUG] 2020-10-06 11:44:56.842 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2ca6546f
[DEBUG] 2020-10-06 11:44:56.850 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2ca6546f
[DEBUG] 2020-10-06 11:44:56.851 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7578e06a
[DEBUG] 2020-10-06 11:44:56.851 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11a7ba62
[DEBUG] 2020-10-06 11:44:56.854 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@34523d46
[DEBUG] 2020-10-06 11:44:56.861 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@31fc71ab
[DEBUG] 2020-10-06 11:44:56.861 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31fc71ab
[DEBUG] 2020-10-06 11:44:56.863 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4078695f
[DEBUG] 2020-10-06 11:44:56.863 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79a1728c
[DEBUG] 2020-10-06 11:44:56.863 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a7f0ab6
[DEBUG] 2020-10-06 11:44:56.869 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41f35f7c
[DEBUG] 2020-10-06 11:44:56.869 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42c2f48c
[DEBUG] 2020-10-06 11:44:56.870 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3005db4a
[DEBUG] 2020-10-06 11:44:56.870 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@425d5d46
[DEBUG] 2020-10-06 11:44:56.870 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@198ef2ce
[DEBUG] 2020-10-06 11:44:57.008 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-06 11:44:57.008 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-06 11:44:57.009 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-06 11:44:57.010 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-06 11:44:57.010 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-06 11:44:57.011 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-06 11:44:57.013 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-06 11:44:57.020 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-06 11:44:57.020 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-06 11:44:57.021 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-06 11:44:57.021 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-06 11:44:57.022 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-06 11:44:57.022 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-06 11:44:57.022 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-06 11:44:57.041 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotel_test
[INFO ] 2020-10-06 11:44:57.041 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-06 11:44:57.042 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-06 11:44:57.442 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-06 11:44:58.680 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-06 11:44:58.685 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-06 11:44:58.686 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-06 11:44:58.788 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-06 11:44:58.830 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-06 11:44:58.894 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-06 11:44:59.036 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-06 11:44:59.039 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40e60ece] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3f9270ed]
[DEBUG] 2020-10-06 11:44:59.177 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-10-06 11:44:59.238 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-06 11:44:59.249 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-10-06 11:44:59.251 [main] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-10-06 11:44:59.300 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.306 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-06 11:44:59.308 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-10-06 11:44:59.309 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-06 11:44:59.316 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-06 11:44:59.335 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-06 11:44:59.336 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.338 [main] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-10-06 11:44:59.338 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-10-06 11:44:59.338 [main] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-10-06 11:44:59.338 [main] PropertyBinder - Building property first_name
[DEBUG] 2020-10-06 11:44:59.338 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.338 [main] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-10-06 11:44:59.338 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-10-06 11:44:59.338 [main] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-10-06 11:44:59.338 [main] PropertyBinder - Building property last_name
[DEBUG] 2020-10-06 11:44:59.341 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-06 11:44:59.344 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.349 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.373 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.384 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.385 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-06 11:44:59.392 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-06 11:44:59.392 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-06 11:44:59.397 [main] CollectionBinder - Collection role: hote.entity.User.orders
[DEBUG] 2020-10-06 11:44:59.404 [main] PropertyBinder - Building property orders
[DEBUG] 2020-10-06 11:44:59.408 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.408 [main] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-10-06 11:44:59.408 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-10-06 11:44:59.408 [main] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-10-06 11:44:59.408 [main] PropertyBinder - Building property user_name
[DEBUG] 2020-10-06 11:44:59.409 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Order
[DEBUG] 2020-10-06 11:44:59.410 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-06 11:44:59.410 [main] EntityBinder - Import with entity name Order
[DEBUG] 2020-10-06 11:44:59.410 [main] EntityBinder - Bind entity hote.entity.Order on table orders
[DEBUG] 2020-10-06 11:44:59.422 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.422 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-06 11:44:59.422 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:id]
[DEBUG] 2020-10-06 11:44:59.422 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-06 11:44:59.422 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-06 11:44:59.422 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-06 11:44:59.423 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.424 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-10-06 11:44:59.424 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:description]
[DEBUG] 2020-10-06 11:44:59.426 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-10-06 11:44:59.426 [main] PropertyBinder - Building property description
[DEBUG] 2020-10-06 11:44:59.426 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-06 11:44:59.426 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 11:44:59.427 [main] PropertyBinder - Building property user
[DEBUG] 2020-10-06 11:44:59.430 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-10-06 11:44:59.430 [main] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-10-06 11:44:59.431 [main] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-10-06 11:44:59.431 [main] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-10-06 11:44:59.431 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-10-06 11:44:59.431 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-10-06 11:44:59.439 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-10-06 11:44:59.441 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [orders]
[DEBUG] 2020-10-06 11:44:59.441 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.orders
[DEBUG] 2020-10-06 11:44:59.442 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.orders through a foreign key
[DEBUG] 2020-10-06 11:44:59.442 [main] CollectionBinder - Mapping collection: hote.entity.User.orders -> orders
[DEBUG] 2020-10-06 11:44:59.443 [main] TableBinder - Retrieving property hote.entity.Order.user
[DEBUG] 2020-10-06 11:44:59.443 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Order
[DEBUG] 2020-10-06 11:44:59.443 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-10-06 11:44:59.457 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-10-06 11:44:59.531 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-10-06 11:44:59.532 [main] Settings - SessionFactory name : null
[DEBUG] 2020-10-06 11:44:59.532 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-10-06 11:44:59.532 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-10-06 11:44:59.532 [main] Settings - Statistics: disabled
[DEBUG] 2020-10-06 11:44:59.532 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-10-06 11:44:59.532 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-10-06 11:44:59.532 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-10-06 11:44:59.532 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-10-06 11:44:59.536 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-10-06 11:44:59.536 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-10-06 11:44:59.536 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-10-06 11:44:59.536 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-10-06 11:44:59.536 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-10-06 11:44:59.536 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-10-06 11:44:59.536 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Named query checking : enabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-10-06 11:44:59.537 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-10-06 11:44:59.538 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-10-06 11:44:59.538 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-10-06 11:44:59.538 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-10-06 11:44:59.538 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-10-06 11:44:59.538 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-10-06 11:44:59.538 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-10-06 11:44:59.538 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-10-06 11:44:59.539 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-10-06 11:44:59.540 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-10-06 11:44:59.635 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-10-06 11:44:59.663 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-10-06 11:44:59.663 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/snap/intellij-idea-ultimate/248/lib/idea_rt.jar:/snap/intellij-idea-ultimate/248/plugins/junit/lib/junit5-rt.jar:/snap/intellij-idea-ultimate/248/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 hotel.persistence.OrderTest,updateSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotel_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/HotelWebsie, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@444f44c5, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hotel_test, java.class.version=55.0}
[DEBUG] 2020-10-06 11:44:59.690 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-10-06 11:44:59.691 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-10-06 11:44:59.691 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-10-06 11:44:59.691 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40e60ece] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@490c7a83]
[DEBUG] 2020-10-06 11:44:59.817 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-10-06 11:44:59.818 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-10-06 11:44:59.837 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-10-06 11:44:59.838 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-10-06 11:45:00.095 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-10-06 11:45:00.095 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-10-06 11:45:00.096 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-10-06 11:45:00.096 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-10-06 11:45:00.135 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.orders
[DEBUG] 2020-10-06 11:45:00.135 [main] AbstractCollectionPersister -  Row insert: update orders set user_id=? where id=?
[DEBUG] 2020-10-06 11:45:00.135 [main] AbstractCollectionPersister -  Row update: update orders set  where id=?
[DEBUG] 2020-10-06 11:45:00.135 [main] AbstractCollectionPersister -  Row delete: update orders set user_id=null where user_id=? and id=?
[DEBUG] 2020-10-06 11:45:00.135 [main] AbstractCollectionPersister -  One-shot delete: update orders set user_id=null where user_id=?
[DEBUG] 2020-10-06 11:45:00.140 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-10-06 11:45:00.144 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-10-06 11:45:00.145 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.first_name as first_na2_1_, user_.last_name as last_nam3_1_, user_.user_name as user_nam4_1_ from user user_ where user_.id=?
[DEBUG] 2020-10-06 11:45:00.145 [main] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-10-06 11:45:00.145 [main] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2020-10-06 11:45:00.145 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-10-06 11:45:00.145 [main] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-10-06 11:45:00.178 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc165f6]
[DEBUG] 2020-10-06 11:45:00.180 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-10-06 11:45:00.180 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-10-06 11:45:00.180 [main] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-10-06 11:45:00.187 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c232051]
[DEBUG] 2020-10-06 11:45:00.188 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16134476]
[DEBUG] 2020-10-06 11:45:00.191 [main] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-10-06 11:45:00.191 [main] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-10-06 11:45:00.191 [main] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-10-06 11:45:00.192 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-10-06 11:45:00.192 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 11:45:00.205 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 11:45:00.215 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-10-06 11:45:00.223 [main] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 11:45:00.223 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3946075]
[DEBUG] 2020-10-06 11:45:00.223 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-10-06 11:45:00.223 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-10-06 11:45:00.223 [main] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-10-06 11:45:00.223 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ac519dc]
[DEBUG] 2020-10-06 11:45:00.223 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d53e6f7]
[DEBUG] 2020-10-06 11:45:00.224 [main] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-10-06 11:45:00.224 [main] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-10-06 11:45:00.224 [main] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-10-06 11:45:00.224 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-10-06 11:45:00.224 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 11:45:00.224 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 11:45:00.226 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-10-06 11:45:00.227 [main] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 11:45:00.243 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.id as id1_0_3_, orders1_.id as id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 11:45:00.245 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.id as id1_0_3_, orders1_.id as id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 11:45:00.245 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Order
[DEBUG] 2020-10-06 11:45:00.245 [main] AbstractEntityPersister -  Version select: select id from orders where id =?
[DEBUG] 2020-10-06 11:45:00.245 [main] AbstractEntityPersister -  Snapshot select: select order_.id, order_.description as descript2_0_, order_.user_id as user_id3_0_ from orders order_ where order_.id=?
[DEBUG] 2020-10-06 11:45:00.245 [main] AbstractEntityPersister -  Insert 0: insert into orders (description, user_id, id) values (?, ?, ?)
[DEBUG] 2020-10-06 11:45:00.245 [main] AbstractEntityPersister -  Update 0: update orders set description=?, user_id=? where id=?
[DEBUG] 2020-10-06 11:45:00.245 [main] AbstractEntityPersister -  Delete 0: delete from orders where id=?
[DEBUG] 2020-10-06 11:45:00.245 [main] AbstractEntityPersister -  Identity insert: insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-10-06 11:45:00.245 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0a2638]
[DEBUG] 2020-10-06 11:45:00.245 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-06 11:45:00.246 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-06 11:45:00.246 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cb452c]
[DEBUG] 2020-10-06 11:45:00.246 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-10-06 11:45:00.246 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-10-06 11:45:00.247 [main] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-10-06 11:45:00.247 [main] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-10-06 11:45:00.247 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-10-06 11:45:00.247 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 11:45:00.247 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 11:45:00.253 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-10-06 11:45:00.254 [main] EntityLoader - Static select for entity hote.entity.Order [NONE]: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 11:45:00.254 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b3a2f6]
[DEBUG] 2020-10-06 11:45:00.254 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-06 11:45:00.254 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-06 11:45:00.254 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@317890ea]
[DEBUG] 2020-10-06 11:45:00.254 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-10-06 11:45:00.254 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-10-06 11:45:00.254 [main] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-10-06 11:45:00.254 [main] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-10-06 11:45:00.254 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-10-06 11:45:00.254 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 11:45:00.262 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 11:45:00.263 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-10-06 11:45:00.263 [main] EntityLoader - Static select for entity hote.entity.Order [READ]: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 11:45:00.263 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Order: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.id=?
[DEBUG] 2020-10-06 11:45:00.266 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Order: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.id=?
[DEBUG] 2020-10-06 11:45:00.281 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@151732fb]
[DEBUG] 2020-10-06 11:45:00.281 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@729c8063]
[DEBUG] 2020-10-06 11:45:00.281 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-06 11:45:00.281 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-06 11:45:00.281 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-10-06 11:45:00.281 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 11:45:00.285 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 11:45:00.286 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.orders)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:0>, path=[hote.entity.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:1>, path=[hote.entity.User.orders].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-10-06 11:45:00.287 [main] CollectionLoader - Static select for collection hote.entity.User.orders: select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 11:45:00.330 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-10-06 11:45:00.330 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-10-06 11:45:00.330 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-10-06 11:45:00.338 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-10-06 11:45:00.338 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-10-06 11:45:00.339 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-10-06 11:45:00.339 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-10-06 11:45:00.340 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@49cd946c
[DEBUG] 2020-10-06 11:45:00.343 [main] SessionFactoryRegistry - Registering SessionFactory: ded0775b-27dc-4395-95f0-4b8d78b57350 (<unnamed>)
[DEBUG] 2020-10-06 11:45:00.344 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-10-06 11:45:00.543 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-10-06 11:45:00.564 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 11:45:00.585 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 11:45:00.586 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 11:45:00.598 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 11:45:00.605 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 11:45:00.605 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.605 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 11:45:00.605 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.606 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 11:45:00.606 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 11:45:00.606 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 11:45:00.606 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.606 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 11:45:00.607 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.610 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 11:45:00.610 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.619 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 11:45:00.621 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.622 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 11:45:00.622 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 11:45:00.623 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.623 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 11:45:00.631 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.633 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 11:45:00.633 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.633 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 11:45:00.633 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.633 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 11:45:00.633 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 11:45:00.633 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.633 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 11:45:00.633 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.634 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 11:45:00.634 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 11:45:00.634 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.634 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 11:45:00.634 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 11:45:00.634 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 11:45:00.634 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#3
[DEBUG] 2020-10-06 11:45:00.634 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 11:45:00.653 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 11:45:00.655 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 11:45:00.655 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 11:45:00.655 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.656 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 11:45:00.656 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 11:45:00.656 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.656 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 11:45:00.658 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.658 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 11:45:00.658 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.658 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 11:45:00.658 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.658 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 11:45:00.658 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 11:45:00.658 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.658 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 11:45:00.658 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 11:45:00.659 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 11:45:00.659 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 11:45:00.659 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 11:45:00.659 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 11:45:00.659 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 11:45:00.659 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 11:45:00.659 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#3
[DEBUG] 2020-10-06 11:45:00.659 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
