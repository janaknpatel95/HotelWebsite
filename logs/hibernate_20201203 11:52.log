[DEBUG] 2020-12-03 11:49:34.632 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-03 11:49:34.718 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-03 11:49:34.783 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-12-03 11:49:35.549 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-12-03 11:49:35.579 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-12-03 11:49:36.604 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-03 11:49:38.028 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-03 11:49:38.238 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-03 11:49:38.245 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-12-03 11:49:38.552 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-12-03 11:49:38.781 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2785db06
[DEBUG] 2020-12-03 11:49:38.783 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2785db06
[DEBUG] 2020-12-03 11:49:38.787 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2785db06
[DEBUG] 2020-12-03 11:49:38.793 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@61ffd148
[DEBUG] 2020-12-03 11:49:38.797 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@715a70e9
[DEBUG] 2020-12-03 11:49:38.802 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@42507640
[DEBUG] 2020-12-03 11:49:38.805 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ff6dd3c
[DEBUG] 2020-12-03 11:49:38.806 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ff6dd3c
[DEBUG] 2020-12-03 11:49:38.813 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ff6dd3c
[DEBUG] 2020-12-03 11:49:38.817 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@576b7c74
[DEBUG] 2020-12-03 11:49:38.818 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@576b7c74
[DEBUG] 2020-12-03 11:49:38.818 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@576b7c74
[DEBUG] 2020-12-03 11:49:38.826 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2251b3bc
[DEBUG] 2020-12-03 11:49:38.827 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2251b3bc
[DEBUG] 2020-12-03 11:49:38.827 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2251b3bc
[DEBUG] 2020-12-03 11:49:38.829 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4130a648
[DEBUG] 2020-12-03 11:49:38.830 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4130a648
[DEBUG] 2020-12-03 11:49:38.831 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4130a648
[DEBUG] 2020-12-03 11:49:38.841 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3aed69dd
[DEBUG] 2020-12-03 11:49:38.842 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3aed69dd
[DEBUG] 2020-12-03 11:49:38.842 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3aed69dd
[DEBUG] 2020-12-03 11:49:38.846 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7bbfc5ff
[DEBUG] 2020-12-03 11:49:38.847 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7bbfc5ff
[DEBUG] 2020-12-03 11:49:38.848 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7bbfc5ff
[DEBUG] 2020-12-03 11:49:38.853 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62b09715
[DEBUG] 2020-12-03 11:49:38.859 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62b09715
[DEBUG] 2020-12-03 11:49:38.860 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62b09715
[DEBUG] 2020-12-03 11:49:38.863 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39941489
[DEBUG] 2020-12-03 11:49:38.864 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39941489
[DEBUG] 2020-12-03 11:49:38.871 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4538856f
[DEBUG] 2020-12-03 11:49:38.872 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4538856f
[DEBUG] 2020-12-03 11:49:38.874 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7f79edee
[DEBUG] 2020-12-03 11:49:38.874 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f79edee
[DEBUG] 2020-12-03 11:49:38.878 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3bfae028
[DEBUG] 2020-12-03 11:49:38.881 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43f03c23
[DEBUG] 2020-12-03 11:49:38.883 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@40d52be7
[DEBUG] 2020-12-03 11:49:38.885 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40d52be7
[DEBUG] 2020-12-03 11:49:38.889 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@71e7adbb
[DEBUG] 2020-12-03 11:49:38.889 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71e7adbb
[DEBUG] 2020-12-03 11:49:38.906 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4e3f2908
[DEBUG] 2020-12-03 11:49:38.906 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4e3f2908
[DEBUG] 2020-12-03 11:49:38.912 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a3b42
[DEBUG] 2020-12-03 11:49:38.913 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a3b42
[DEBUG] 2020-12-03 11:49:38.916 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5af5d76f
[DEBUG] 2020-12-03 11:49:38.917 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5af5d76f
[DEBUG] 2020-12-03 11:49:38.919 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766a52f5
[DEBUG] 2020-12-03 11:49:38.924 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766a52f5
[DEBUG] 2020-12-03 11:49:38.930 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a7b2e2
[DEBUG] 2020-12-03 11:49:38.930 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a7b2e2
[DEBUG] 2020-12-03 11:49:38.935 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@673e76b3
[DEBUG] 2020-12-03 11:49:38.935 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@673e76b3
[DEBUG] 2020-12-03 11:49:38.940 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3663d0ba
[DEBUG] 2020-12-03 11:49:38.940 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3663d0ba
[DEBUG] 2020-12-03 11:49:38.943 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7f4596d0
[DEBUG] 2020-12-03 11:49:38.948 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f4596d0
[DEBUG] 2020-12-03 11:49:38.950 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@29bcf51d
[DEBUG] 2020-12-03 11:49:38.950 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29bcf51d
[DEBUG] 2020-12-03 11:49:38.955 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4351ed61
[DEBUG] 2020-12-03 11:49:38.956 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4351ed61
[DEBUG] 2020-12-03 11:49:38.956 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4351ed61
[DEBUG] 2020-12-03 11:49:38.958 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c34365c
[DEBUG] 2020-12-03 11:49:38.963 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@422ab737
[DEBUG] 2020-12-03 11:49:38.964 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@422ab737
[DEBUG] 2020-12-03 11:49:38.964 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@422ab737
[DEBUG] 2020-12-03 11:49:38.966 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@11381415
[DEBUG] 2020-12-03 11:49:38.976 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3ad8717d
[DEBUG] 2020-12-03 11:49:38.980 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ad8717d
[DEBUG] 2020-12-03 11:49:38.982 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2ac519dc
[DEBUG] 2020-12-03 11:49:38.982 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ac519dc
[DEBUG] 2020-12-03 11:49:38.991 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6be6931f
[DEBUG] 2020-12-03 11:49:38.992 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6be6931f
[DEBUG] 2020-12-03 11:49:38.998 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4872669f
[DEBUG] 2020-12-03 11:49:39.008 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4872669f
[DEBUG] 2020-12-03 11:49:39.010 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3dc40ab9
[DEBUG] 2020-12-03 11:49:39.016 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3dc40ab9
[DEBUG] 2020-12-03 11:49:39.019 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@cde8c6c
[DEBUG] 2020-12-03 11:49:39.025 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@151ab2b9
[DEBUG] 2020-12-03 11:49:39.026 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@151ab2b9
[DEBUG] 2020-12-03 11:49:39.026 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@151ab2b9
[DEBUG] 2020-12-03 11:49:39.042 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4f116ca2
[DEBUG] 2020-12-03 11:49:39.043 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4f116ca2
[DEBUG] 2020-12-03 11:49:39.043 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4f116ca2
[DEBUG] 2020-12-03 11:49:39.056 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@78b7f805
[DEBUG] 2020-12-03 11:49:39.060 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@23468512
[DEBUG] 2020-12-03 11:49:39.072 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@64b0d1fa
[DEBUG] 2020-12-03 11:49:39.074 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@64b0d1fa
[DEBUG] 2020-12-03 11:49:39.074 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@64b0d1fa
[DEBUG] 2020-12-03 11:49:39.085 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59838256
[DEBUG] 2020-12-03 11:49:39.085 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59838256
[DEBUG] 2020-12-03 11:49:39.085 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59838256
[DEBUG] 2020-12-03 11:49:39.087 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@12219f6a
[DEBUG] 2020-12-03 11:49:39.088 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1f736d00
[DEBUG] 2020-12-03 11:49:39.092 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@46fc522d
[DEBUG] 2020-12-03 11:49:39.093 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46fc522d
[DEBUG] 2020-12-03 11:49:39.099 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77cb452c
[DEBUG] 2020-12-03 11:49:39.107 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@53aa38be
[DEBUG] 2020-12-03 11:49:39.108 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53aa38be
[DEBUG] 2020-12-03 11:49:39.112 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@35adf623
[DEBUG] 2020-12-03 11:49:39.112 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35adf623
[DEBUG] 2020-12-03 11:49:39.117 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5232e3f1
[DEBUG] 2020-12-03 11:49:39.121 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f31df32
[DEBUG] 2020-12-03 11:49:39.129 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1c8f6c66
[DEBUG] 2020-12-03 11:49:39.153 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6661d8c0
[DEBUG] 2020-12-03 11:49:39.154 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6661d8c0
[DEBUG] 2020-12-03 11:49:39.162 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@315c081
[DEBUG] 2020-12-03 11:49:39.163 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b2dd3df
[DEBUG] 2020-12-03 11:49:39.163 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4db77402
[DEBUG] 2020-12-03 11:49:39.163 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@73c48264
[DEBUG] 2020-12-03 11:49:39.163 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ef85555
[DEBUG] 2020-12-03 11:49:39.166 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5bcec67e
[DEBUG] 2020-12-03 11:49:39.167 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2dafae61
[DEBUG] 2020-12-03 11:49:39.169 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a2fce12
[DEBUG] 2020-12-03 11:49:39.353 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-03 11:49:39.354 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-03 11:49:39.361 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-03 11:49:39.363 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-03 11:49:39.365 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-03 11:49:39.369 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-03 11:49:39.374 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-03 11:49:39.383 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-03 11:49:39.384 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-03 11:49:39.388 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-03 11:49:39.392 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-03 11:49:39.392 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-03 11:49:39.395 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-03 11:49:39.401 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-03 11:49:39.420 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotelFull_test
[INFO ] 2020-12-03 11:49:39.421 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-03 11:49:39.421 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-03 11:49:40.233 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-03 11:49:40.944 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-12-03 11:49:40.947 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-03 11:49:40.947 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-03 11:49:41.287 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-03 11:49:41.395 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-03 11:49:41.569 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-03 11:49:41.951 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-03 11:49:41.981 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b8aaeab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d1bdd4a]
[DEBUG] 2020-12-03 11:49:42.298 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-12-03 11:49:42.460 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:49:42.476 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-12-03 11:49:42.483 [main] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-12-03 11:49:42.600 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.608 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:49:42.622 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-12-03 11:49:42.652 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:49:42.677 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:49:42.726 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:49:42.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.736 [main] PropertyBinder - MetadataSourceProcessor property Password with lazy=false
[DEBUG] 2020-12-03 11:49:42.736 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:Password]
[DEBUG] 2020-12-03 11:49:42.737 [main] SimpleValueBinder - building SimpleValue for Password
[DEBUG] 2020-12-03 11:49:42.737 [main] PropertyBinder - Building property Password
[DEBUG] 2020-12-03 11:49:42.738 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.738 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-12-03 11:49:42.738 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:address]
[DEBUG] 2020-12-03 11:49:42.742 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-12-03 11:49:42.742 [main] PropertyBinder - Building property address
[DEBUG] 2020-12-03 11:49:42.743 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=details, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.745 [main] PropertyBinder - MetadataSourceProcessor property details with lazy=false
[DEBUG] 2020-12-03 11:49:42.747 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:details]
[DEBUG] 2020-12-03 11:49:42.750 [main] SimpleValueBinder - building SimpleValue for details
[DEBUG] 2020-12-03 11:49:42.752 [main] PropertyBinder - Building property details
[DEBUG] 2020-12-03 11:49:42.753 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.753 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-03 11:49:42.753 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:email]
[DEBUG] 2020-12-03 11:49:42.754 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-03 11:49:42.754 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-03 11:49:42.754 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.764 [main] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-12-03 11:49:42.764 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-12-03 11:49:42.765 [main] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-12-03 11:49:42.765 [main] PropertyBinder - Building property first_name
[DEBUG] 2020-12-03 11:49:42.766 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.766 [main] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-12-03 11:49:42.766 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-12-03 11:49:42.770 [main] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-12-03 11:49:42.771 [main] PropertyBinder - Building property last_name
[DEBUG] 2020-12-03 11:49:42.771 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.772 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-12-03 11:49:42.772 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:phone]
[DEBUG] 2020-12-03 11:49:42.776 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-12-03 11:49:42.777 [main] PropertyBinder - Building property phone
[DEBUG] 2020-12-03 11:49:42.786 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:49:42.787 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.799 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.851 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.853 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.854 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-03 11:49:42.864 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:49:42.868 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:49:42.872 [main] CollectionBinder - Collection role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:42.949 [main] PropertyBinder - Building property reservations
[DEBUG] 2020-12-03 11:49:42.958 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:49:42.963 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.964 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.965 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.965 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.974 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-03 11:49:42.981 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:49:42.982 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:49:42.982 [main] CollectionBinder - Collection role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:42.987 [main] PropertyBinder - Building property roles
[DEBUG] 2020-12-03 11:49:42.987 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:42.998 [main] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-12-03 11:49:42.999 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-12-03 11:49:42.999 [main] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-12-03 11:49:43.018 [main] PropertyBinder - Building property user_name
[DEBUG] 2020-12-03 11:49:43.047 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Role
[DEBUG] 2020-12-03 11:49:43.056 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:49:43.057 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-03 11:49:43.064 [main] EntityBinder - Bind entity hote.entity.Role on table role
[DEBUG] 2020-12-03 11:49:43.229 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.231 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:49:43.238 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:id]
[DEBUG] 2020-12-03 11:49:43.241 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:49:43.242 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:49:43.242 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:49:43.253 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.253 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-03 11:49:43.254 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:roleName]
[DEBUG] 2020-12-03 11:49:43.262 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-03 11:49:43.262 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-12-03 11:49:43.263 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-03 11:49:43.276 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.290 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-03 11:49:43.291 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.292 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-12-03 11:49:43.292 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:userName]
[DEBUG] 2020-12-03 11:49:43.293 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-12-03 11:49:43.294 [main] PropertyBinder - Building property userName
[DEBUG] 2020-12-03 11:49:43.298 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Reservation
[DEBUG] 2020-12-03 11:49:43.299 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:49:43.299 [main] EntityBinder - Import with entity name Reservation
[DEBUG] 2020-12-03 11:49:43.300 [main] EntityBinder - Bind entity hote.entity.Reservation on table reservation
[DEBUG] 2020-12-03 11:49:43.307 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.308 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:49:43.316 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:id]
[DEBUG] 2020-12-03 11:49:43.316 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:49:43.316 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:49:43.317 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:49:43.317 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.322 [main] PropertyBinder - MetadataSourceProcessor property end_date with lazy=false
[DEBUG] 2020-12-03 11:49:43.322 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:end_date]
[DEBUG] 2020-12-03 11:49:43.322 [main] SimpleValueBinder - building SimpleValue for end_date
[DEBUG] 2020-12-03 11:49:43.323 [main] PropertyBinder - Building property end_date
[DEBUG] 2020-12-03 11:49:43.324 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-03 11:49:43.324 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.328 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.329 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.330 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.330 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-03 11:49:43.330 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-03 11:49:43.330 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-03 11:49:43.331 [main] CollectionBinder - Collection role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:43.331 [main] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-12-03 11:49:43.332 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=start_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.333 [main] PropertyBinder - MetadataSourceProcessor property start_date with lazy=false
[DEBUG] 2020-12-03 11:49:43.333 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:start_date]
[DEBUG] 2020-12-03 11:49:43.333 [main] SimpleValueBinder - building SimpleValue for start_date
[DEBUG] 2020-12-03 11:49:43.336 [main] PropertyBinder - Building property start_date
[DEBUG] 2020-12-03 11:49:43.336 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=total_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.336 [main] PropertyBinder - MetadataSourceProcessor property total_price with lazy=false
[DEBUG] 2020-12-03 11:49:43.336 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:total_price]
[DEBUG] 2020-12-03 11:49:43.339 [main] SimpleValueBinder - building SimpleValue for total_price
[DEBUG] 2020-12-03 11:49:43.340 [main] PropertyBinder - Building property total_price
[DEBUG] 2020-12-03 11:49:43.340 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='guest_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-03 11:49:43.340 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.343 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-03 11:49:43.343 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Room
[DEBUG] 2020-12-03 11:49:43.344 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:49:43.344 [main] EntityBinder - Import with entity name Room
[DEBUG] 2020-12-03 11:49:43.344 [main] EntityBinder - Bind entity hote.entity.Room on table room
[DEBUG] 2020-12-03 11:49:43.353 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.353 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:49:43.353 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:id]
[DEBUG] 2020-12-03 11:49:43.354 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:49:43.354 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:49:43.354 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:49:43.355 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=Avalable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.355 [main] PropertyBinder - MetadataSourceProcessor property Avalable with lazy=false
[DEBUG] 2020-12-03 11:49:43.355 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:Avalable]
[DEBUG] 2020-12-03 11:49:43.355 [main] SimpleValueBinder - building SimpleValue for Avalable
[DEBUG] 2020-12-03 11:49:43.356 [main] PropertyBinder - Building property Avalable
[DEBUG] 2020-12-03 11:49:43.356 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=current_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.356 [main] PropertyBinder - MetadataSourceProcessor property current_price with lazy=false
[DEBUG] 2020-12-03 11:49:43.357 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:current_price]
[DEBUG] 2020-12-03 11:49:43.357 [main] SimpleValueBinder - building SimpleValue for current_price
[DEBUG] 2020-12-03 11:49:43.357 [main] PropertyBinder - Building property current_price
[DEBUG] 2020-12-03 11:49:43.359 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.360 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-03 11:49:43.360 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:description]
[DEBUG] 2020-12-03 11:49:43.360 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-03 11:49:43.360 [main] PropertyBinder - Building property description
[DEBUG] 2020-12-03 11:49:43.360 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-03 11:49:43.361 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.361 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.361 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.362 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.362 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-03 11:49:43.367 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-03 11:49:43.367 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-03 11:49:43.368 [main] CollectionBinder - Collection role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:49:43.368 [main] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-12-03 11:49:43.368 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=room_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.368 [main] PropertyBinder - MetadataSourceProcessor property room_name with lazy=false
[DEBUG] 2020-12-03 11:49:43.368 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:room_name]
[DEBUG] 2020-12-03 11:49:43.369 [main] SimpleValueBinder - building SimpleValue for room_name
[DEBUG] 2020-12-03 11:49:43.369 [main] PropertyBinder - Building property room_name
[DEBUG] 2020-12-03 11:49:43.369 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:49:43.369 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:49:43.369 [main] EntityBinder - Import with entity name Roomreserved
[DEBUG] 2020-12-03 11:49:43.370 [main] EntityBinder - Bind entity hote.entity.RoomReserved on table room_reserved
[DEBUG] 2020-12-03 11:49:43.372 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.373 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:49:43.373 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:id]
[DEBUG] 2020-12-03 11:49:43.373 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:49:43.373 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:49:43.373 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:49:43.376 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.376 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-03 11:49:43.376 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:price]
[DEBUG] 2020-12-03 11:49:43.377 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-03 11:49:43.377 [main] PropertyBinder - Building property price
[DEBUG] 2020-12-03 11:49:43.377 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservation_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-03 11:49:43.378 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=reservation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.378 [main] PropertyBinder - Building property reservation
[DEBUG] 2020-12-03 11:49:43.378 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='room_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-03 11:49:43.378 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=room, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:49:43.378 [main] PropertyBinder - Building property room
[DEBUG] 2020-12-03 11:49:43.383 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:49:43.383 [main] SimpleValueBinder - Starting fillSimpleValue for Password
[DEBUG] 2020-12-03 11:49:43.383 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-12-03 11:49:43.384 [main] SimpleValueBinder - Starting fillSimpleValue for details
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for end_date
[DEBUG] 2020-12-03 11:49:43.385 [main] SimpleValueBinder - Starting fillSimpleValue for start_date
[DEBUG] 2020-12-03 11:49:43.390 [main] SimpleValueBinder - Starting fillSimpleValue for total_price
[DEBUG] 2020-12-03 11:49:43.390 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:49:43.391 [main] SimpleValueBinder - Starting fillSimpleValue for Avalable
[DEBUG] 2020-12-03 11:49:43.392 [main] SimpleValueBinder - Starting fillSimpleValue for current_price
[DEBUG] 2020-12-03 11:49:43.392 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-03 11:49:43.392 [main] SimpleValueBinder - Starting fillSimpleValue for room_name
[DEBUG] 2020-12-03 11:49:43.392 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:49:43.392 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-03 11:49:43.413 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-03 11:49:43.414 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-03 11:49:43.414 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [reservation]
[DEBUG] 2020-12-03 11:49:43.414 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room]
[DEBUG] 2020-12-03 11:49:43.414 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room_reserved]
[DEBUG] 2020-12-03 11:49:43.414 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:43.415 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.reservations through a foreign key
[DEBUG] 2020-12-03 11:49:43.420 [main] CollectionBinder - Mapping collection: hote.entity.User.reservations -> reservation
[DEBUG] 2020-12-03 11:49:43.422 [main] TableBinder - Retrieving property hote.entity.Reservation.user
[DEBUG] 2020-12-03 11:49:43.423 [main] CollectionSecondPass - Mapped collection key: guest_id, one-to-many: hote.entity.Reservation
[DEBUG] 2020-12-03 11:49:43.423 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:43.423 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.roles through a foreign key
[DEBUG] 2020-12-03 11:49:43.423 [main] CollectionBinder - Mapping collection: hote.entity.User.roles -> role
[DEBUG] 2020-12-03 11:49:43.424 [main] TableBinder - Retrieving property hote.entity.Role.user
[DEBUG] 2020-12-03 11:49:43.424 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Role
[DEBUG] 2020-12-03 11:49:43.429 [main] CollectionSecondPass - Second pass for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:43.429 [main] CollectionBinder - Binding a OneToMany: hote.entity.Reservation.roomReserveds through a foreign key
[DEBUG] 2020-12-03 11:49:43.430 [main] CollectionBinder - Mapping collection: hote.entity.Reservation.roomReserveds -> room_reserved
[DEBUG] 2020-12-03 11:49:43.431 [main] TableBinder - Retrieving property hote.entity.RoomReserved.reservation
[DEBUG] 2020-12-03 11:49:43.433 [main] CollectionSecondPass - Mapped collection key: reservation_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:49:43.433 [main] CollectionSecondPass - Second pass for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:49:43.434 [main] CollectionBinder - Binding a OneToMany: hote.entity.Room.roomReserveds through a foreign key
[DEBUG] 2020-12-03 11:49:43.436 [main] CollectionBinder - Mapping collection: hote.entity.Room.roomReserveds -> room_reserved
[DEBUG] 2020-12-03 11:49:43.436 [main] TableBinder - Retrieving property hote.entity.RoomReserved.room
[DEBUG] 2020-12-03 11:49:43.436 [main] CollectionSecondPass - Mapped collection key: room_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:49:43.436 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-03 11:49:43.438 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-03 11:49:43.439 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-12-03 11:49:43.439 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-12-03 11:49:43.447 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-03 11:49:43.448 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-03 11:49:43.448 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-12-03 11:49:43.450 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-12-03 11:49:43.751 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-12-03 11:49:43.757 [main] Settings - SessionFactory name : null
[DEBUG] 2020-12-03 11:49:43.757 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Statistics: disabled
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-12-03 11:49:43.758 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-12-03 11:49:43.764 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-12-03 11:49:43.764 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-12-03 11:49:43.764 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-12-03 11:49:43.764 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-12-03 11:49:43.764 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-12-03 11:49:43.764 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Named query checking : enabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-12-03 11:49:43.765 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-12-03 11:49:43.766 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-12-03 11:49:43.766 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-12-03 11:49:43.766 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-12-03 11:49:43.766 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-12-03 11:49:43.766 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-12-03 11:49:43.766 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-12-03 11:49:43.766 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-12-03 11:49:43.766 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-12-03 11:49:44.073 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-12-03 11:49:44.284 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-12-03 11:49:44.286 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=/home/student/IdeaProjects/HotelWebsie/target/surefire/surefirebooter10099209173296670235.jar /home/student/IdeaProjects/HotelWebsie/target/surefire/surefire3467913519015198768tmp /home/student/IdeaProjects/HotelWebsie/target/surefire/surefire_02766912694890308344tmp, jdk.debug=release, surefire.test.class.path=/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, basedir=/home/student/IdeaProjects/HotelWebsie, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/student/IdeaProjects/HotelWebsie/target/surefire/surefirebooter10099209173296670235.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotelFull_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, localRepository=/home/student/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, idea.version=2020.2.4, java.version=11.0.8, user.dir=/home/student/IdeaProjects/HotelWebsie, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7185e611, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hotelFull_test, java.class.version=55.0}
[DEBUG] 2020-12-03 11:49:44.475 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-12-03 11:49:44.477 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-12-03 11:49:44.492 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-12-03 11:49:44.492 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b8aaeab] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@35dcd032]
[DEBUG] 2020-12-03 11:49:44.879 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-12-03 11:49:44.881 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-12-03 11:49:45.003 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-12-03 11:49:45.006 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-12-03 11:49:46.140 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-12-03 11:49:46.141 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-12-03 11:49:46.142 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-12-03 11:49:46.143 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-12-03 11:49:46.280 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-12-03 11:49:46.290 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:49:46.294 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-12-03 11:49:46.294 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:49:46.391 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-12-03 11:49:46.393 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-12-03 11:49:46.395 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-12-03 11:49:46.396 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-12-03 11:49:46.629 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-12-03 11:49:46.630 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-12-03 11:49:46.630 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-12-03 11:49:46.630 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-12-03 11:49:46.731 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:46.735 [main] AbstractCollectionPersister -  Row insert: update reservation set guest_id=? where id=?
[DEBUG] 2020-12-03 11:49:46.735 [main] AbstractCollectionPersister -  Row update: update reservation set  where id=?
[DEBUG] 2020-12-03 11:49:46.735 [main] AbstractCollectionPersister -  Row delete: update reservation set guest_id=null where guest_id=? and id=?
[DEBUG] 2020-12-03 11:49:46.735 [main] AbstractCollectionPersister -  One-shot delete: update reservation set guest_id=null where guest_id=?
[DEBUG] 2020-12-03 11:49:46.736 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:46.736 [main] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-12-03 11:49:46.736 [main] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-12-03 11:49:46.736 [main] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-12-03 11:49:46.736 [main] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-12-03 11:49:46.737 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:46.737 [main] AbstractCollectionPersister -  Row insert: update room_reserved set reservation_id=? where id=?
[DEBUG] 2020-12-03 11:49:46.737 [main] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-12-03 11:49:46.737 [main] AbstractCollectionPersister -  Row delete: update room_reserved set reservation_id=null where reservation_id=? and id=?
[DEBUG] 2020-12-03 11:49:46.737 [main] AbstractCollectionPersister -  One-shot delete: update room_reserved set reservation_id=null where reservation_id=?
[DEBUG] 2020-12-03 11:49:46.738 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:49:46.738 [main] AbstractCollectionPersister -  Row insert: update room_reserved set room_id=? where id=?
[DEBUG] 2020-12-03 11:49:46.738 [main] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-12-03 11:49:46.738 [main] AbstractCollectionPersister -  Row delete: update room_reserved set room_id=null where room_id=? and id=?
[DEBUG] 2020-12-03 11:49:46.738 [main] AbstractCollectionPersister -  One-shot delete: update room_reserved set room_id=null where room_id=?
[DEBUG] 2020-12-03 11:49:46.757 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Reservation
[DEBUG] 2020-12-03 11:49:46.757 [main] AbstractEntityPersister -  Version select: select id from reservation where id =?
[DEBUG] 2020-12-03 11:49:46.757 [main] AbstractEntityPersister -  Snapshot select: select reservatio_.id, reservatio_.end_date as end_date2_0_, reservatio_.start_date as start_da3_0_, reservatio_.total_price as total_pr4_0_, reservatio_.guest_id as guest_id5_0_ from reservation reservatio_ where reservatio_.id=?
[DEBUG] 2020-12-03 11:49:46.757 [main] AbstractEntityPersister -  Insert 0: insert into reservation (end_date, start_date, total_price, guest_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:46.758 [main] AbstractEntityPersister -  Update 0: update reservation set end_date=?, start_date=?, total_price=?, guest_id=? where id=?
[DEBUG] 2020-12-03 11:49:46.758 [main] AbstractEntityPersister -  Delete 0: delete from reservation where id=?
[DEBUG] 2020-12-03 11:49:46.758 [main] AbstractEntityPersister -  Identity insert: insert into reservation (end_date, start_date, total_price, guest_id) values (?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:46.858 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7a9db7]
[DEBUG] 2020-12-03 11:49:46.862 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-03 11:49:46.862 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:49:46.880 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50672905]
[DEBUG] 2020-12-03 11:49:46.892 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e49b011]
[DEBUG] 2020-12-03 11:49:46.898 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-03 11:49:46.898 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:46.898 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:46.903 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-03 11:49:46.904 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5310e451]
[DEBUG] 2020-12-03 11:49:46.908 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-12-03 11:49:46.913 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-12-03 11:49:46.913 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-12-03 11:49:46.914 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-03 11:49:46.914 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-03 11:49:46.915 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-12-03 11:49:46.915 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-03 11:49:46.916 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-03 11:49:46.916 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:49:46.916 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ab0659]
[DEBUG] 2020-12-03 11:49:46.916 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-03 11:49:46.916 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-03 11:49:46.917 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-03 11:49:46.917 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-03 11:49:46.917 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-03 11:49:46.917 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-03 11:49:46.918 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-03 11:49:46.918 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-03 11:49:46.918 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-12-03 11:49:46.918 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-03 11:49:46.918 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25421809]
[DEBUG] 2020-12-03 11:49:46.918 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@714bffd5]
[DEBUG] 2020-12-03 11:49:46.919 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-12-03 11:49:46.929 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-03 11:49:46.929 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-03 11:49:46.929 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-12-03 11:49:46.930 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-03 11:49:46.930 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.020 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.053 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-03 11:49:47.065 [main] EntityLoader - Static select for entity hote.entity.Reservation [NONE]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-12-03 11:49:47.071 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@adc8683]
[DEBUG] 2020-12-03 11:49:47.071 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-03 11:49:47.072 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:49:47.072 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dde6f87]
[DEBUG] 2020-12-03 11:49:47.072 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7884f722]
[DEBUG] 2020-12-03 11:49:47.073 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-03 11:49:47.073 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:47.073 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:47.074 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-03 11:49:47.074 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f1413c]
[DEBUG] 2020-12-03 11:49:47.075 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-12-03 11:49:47.075 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-12-03 11:49:47.075 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-12-03 11:49:47.075 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-03 11:49:47.075 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-03 11:49:47.077 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-12-03 11:49:47.077 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-03 11:49:47.077 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-03 11:49:47.078 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:49:47.079 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186295cc]
[DEBUG] 2020-12-03 11:49:47.080 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-03 11:49:47.080 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-03 11:49:47.080 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-03 11:49:47.080 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-03 11:49:47.081 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-03 11:49:47.081 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-03 11:49:47.082 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-03 11:49:47.082 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-03 11:49:47.082 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-12-03 11:49:47.082 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-03 11:49:47.084 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b28cff]
[DEBUG] 2020-12-03 11:49:47.084 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73dbe25]
[DEBUG] 2020-12-03 11:49:47.084 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-12-03 11:49:47.084 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-03 11:49:47.085 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-03 11:49:47.085 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-12-03 11:49:47.085 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-03 11:49:47.088 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.089 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.091 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-03 11:49:47.094 [main] EntityLoader - Static select for entity hote.entity.Reservation [READ]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-12-03 11:49:47.136 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-12-03 11:49:47.136 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-12-03 11:49:47.138 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Room
[DEBUG] 2020-12-03 11:49:47.139 [main] AbstractEntityPersister -  Version select: select id from room where id =?
[DEBUG] 2020-12-03 11:49:47.139 [main] AbstractEntityPersister -  Snapshot select: select room_.id, room_.Avalable as Avalable2_2_, room_.current_price as current_3_2_, room_.description as descript4_2_, room_.room_name as room_nam5_2_ from room room_ where room_.id=?
[DEBUG] 2020-12-03 11:49:47.141 [main] AbstractEntityPersister -  Insert 0: insert into room (Avalable, current_price, description, room_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:47.141 [main] AbstractEntityPersister -  Update 0: update room set Avalable=?, current_price=?, description=?, room_name=? where id=?
[DEBUG] 2020-12-03 11:49:47.141 [main] AbstractEntityPersister -  Delete 0: delete from room where id=?
[DEBUG] 2020-12-03 11:49:47.141 [main] AbstractEntityPersister -  Identity insert: insert into room (Avalable, current_price, description, room_name) values (?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:47.142 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39f4a7c4]
[DEBUG] 2020-12-03 11:49:47.142 [main] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-12-03 11:49:47.142 [main] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-12-03 11:49:47.142 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-03 11:49:47.142 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:49:47.142 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ff542a3]
[DEBUG] 2020-12-03 11:49:47.142 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48ee3c2d]
[DEBUG] 2020-12-03 11:49:47.145 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-03 11:49:47.145 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:47.145 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd5689d]
[DEBUG] 2020-12-03 11:49:47.146 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-12-03 11:49:47.146 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.146 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.146 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-12-03 11:49:47.146 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-12-03 11:49:47.146 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-12-03 11:49:47.146 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@218f2f51]
[DEBUG] 2020-12-03 11:49:47.146 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-03 11:49:47.146 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-12-03 11:49:47.149 [main] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-12-03 11:49:47.150 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.152 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.158 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-03 11:49:47.159 [main] EntityLoader - Static select for entity hote.entity.Room [NONE]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-12-03 11:49:47.159 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d9af731]
[DEBUG] 2020-12-03 11:49:47.159 [main] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-12-03 11:49:47.159 [main] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-12-03 11:49:47.159 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-03 11:49:47.159 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:49:47.160 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16f34376]
[DEBUG] 2020-12-03 11:49:47.160 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ede035e]
[DEBUG] 2020-12-03 11:49:47.163 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-03 11:49:47.163 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:47.168 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e96cb04]
[DEBUG] 2020-12-03 11:49:47.171 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-12-03 11:49:47.171 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.172 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.172 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-12-03 11:49:47.172 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-12-03 11:49:47.174 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-12-03 11:49:47.174 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e5364a3]
[DEBUG] 2020-12-03 11:49:47.175 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-03 11:49:47.175 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-12-03 11:49:47.175 [main] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-12-03 11:49:47.175 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.176 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.183 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-03 11:49:47.186 [main] EntityLoader - Static select for entity hote.entity.Room [READ]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-12-03 11:49:47.191 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-12-03 11:49:47.192 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-12-03 11:49:47.193 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:49:47.193 [main] AbstractEntityPersister -  Version select: select id from room_reserved where id =?
[DEBUG] 2020-12-03 11:49:47.193 [main] AbstractEntityPersister -  Snapshot select: select roomreserv_.id, roomreserv_.price as price2_3_, roomreserv_.reservation_id as reservat3_3_, roomreserv_.room_id as room_id4_3_ from room_reserved roomreserv_ where roomreserv_.id=?
[DEBUG] 2020-12-03 11:49:47.193 [main] AbstractEntityPersister -  Insert 0: insert into room_reserved (price, reservation_id, room_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:47.193 [main] AbstractEntityPersister -  Update 0: update room_reserved set price=?, reservation_id=?, room_id=? where id=?
[DEBUG] 2020-12-03 11:49:47.193 [main] AbstractEntityPersister -  Delete 0: delete from room_reserved where id=?
[DEBUG] 2020-12-03 11:49:47.193 [main] AbstractEntityPersister -  Identity insert: insert into room_reserved (price, reservation_id, room_id) values (?, ?, ?)
[DEBUG] 2020-12-03 11:49:47.194 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a336906]
[DEBUG] 2020-12-03 11:49:47.196 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-03 11:49:47.203 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-03 11:49:47.204 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d539b9]
[DEBUG] 2020-12-03 11:49:47.205 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-03 11:49:47.205 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-03 11:49:47.206 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@210c1b9d]
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-03 11:49:47.206 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-03 11:49:47.207 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-03 11:49:47.207 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-03 11:49:47.207 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-03 11:49:47.207 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-03 11:49:47.207 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-03 11:49:47.207 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3578a45b]
[DEBUG] 2020-12-03 11:49:47.207 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24f177f5]
[DEBUG] 2020-12-03 11:49:47.207 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-03 11:49:47.214 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-03 11:49:47.214 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65e05005]
[DEBUG] 2020-12-03 11:49:47.214 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-03 11:49:47.214 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-03 11:49:47.215 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-03 11:49:47.215 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-03 11:49:47.215 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-03 11:49:47.215 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-03 11:49:47.215 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.216 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.223 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-12-03 11:49:47.223 [main] EntityLoader - Static select for entity hote.entity.RoomReserved [NONE]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-12-03 11:49:47.223 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efcba00]
[DEBUG] 2020-12-03 11:49:47.224 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-03 11:49:47.224 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-03 11:49:47.230 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@569a26ab]
[DEBUG] 2020-12-03 11:49:47.231 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-03 11:49:47.231 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.231 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.231 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-03 11:49:47.232 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-03 11:49:47.232 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-03 11:49:47.232 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77ce8bc5]
[DEBUG] 2020-12-03 11:49:47.232 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-03 11:49:47.232 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-03 11:49:47.236 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-03 11:49:47.237 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-03 11:49:47.237 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-03 11:49:47.237 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-03 11:49:47.237 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-03 11:49:47.237 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-03 11:49:47.237 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-03 11:49:47.237 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-03 11:49:47.238 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28e48b65]
[DEBUG] 2020-12-03 11:49:47.238 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cde0c69]
[DEBUG] 2020-12-03 11:49:47.238 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-03 11:49:47.241 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-03 11:49:47.241 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f4d2294]
[DEBUG] 2020-12-03 11:49:47.242 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-03 11:49:47.245 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-03 11:49:47.245 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-03 11:49:47.245 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-03 11:49:47.245 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-03 11:49:47.245 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-03 11:49:47.247 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.248 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.255 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-12-03 11:49:47.256 [main] EntityLoader - Static select for entity hote.entity.RoomReserved [READ]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-12-03 11:49:47.262 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-12-03 11:49:47.263 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-12-03 11:49:47.264 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-12-03 11:49:47.264 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-12-03 11:49:47.264 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.Password as Password2_4_, user_.address as address3_4_, user_.details as details4_4_, user_.email as email5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.phone as phone8_4_, user_.user_name as user_nam9_4_ from user user_ where user_.id=?
[DEBUG] 2020-12-03 11:49:47.264 [main] AbstractEntityPersister -  Insert 0: insert into user (Password, address, details, email, first_name, last_name, phone, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:47.264 [main] AbstractEntityPersister -  Update 0: update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-12-03 11:49:47.264 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-12-03 11:49:47.265 [main] AbstractEntityPersister -  Identity insert: insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:47.265 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e0516a3]
[DEBUG] 2020-12-03 11:49:47.265 [main] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-12-03 11:49:47.266 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-03 11:49:47.266 [main] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-12-03 11:49:47.266 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-12-03 11:49:47.266 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-12-03 11:49:47.266 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-12-03 11:49:47.266 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-03 11:49:47.276 [main] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-12-03 11:49:47.276 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@347b370c]
[DEBUG] 2020-12-03 11:49:47.277 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26aee0a6]
[DEBUG] 2020-12-03 11:49:47.277 [main] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-12-03 11:49:47.277 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-12-03 11:49:47.278 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5855b0ed]
[DEBUG] 2020-12-03 11:49:47.280 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@92fd091]
[DEBUG] 2020-12-03 11:49:47.280 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-12-03 11:49:47.280 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:47.284 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:47.284 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-12-03 11:49:47.284 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a33316]
[DEBUG] 2020-12-03 11:49:47.285 [main] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-12-03 11:49:47.286 [main] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-12-03 11:49:47.286 [main] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-12-03 11:49:47.288 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-12-03 11:49:47.289 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-03 11:49:47.293 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57fce8b]
[DEBUG] 2020-12-03 11:49:47.293 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77204651]
[DEBUG] 2020-12-03 11:49:47.294 [main] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-12-03 11:49:47.294 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-03 11:49:47.294 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-12-03 11:49:47.294 [main] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-12-03 11:49:47.294 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-12-03 11:49:47.294 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.296 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.302 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-03 11:49:47.303 [main] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:47.303 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@416c8bb5]
[DEBUG] 2020-12-03 11:49:47.303 [main] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-12-03 11:49:47.303 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-03 11:49:47.304 [main] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-12-03 11:49:47.304 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-12-03 11:49:47.304 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-12-03 11:49:47.304 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-12-03 11:49:47.304 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-03 11:49:47.304 [main] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-12-03 11:49:47.304 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e994ca]
[DEBUG] 2020-12-03 11:49:47.313 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a205ee5]
[DEBUG] 2020-12-03 11:49:47.314 [main] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-12-03 11:49:47.314 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-12-03 11:49:47.314 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5daad59a]
[DEBUG] 2020-12-03 11:49:47.314 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5256fbc]
[DEBUG] 2020-12-03 11:49:47.315 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-12-03 11:49:47.315 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:47.315 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-12-03 11:49:47.315 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-12-03 11:49:47.315 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ef1d58]
[DEBUG] 2020-12-03 11:49:47.315 [main] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-12-03 11:49:47.315 [main] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-12-03 11:49:47.315 [main] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-12-03 11:49:47.320 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-12-03 11:49:47.321 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-03 11:49:47.321 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2619cb76]
[DEBUG] 2020-12-03 11:49:47.321 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f2c9e8]
[DEBUG] 2020-12-03 11:49:47.324 [main] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-12-03 11:49:47.324 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-03 11:49:47.324 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-12-03 11:49:47.324 [main] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-12-03 11:49:47.324 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-12-03 11:49:47.325 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.325 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.336 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-03 11:49:47.337 [main] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:47.350 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:47.351 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:47.353 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Role
[DEBUG] 2020-12-03 11:49:47.353 [main] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-12-03 11:49:47.353 [main] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_1_, role_.user_id as user_id4_1_, role_.user_name as user_nam3_1_ from role role_ where role_.id=?
[DEBUG] 2020-12-03 11:49:47.353 [main] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:47.353 [main] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2020-12-03 11:49:47.353 [main] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-12-03 11:49:47.353 [main] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2020-12-03 11:49:47.354 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d297d4d]
[DEBUG] 2020-12-03 11:49:47.354 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-03 11:49:47.354 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:49:47.354 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cc56b32]
[DEBUG] 2020-12-03 11:49:47.354 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-03 11:49:47.354 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-03 11:49:47.354 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-03 11:49:47.355 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-03 11:49:47.355 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-03 11:49:47.355 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-03 11:49:47.355 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-03 11:49:47.355 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-03 11:49:47.355 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@552bee2f]
[DEBUG] 2020-12-03 11:49:47.355 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a543e09]
[DEBUG] 2020-12-03 11:49:47.355 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-12-03 11:49:47.356 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-12-03 11:49:47.356 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15130002]
[DEBUG] 2020-12-03 11:49:47.356 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7cd0df]
[DEBUG] 2020-12-03 11:49:47.362 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-12-03 11:49:47.362 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-12-03 11:49:47.363 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-12-03 11:49:47.363 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-12-03 11:49:47.368 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-03 11:49:47.368 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-03 11:49:47.368 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-03 11:49:47.368 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-03 11:49:47.368 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.369 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.371 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-03 11:49:47.371 [main] EntityLoader - Static select for entity hote.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-12-03 11:49:47.372 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@900649e]
[DEBUG] 2020-12-03 11:49:47.372 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-03 11:49:47.372 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:49:47.373 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@526893f]
[DEBUG] 2020-12-03 11:49:47.373 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-03 11:49:47.375 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-03 11:49:47.380 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-03 11:49:47.381 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-03 11:49:47.381 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-03 11:49:47.381 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-03 11:49:47.382 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-03 11:49:47.382 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-03 11:49:47.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37caecda]
[DEBUG] 2020-12-03 11:49:47.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be7c052]
[DEBUG] 2020-12-03 11:49:47.383 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-12-03 11:49:47.383 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-12-03 11:49:47.383 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35554635]
[DEBUG] 2020-12-03 11:49:47.383 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f5f59d]
[DEBUG] 2020-12-03 11:49:47.383 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-12-03 11:49:47.383 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-12-03 11:49:47.384 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-12-03 11:49:47.384 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-12-03 11:49:47.384 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-03 11:49:47.384 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-03 11:49:47.384 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-03 11:49:47.386 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-03 11:49:47.386 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.387 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.397 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-03 11:49:47.397 [main] EntityLoader - Static select for entity hote.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-12-03 11:49:47.397 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-03 11:49:47.398 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-03 11:49:47.411 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@590dea35]
[DEBUG] 2020-12-03 11:49:47.411 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6550ce46]
[DEBUG] 2020-12-03 11:49:47.411 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-03 11:49:47.411 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:49:47.411 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25589735]
[DEBUG] 2020-12-03 11:49:47.411 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46994f26]
[DEBUG] 2020-12-03 11:49:47.415 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-03 11:49:47.415 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-03 11:49:47.415 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:49:47.415 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-03 11:49:47.415 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.421 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.427 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.reservations)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:0>, path=[hote.entity.User.reservations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=[hote.entity.User.reservations].<elements>)
             - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:2>, path=[hote.entity.User.reservations].<elements>.roomReserveds)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:3>, path=[hote.entity.User.reservations].<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.reservations)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {guest_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-12-03 11:49:47.428 [main] CollectionLoader - Static select for collection hote.entity.User.reservations: select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-03 11:49:47.428 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e0fdc83]
[DEBUG] 2020-12-03 11:49:47.428 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dacf18d]
[DEBUG] 2020-12-03 11:49:47.429 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-03 11:49:47.429 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:49:47.429 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-03 11:49:47.429 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-03 11:49:47.429 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.429 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.433 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:0>, path=[hote.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:1>, path=[hote.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-12-03 11:49:47.433 [main] CollectionLoader - Static select for collection hote.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-03 11:49:47.433 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fe98084]
[DEBUG] 2020-12-03 11:49:47.438 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f33e6d]
[DEBUG] 2020-12-03 11:49:47.439 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-03 11:49:47.439 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-03 11:49:47.439 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation
[DEBUG] 2020-12-03 11:49:47.439 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-03 11:49:47.440 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c3d9e28]
[DEBUG] 2020-12-03 11:49:47.440 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-03 11:49:47.440 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-03 11:49:47.440 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-03 11:49:47.440 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-03 11:49:47.442 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-03 11:49:47.443 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-03 11:49:47.443 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.443 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.444 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Reservation.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Reservation.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Reservation.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:2>, path=[hote.entity.Reservation.roomReserveds].<elements>.room)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Reservation.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {reservat3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(room)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Room)
                      - SQL table alias mapping - room1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-12-03 11:49:47.448 [main] CollectionLoader - Static select for collection hote.entity.Reservation.roomReserveds: select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-03 11:49:47.449 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46d148bd]
[DEBUG] 2020-12-03 11:49:47.449 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f41a81]
[DEBUG] 2020-12-03 11:49:47.449 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-03 11:49:47.449 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-03 11:49:47.449 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@563ada5]
[DEBUG] 2020-12-03 11:49:47.449 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-03 11:49:47.449 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.450 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:47.450 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-03 11:49:47.450 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-03 11:49:47.450 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-03 11:49:47.450 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@156ff70f]
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-03 11:49:47.452 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-03 11:49:47.452 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@185339ed]
[DEBUG] 2020-12-03 11:49:47.453 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e4d4d22]
[DEBUG] 2020-12-03 11:49:47.453 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-03 11:49:47.453 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-03 11:49:47.453 [main] MetamodelGraphWalker - Property path deemed to be circular : room
[DEBUG] 2020-12-03 11:49:47.457 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:49:47.457 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:49:47.458 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Room.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Room.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Room.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=[hote.entity.Room.roomReserveds].<elements>.reservation)
                - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:3>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user)
                   - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:4>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:5>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Room.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {room_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(reservation)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}

[DEBUG] 2020-12-03 11:49:47.459 [main] CollectionLoader - Static select for collection hote.entity.Room.roomReserveds: select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-12-03 11:49:47.710 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-12-03 11:49:47.711 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-12-03 11:49:47.713 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-12-03 11:49:47.741 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-12-03 11:49:47.742 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-12-03 11:49:47.747 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-12-03 11:49:47.748 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-12-03 11:49:47.759 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@51d88c38
[DEBUG] 2020-12-03 11:49:47.774 [main] SessionFactoryRegistry - Registering SessionFactory: a1076b24-1b2b-4eee-b103-b57e8415f3fe (<unnamed>)
[DEBUG] 2020-12-03 11:49:47.774 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-12-03 11:49:48.148 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-12-03 11:49:48.240 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:48.312 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:48.320 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-03 11:49:48.366 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:48.404 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:48.411 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:48.417 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-12-03 11:49:48.417 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.417 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:49:48.417 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.417 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:48.418 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.421 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:48.421 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.422 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-12-03 11:49:48.422 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:48.425 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:48.426 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:48.426 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:48.443 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:48.443 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:48.443 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:48.443 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:48.443 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:48.448 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:48.449 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-12-03 11:49:48.450 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:48.484 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-12-03 11:49:48.484 [main] TransactionImpl - begin
[DEBUG] 2020-12-03 11:49:48.556 [main] TransactionImpl - committing
[DEBUG] 2020-12-03 11:49:48.561 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-12-03 11:49:48.562 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-12-03 11:49:48.583 [main] Collections - Collection dereferenced: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:48.583 [main] Collections - Collection dereferenced: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:48.585 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-12-03 11:49:48.585 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 2 removals to 2 collections
[DEBUG] 2020-12-03 11:49:48.594 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-12-03 11:49:48.594 [main] EntityPrinter - hote.entity.User{address=1014 8th street, baraboo, wi, reservations=[], phone=6049638522, user_name=jpatel1, roles=[], last_name=ptel, details=has reseasion, id=2, first_name=jackk, email=jate@some.com, Password=jpatel2}
[DEBUG] 2020-12-03 11:49:48.645 [main] SQL - delete from user where id=?
[DEBUG] 2020-12-03 11:49:48.674 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:48.680 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:48.681 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-12-03 11:49:48.684 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:48.707 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:48.707 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:48.707 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:48.707 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:48.708 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-12-03 11:49:48.708 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:48.938 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-12-03 11:49:48.939 [main] TransactionImpl - begin
[DEBUG] 2020-12-03 11:49:48.959 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-12-03 11:49:48.962 [main] SQL - insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:49:48.997 [main] IdentifierGeneratorHelper - Natively generated identity: 77
[DEBUG] 2020-12-03 11:49:48.997 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:49.004 [main] TransactionImpl - committing
[DEBUG] 2020-12-03 11:49:49.007 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-12-03 11:49:49.007 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-12-03 11:49:49.010 [main] Collections - Collection found: [hote.entity.User.reservations#77], was: [<unreferenced>] (initialized)
[DEBUG] 2020-12-03 11:49:49.010 [main] Collections - Collection found: [hote.entity.User.roles#77], was: [<unreferenced>] (initialized)
[DEBUG] 2020-12-03 11:49:49.011 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-12-03 11:49:49.012 [main] AbstractFlushingEventListener - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2020-12-03 11:49:49.012 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-12-03 11:49:49.012 [main] EntityPrinter - hote.entity.User{address=101 8th st, reservations=[], phone=60800000000, user_name=jackrobert, roles=[], last_name=robertson, details=hi, id=77, first_name=jack, email=some@some.com, Password=null}
[DEBUG] 2020-12-03 11:49:49.019 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:49.025 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:49.036 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:49.059 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:49.059 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-03 11:49:49.066 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#77]
[DEBUG] 2020-12-03 11:49:49.066 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#77]
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#77]
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Processing attribute `Password` : value = null
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Processing attribute `address` : value = 101 8th st
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Processing attribute `details` : value = hi
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Processing attribute `email` : value = some@some.com
[DEBUG] 2020-12-03 11:49:49.068 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.069 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jack
[DEBUG] 2020-12-03 11:49:49.069 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Processing attribute `last_name` : value = robertson
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Processing attribute `phone` : value = 60800000000
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jackrobert
[DEBUG] 2020-12-03 11:49:49.072 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.073 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#77]
[DEBUG] 2020-12-03 11:49:49.073 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:49.073 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:49.073 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#77]
[DEBUG] 2020-12-03 11:49:49.073 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:49.073 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:49.073 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#77]
[DEBUG] 2020-12-03 11:49:49.073 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:49.076 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:49.077 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#77
[DEBUG] 2020-12-03 11:49:49.077 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:49.373 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-12-03 11:49:49.489 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@66b90ab3
[DEBUG] 2020-12-03 11:49:49.688 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-12-03 11:49:49.714 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:49:49.750 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'hote'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-12-03 11:49:49.844 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-12-03 11:49:49.894 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-12-03 11:49:49.900 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-03 11:49:49.907 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-12-03 11:49:49.907 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-12-03 11:49:49.941 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-12-03 11:49:49.941 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-12-03 11:49:49.945 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}

[DEBUG] 2020-12-03 11:49:49.945 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:49:49.959 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-12-03 11:49:49.959 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_
[DEBUG] 2020-12-03 11:49:49.959 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:49:49.979 [main] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_
[DEBUG] 2020-12-03 11:49:49.993 [main] Loader - Result set row: 0
[DEBUG] 2020-12-03 11:49:49.993 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-12-03 11:49:49.994 [main] Loader - Result set row: 1
[DEBUG] 2020-12-03 11:49:49.994 [main] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:49.994 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-12-03 11:49:49.994 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-12-03 11:49:49.997 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.997 [main] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:49:49.997 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.997 [main] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-12-03 11:49:49.997 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:49.997 [main] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-12-03 11:49:50.001 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.002 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-12-03 11:49:50.002 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.002 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-12-03 11:49:50.002 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.002 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:49:50.002 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.002 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-12-03 11:49:50.002 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.003 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.004 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.005 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.005 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.005 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-12-03 11:49:50.005 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.006 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.014 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.014 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-03 11:49:50.024 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.025 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.025 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.025 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.025 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.025 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.026 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.026 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-03 11:49:50.031 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.032 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.032 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.032 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.032 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.033 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.033 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:49:50.033 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-03 11:49:50.037 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:49:50.039 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.039 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:49:50.039 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.039 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.040 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.040 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:49:50.040 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-03 11:49:50.045 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:49:50.045 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:50.060 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:49:50.060 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.061 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:49:50.061 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.061 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:49:50.062 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.062 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.062 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.062 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.062 [main] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-03 11:49:50.065 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.065 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:50.069 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.071 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:49:50.071 [main] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-12-03 11:49:50.071 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.071 [main] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-12-03 11:49:50.071 [main] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.072 [main] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-12-03 11:49:50.072 [main] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.074 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:49:50.074 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:50.074 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.074 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:50.077 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.077 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.077 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.077 [main] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-12-03 11:49:50.084 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.084 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:50.085 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.086 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:49:50.086 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.086 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:49:50.086 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.086 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.090 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:50.257 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-12-03 11:49:50.258 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-12-03 11:49:50.264 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:49:50.284 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'last_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-12-03 11:49:50.284 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-12-03 11:49:50.285 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-12-03 11:49:50.285 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-03 11:49:50.295 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-03 11:49:50.297 [main] DotNode - getDataType() : last_name -> org.hibernate.type.StringType@7f79edee
[DEBUG] 2020-12-03 11:49:50.300 [main] FromReferenceNode - Resolved : generatedAlias0.last_name -> user0_.last_name
[DEBUG] 2020-12-03 11:49:50.301 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-12-03 11:49:50.302 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.last_name user0_.id last_name ) ? ) ) )
[DEBUG] 2020-12-03 11:49:50.302 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-12-03 11:49:50.302 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-12-03 11:49:50.308 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=last_name,dereferenceType=PRIMITIVE,getPropertyPath=last_name,path=generatedAlias0.last_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'last_name' {originalText=last_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7f79edee}

[DEBUG] 2020-12-03 11:49:50.308 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:49:50.308 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-12-03 11:49:50.308 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-12-03 11:49:50.308 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:49:50.320 [main] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-12-03 11:49:50.336 [main] Loader - Result set row: 0
[DEBUG] 2020-12-03 11:49:50.337 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-12-03 11:49:50.338 [main] Loader - Result set row: 1
[DEBUG] 2020-12-03 11:49:50.338 [main] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.338 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-12-03 11:49:50.339 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-12-03 11:49:50.339 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.339 [main] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:49:50.339 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.339 [main] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-12-03 11:49:50.339 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.339 [main] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-12-03 11:49:50.339 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.340 [main] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-12-03 11:49:50.340 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.340 [main] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-12-03 11:49:50.340 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.340 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-12-03 11:49:50.340 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.340 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.340 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.341 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.341 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.341 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-12-03 11:49:50.341 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.341 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.342 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.344 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.344 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-12-03 11:49:50.344 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.345 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.347 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.347 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-03 11:49:50.353 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.355 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.356 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.356 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.356 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.357 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.357 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.357 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-03 11:49:50.362 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.363 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.363 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.363 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.364 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.364 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.365 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:49:50.365 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-03 11:49:50.369 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:49:50.369 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.369 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:49:50.369 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.369 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.369 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.372 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:49:50.372 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-03 11:49:50.375 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:49:50.375 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:50.377 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-03 11:49:50.383 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.384 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:49:50.384 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.384 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:49:50.384 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.385 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.385 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.385 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.385 [main] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-03 11:49:50.394 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.396 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:50.402 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.402 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:49:50.402 [main] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-12-03 11:49:50.402 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.405 [main] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-12-03 11:49:50.405 [main] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.405 [main] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-12-03 11:49:50.405 [main] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.405 [main] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.406 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:49:50.406 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:50.406 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.406 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:50.406 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.407 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.408 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.410 [main] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-12-03 11:49:50.421 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.421 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:50.424 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.425 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:49:50.425 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:49:50.425 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:49:50.425 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.425 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:49:50.425 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:50.601 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:50.611 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:50.613 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-03 11:49:50.616 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.616 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.616 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.616 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.617 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.623 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-12-03 11:49:50.623 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.623 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.624 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:50.624 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.624 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.624 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.624 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.628 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.628 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.629 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.629 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-12-03 11:49:50.629 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:50.642 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-12-03 11:49:50.642 [main] TransactionImpl - begin
[DEBUG] 2020-12-03 11:49:50.668 [main] TransactionImpl - committing
[DEBUG] 2020-12-03 11:49:50.669 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-12-03 11:49:50.669 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-12-03 11:49:50.672 [main] Collections - Collection found: [hote.entity.User.reservations#2], was: [hote.entity.User.reservations#2] (initialized)
[DEBUG] 2020-12-03 11:49:50.672 [main] Collections - Collection found: [hote.entity.User.roles#2], was: [hote.entity.User.roles#2] (initialized)
[DEBUG] 2020-12-03 11:49:50.672 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-12-03 11:49:50.672 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2020-12-03 11:49:50.673 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-12-03 11:49:50.673 [main] EntityPrinter - hote.entity.User{address=1014 8th street, baraboo, wi, reservations=[], phone=6049638522, user_name=jpatel1, roles=[], last_name=ptel, details=has reseasion, id=2, first_name=jac, email=jate@some.com, Password=jpatel2}
[DEBUG] 2020-12-03 11:49:50.674 [main] SQL - update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-12-03 11:49:50.690 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:50.693 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:49:50.694 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:49:50.703 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:49:50.705 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-03 11:49:50.708 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.709 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-12-03 11:49:50.709 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.710 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jac
[DEBUG] 2020-12-03 11:49:50.710 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.710 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-12-03 11:49:50.710 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.710 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-12-03 11:49:50.710 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.710 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.710 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.713 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:49:50.713 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.713 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-12-03 11:49:50.713 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:49:50.714 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-12-03 11:49:50.715 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:49:50.716 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.716 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-12-03 11:49:50.717 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:49:50.717 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.717 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-12-03 11:49:50.717 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:49:50.717 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:49:50.717 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-12-03 11:49:50.717 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:51:32.522 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-03 11:51:32.549 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-03 11:51:32.571 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-12-03 11:51:32.993 [http-nio-8080-exec-6] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-12-03 11:51:33.014 [http-nio-8080-exec-6] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-12-03 11:51:33.772 [http-nio-8080-exec-6] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-03 11:51:35.979 [http-nio-8080-exec-6] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-03 11:51:36.410 [http-nio-8080-exec-6] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-03 11:51:36.441 [http-nio-8080-exec-6] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-12-03 11:51:36.713 [http-nio-8080-exec-6] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-12-03 11:51:37.180 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2de13068
[DEBUG] 2020-12-03 11:51:37.183 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2de13068
[DEBUG] 2020-12-03 11:51:37.183 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de13068
[DEBUG] 2020-12-03 11:51:37.188 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@66029e43
[DEBUG] 2020-12-03 11:51:37.192 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16cd3a03
[DEBUG] 2020-12-03 11:51:37.193 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@29067c46
[DEBUG] 2020-12-03 11:51:37.257 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6638730e
[DEBUG] 2020-12-03 11:51:37.258 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6638730e
[DEBUG] 2020-12-03 11:51:37.265 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6638730e
[DEBUG] 2020-12-03 11:51:37.310 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@37215574
[DEBUG] 2020-12-03 11:51:37.310 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@37215574
[DEBUG] 2020-12-03 11:51:37.311 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37215574
[DEBUG] 2020-12-03 11:51:37.336 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@27c7c72a
[DEBUG] 2020-12-03 11:51:37.336 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@27c7c72a
[DEBUG] 2020-12-03 11:51:37.337 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27c7c72a
[DEBUG] 2020-12-03 11:51:37.356 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57d54cfc
[DEBUG] 2020-12-03 11:51:37.356 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57d54cfc
[DEBUG] 2020-12-03 11:51:37.357 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57d54cfc
[DEBUG] 2020-12-03 11:51:37.380 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c9a70b4
[DEBUG] 2020-12-03 11:51:37.380 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c9a70b4
[DEBUG] 2020-12-03 11:51:37.380 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c9a70b4
[DEBUG] 2020-12-03 11:51:37.407 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75a5ecc1
[DEBUG] 2020-12-03 11:51:37.410 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75a5ecc1
[DEBUG] 2020-12-03 11:51:37.410 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75a5ecc1
[DEBUG] 2020-12-03 11:51:37.429 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@521c5123
[DEBUG] 2020-12-03 11:51:37.429 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@521c5123
[DEBUG] 2020-12-03 11:51:37.429 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@521c5123
[DEBUG] 2020-12-03 11:51:37.431 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66409d7d
[DEBUG] 2020-12-03 11:51:37.431 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66409d7d
[DEBUG] 2020-12-03 11:51:37.446 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c6bc39e
[DEBUG] 2020-12-03 11:51:37.447 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c6bc39e
[DEBUG] 2020-12-03 11:51:37.464 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@377ca6d9
[DEBUG] 2020-12-03 11:51:37.464 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@377ca6d9
[DEBUG] 2020-12-03 11:51:37.474 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@71e7c5c5
[DEBUG] 2020-12-03 11:51:37.475 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1c280674
[DEBUG] 2020-12-03 11:51:37.505 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6489be6f
[DEBUG] 2020-12-03 11:51:37.505 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6489be6f
[DEBUG] 2020-12-03 11:51:37.512 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4b133afc
[DEBUG] 2020-12-03 11:51:37.533 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4b133afc
[DEBUG] 2020-12-03 11:51:37.570 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@64892384
[DEBUG] 2020-12-03 11:51:37.570 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@64892384
[DEBUG] 2020-12-03 11:51:37.599 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@32f83bdd
[DEBUG] 2020-12-03 11:51:37.614 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@32f83bdd
[DEBUG] 2020-12-03 11:51:37.627 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@22591907
[DEBUG] 2020-12-03 11:51:37.628 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@22591907
[DEBUG] 2020-12-03 11:51:37.652 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3fd53668
[DEBUG] 2020-12-03 11:51:37.653 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3fd53668
[DEBUG] 2020-12-03 11:51:37.661 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48d77e8d
[DEBUG] 2020-12-03 11:51:37.661 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48d77e8d
[DEBUG] 2020-12-03 11:51:37.678 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@608861a9
[DEBUG] 2020-12-03 11:51:37.689 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@608861a9
[DEBUG] 2020-12-03 11:51:37.695 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4c5c2162
[DEBUG] 2020-12-03 11:51:37.696 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4c5c2162
[DEBUG] 2020-12-03 11:51:37.729 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@28628ea4
[DEBUG] 2020-12-03 11:51:37.750 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@28628ea4
[DEBUG] 2020-12-03 11:51:37.761 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4ea4a088
[DEBUG] 2020-12-03 11:51:37.762 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ea4a088
[DEBUG] 2020-12-03 11:51:37.793 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1313f277
[DEBUG] 2020-12-03 11:51:37.813 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1313f277
[DEBUG] 2020-12-03 11:51:37.814 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1313f277
[DEBUG] 2020-12-03 11:51:37.846 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47bba9e2
[DEBUG] 2020-12-03 11:51:37.855 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@26810640
[DEBUG] 2020-12-03 11:51:37.856 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@26810640
[DEBUG] 2020-12-03 11:51:37.871 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@26810640
[DEBUG] 2020-12-03 11:51:37.876 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6be46368
[DEBUG] 2020-12-03 11:51:37.897 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3106d5e9
[DEBUG] 2020-12-03 11:51:37.900 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3106d5e9
[DEBUG] 2020-12-03 11:51:37.906 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@66d27f68
[DEBUG] 2020-12-03 11:51:37.907 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66d27f68
[DEBUG] 2020-12-03 11:51:37.932 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4fa484ec
[DEBUG] 2020-12-03 11:51:37.932 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4fa484ec
[DEBUG] 2020-12-03 11:51:37.936 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1a8bf177
[DEBUG] 2020-12-03 11:51:37.936 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a8bf177
[DEBUG] 2020-12-03 11:51:37.938 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7968fb56
[DEBUG] 2020-12-03 11:51:37.940 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7968fb56
[DEBUG] 2020-12-03 11:51:37.941 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18b0179e
[DEBUG] 2020-12-03 11:51:37.949 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64258a7f
[DEBUG] 2020-12-03 11:51:37.949 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64258a7f
[DEBUG] 2020-12-03 11:51:37.950 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64258a7f
[DEBUG] 2020-12-03 11:51:37.967 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5396d899
[DEBUG] 2020-12-03 11:51:37.968 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5396d899
[DEBUG] 2020-12-03 11:51:37.968 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5396d899
[DEBUG] 2020-12-03 11:51:37.975 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@ce5423d
[DEBUG] 2020-12-03 11:51:37.977 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5b3dc2b5
[DEBUG] 2020-12-03 11:51:37.997 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@35e45bec
[DEBUG] 2020-12-03 11:51:37.999 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@35e45bec
[DEBUG] 2020-12-03 11:51:37.999 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@35e45bec
[DEBUG] 2020-12-03 11:51:38.010 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6fe043aa
[DEBUG] 2020-12-03 11:51:38.010 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6fe043aa
[DEBUG] 2020-12-03 11:51:38.010 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6fe043aa
[DEBUG] 2020-12-03 11:51:38.030 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@23becd64
[DEBUG] 2020-12-03 11:51:38.031 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@78c26b56
[DEBUG] 2020-12-03 11:51:38.057 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@334ce4aa
[DEBUG] 2020-12-03 11:51:38.057 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@334ce4aa
[DEBUG] 2020-12-03 11:51:38.059 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5bc82f18
[DEBUG] 2020-12-03 11:51:38.083 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2bc7b184
[DEBUG] 2020-12-03 11:51:38.089 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2bc7b184
[DEBUG] 2020-12-03 11:51:38.103 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@56f75828
[DEBUG] 2020-12-03 11:51:38.115 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56f75828
[DEBUG] 2020-12-03 11:51:38.116 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2858862b
[DEBUG] 2020-12-03 11:51:38.118 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1cbbf760
[DEBUG] 2020-12-03 11:51:38.129 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@260214a3
[DEBUG] 2020-12-03 11:51:38.164 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1b26c983
[DEBUG] 2020-12-03 11:51:38.177 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b26c983
[DEBUG] 2020-12-03 11:51:38.179 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1856d34b
[DEBUG] 2020-12-03 11:51:38.179 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@14c9bead
[DEBUG] 2020-12-03 11:51:38.179 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@76c83cbb
[DEBUG] 2020-12-03 11:51:38.179 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4812f06f
[DEBUG] 2020-12-03 11:51:38.180 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6670bead
[DEBUG] 2020-12-03 11:51:38.180 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f954818
[DEBUG] 2020-12-03 11:51:38.180 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@80f86b5
[DEBUG] 2020-12-03 11:51:38.180 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@57418e53
[DEBUG] 2020-12-03 11:51:38.532 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-03 11:51:38.551 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-03 11:51:38.557 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-03 11:51:38.558 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-03 11:51:38.560 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-03 11:51:38.603 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-03 11:51:38.626 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-03 11:51:38.650 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-03 11:51:38.660 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-03 11:51:38.661 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-03 11:51:38.663 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-03 11:51:38.671 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-03 11:51:38.683 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-03 11:51:38.690 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-03 11:51:38.786 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotelFull
[INFO ] 2020-12-03 11:51:38.791 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-03 11:51:38.791 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-03 11:51:39.823 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-03 11:51:41.749 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-12-03 11:51:41.763 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-03 11:51:41.763 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-03 11:51:42.195 [http-nio-8080-exec-6] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-03 11:51:42.562 [http-nio-8080-exec-6] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-03 11:51:42.801 [http-nio-8080-exec-6] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-03 11:51:43.125 [http-nio-8080-exec-6] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-03 11:51:43.161 [http-nio-8080-exec-6] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c4a6295] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@549931a9]
[DEBUG] 2020-12-03 11:51:43.594 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-12-03 11:51:43.884 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:51:43.924 [http-nio-8080-exec-6] EntityBinder - Import with entity name User
[DEBUG] 2020-12-03 11:51:43.947 [http-nio-8080-exec-6] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-12-03 11:51:44.109 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.139 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:51:44.145 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-12-03 11:51:44.167 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:51:44.175 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:51:44.201 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:51:44.204 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.205 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property Password with lazy=false
[DEBUG] 2020-12-03 11:51:44.205 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:Password]
[DEBUG] 2020-12-03 11:51:44.205 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for Password
[DEBUG] 2020-12-03 11:51:44.205 [http-nio-8080-exec-6] PropertyBinder - Building property Password
[DEBUG] 2020-12-03 11:51:44.205 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.206 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-12-03 11:51:44.206 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:address]
[DEBUG] 2020-12-03 11:51:44.207 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-12-03 11:51:44.207 [http-nio-8080-exec-6] PropertyBinder - Building property address
[DEBUG] 2020-12-03 11:51:44.207 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=details, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.208 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property details with lazy=false
[DEBUG] 2020-12-03 11:51:44.208 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:details]
[DEBUG] 2020-12-03 11:51:44.214 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for details
[DEBUG] 2020-12-03 11:51:44.215 [http-nio-8080-exec-6] PropertyBinder - Building property details
[DEBUG] 2020-12-03 11:51:44.215 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.215 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-03 11:51:44.215 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:email]
[DEBUG] 2020-12-03 11:51:44.215 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-03 11:51:44.218 [http-nio-8080-exec-6] PropertyBinder - Building property email
[DEBUG] 2020-12-03 11:51:44.219 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.219 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-12-03 11:51:44.220 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-12-03 11:51:44.221 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-12-03 11:51:44.223 [http-nio-8080-exec-6] PropertyBinder - Building property first_name
[DEBUG] 2020-12-03 11:51:44.228 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.236 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-12-03 11:51:44.237 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-12-03 11:51:44.237 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-12-03 11:51:44.237 [http-nio-8080-exec-6] PropertyBinder - Building property last_name
[DEBUG] 2020-12-03 11:51:44.238 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.238 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-12-03 11:51:44.238 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:phone]
[DEBUG] 2020-12-03 11:51:44.238 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-12-03 11:51:44.241 [http-nio-8080-exec-6] PropertyBinder - Building property phone
[DEBUG] 2020-12-03 11:51:44.265 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:51:44.265 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.269 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.318 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.319 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.319 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-03 11:51:44.323 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:51:44.324 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:51:44.326 [http-nio-8080-exec-6] CollectionBinder - Collection role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:51:44.342 [http-nio-8080-exec-6] PropertyBinder - Building property reservations
[DEBUG] 2020-12-03 11:51:44.342 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:51:44.342 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.342 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.343 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.343 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.344 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-03 11:51:44.344 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:51:44.344 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-03 11:51:44.344 [http-nio-8080-exec-6] CollectionBinder - Collection role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:51:44.344 [http-nio-8080-exec-6] PropertyBinder - Building property roles
[DEBUG] 2020-12-03 11:51:44.345 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.345 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-12-03 11:51:44.345 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-12-03 11:51:44.345 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-12-03 11:51:44.345 [http-nio-8080-exec-6] PropertyBinder - Building property user_name
[DEBUG] 2020-12-03 11:51:44.347 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: hote.entity.Role
[DEBUG] 2020-12-03 11:51:44.348 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:51:44.348 [http-nio-8080-exec-6] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-03 11:51:44.348 [http-nio-8080-exec-6] EntityBinder - Bind entity hote.entity.Role on table role
[DEBUG] 2020-12-03 11:51:44.361 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.363 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:51:44.363 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:id]
[DEBUG] 2020-12-03 11:51:44.363 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:51:44.363 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:51:44.383 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:51:44.384 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.385 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-03 11:51:44.385 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:roleName]
[DEBUG] 2020-12-03 11:51:44.386 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-03 11:51:44.386 [http-nio-8080-exec-6] PropertyBinder - Building property roleName
[DEBUG] 2020-12-03 11:51:44.390 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-03 11:51:44.391 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.409 [http-nio-8080-exec-6] PropertyBinder - Building property user
[DEBUG] 2020-12-03 11:51:44.420 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.421 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-12-03 11:51:44.422 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:userName]
[DEBUG] 2020-12-03 11:51:44.425 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-12-03 11:51:44.425 [http-nio-8080-exec-6] PropertyBinder - Building property userName
[DEBUG] 2020-12-03 11:51:44.427 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: hote.entity.Reservation
[DEBUG] 2020-12-03 11:51:44.428 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:51:44.430 [http-nio-8080-exec-6] EntityBinder - Import with entity name Reservation
[DEBUG] 2020-12-03 11:51:44.430 [http-nio-8080-exec-6] EntityBinder - Bind entity hote.entity.Reservation on table reservation
[DEBUG] 2020-12-03 11:51:44.451 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.451 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:51:44.452 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:id]
[DEBUG] 2020-12-03 11:51:44.452 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:51:44.452 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:51:44.453 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:51:44.464 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.464 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property end_date with lazy=false
[DEBUG] 2020-12-03 11:51:44.465 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:end_date]
[DEBUG] 2020-12-03 11:51:44.480 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for end_date
[DEBUG] 2020-12-03 11:51:44.481 [http-nio-8080-exec-6] PropertyBinder - Building property end_date
[DEBUG] 2020-12-03 11:51:44.481 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-03 11:51:44.481 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.482 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.490 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.491 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.492 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-03 11:51:44.492 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-03 11:51:44.493 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-03 11:51:44.493 [http-nio-8080-exec-6] CollectionBinder - Collection role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:44.493 [http-nio-8080-exec-6] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-12-03 11:51:44.493 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=start_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.494 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property start_date with lazy=false
[DEBUG] 2020-12-03 11:51:44.514 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:start_date]
[DEBUG] 2020-12-03 11:51:44.514 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for start_date
[DEBUG] 2020-12-03 11:51:44.515 [http-nio-8080-exec-6] PropertyBinder - Building property start_date
[DEBUG] 2020-12-03 11:51:44.526 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=total_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.529 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property total_price with lazy=false
[DEBUG] 2020-12-03 11:51:44.529 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:total_price]
[DEBUG] 2020-12-03 11:51:44.529 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for total_price
[DEBUG] 2020-12-03 11:51:44.538 [http-nio-8080-exec-6] PropertyBinder - Building property total_price
[DEBUG] 2020-12-03 11:51:44.539 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='guest_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-03 11:51:44.539 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.540 [http-nio-8080-exec-6] PropertyBinder - Building property user
[DEBUG] 2020-12-03 11:51:44.540 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: hote.entity.Room
[DEBUG] 2020-12-03 11:51:44.540 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:51:44.541 [http-nio-8080-exec-6] EntityBinder - Import with entity name Room
[DEBUG] 2020-12-03 11:51:44.541 [http-nio-8080-exec-6] EntityBinder - Bind entity hote.entity.Room on table room
[DEBUG] 2020-12-03 11:51:44.568 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.568 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:51:44.569 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:id]
[DEBUG] 2020-12-03 11:51:44.569 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:51:44.570 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:51:44.574 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:51:44.580 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=Avalable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.581 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property Avalable with lazy=false
[DEBUG] 2020-12-03 11:51:44.581 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:Avalable]
[DEBUG] 2020-12-03 11:51:44.582 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for Avalable
[DEBUG] 2020-12-03 11:51:44.595 [http-nio-8080-exec-6] PropertyBinder - Building property Avalable
[DEBUG] 2020-12-03 11:51:44.596 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=current_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.596 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property current_price with lazy=false
[DEBUG] 2020-12-03 11:51:44.596 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:current_price]
[DEBUG] 2020-12-03 11:51:44.596 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for current_price
[DEBUG] 2020-12-03 11:51:44.599 [http-nio-8080-exec-6] PropertyBinder - Building property current_price
[DEBUG] 2020-12-03 11:51:44.602 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.602 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-03 11:51:44.602 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:description]
[DEBUG] 2020-12-03 11:51:44.602 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-03 11:51:44.607 [http-nio-8080-exec-6] PropertyBinder - Building property description
[DEBUG] 2020-12-03 11:51:44.607 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-03 11:51:44.607 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.608 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.608 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.609 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.609 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-03 11:51:44.609 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-03 11:51:44.609 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-03 11:51:44.610 [http-nio-8080-exec-6] CollectionBinder - Collection role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:51:44.610 [http-nio-8080-exec-6] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-12-03 11:51:44.610 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=room_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.610 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property room_name with lazy=false
[DEBUG] 2020-12-03 11:51:44.610 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:room_name]
[DEBUG] 2020-12-03 11:51:44.610 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for room_name
[DEBUG] 2020-12-03 11:51:44.611 [http-nio-8080-exec-6] PropertyBinder - Building property room_name
[DEBUG] 2020-12-03 11:51:44.611 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:51:44.611 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-03 11:51:44.611 [http-nio-8080-exec-6] EntityBinder - Import with entity name Roomreserved
[DEBUG] 2020-12-03 11:51:44.614 [http-nio-8080-exec-6] EntityBinder - Bind entity hote.entity.RoomReserved on table room_reserved
[DEBUG] 2020-12-03 11:51:44.635 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.640 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-03 11:51:44.640 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:id]
[DEBUG] 2020-12-03 11:51:44.640 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-03 11:51:44.642 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2020-12-03 11:51:44.643 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-03 11:51:44.644 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.644 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-03 11:51:44.644 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:price]
[DEBUG] 2020-12-03 11:51:44.644 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-03 11:51:44.644 [http-nio-8080-exec-6] PropertyBinder - Building property price
[DEBUG] 2020-12-03 11:51:44.644 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservation_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-03 11:51:44.649 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=reservation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.651 [http-nio-8080-exec-6] PropertyBinder - Building property reservation
[DEBUG] 2020-12-03 11:51:44.652 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='room_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-03 11:51:44.652 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=room, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-03 11:51:44.652 [http-nio-8080-exec-6] PropertyBinder - Building property room
[DEBUG] 2020-12-03 11:51:44.670 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:51:44.670 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for Password
[DEBUG] 2020-12-03 11:51:44.670 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-12-03 11:51:44.670 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for details
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for end_date
[DEBUG] 2020-12-03 11:51:44.671 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for start_date
[DEBUG] 2020-12-03 11:51:44.672 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for total_price
[DEBUG] 2020-12-03 11:51:44.672 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:51:44.672 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for Avalable
[DEBUG] 2020-12-03 11:51:44.673 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for current_price
[DEBUG] 2020-12-03 11:51:44.673 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-03 11:51:44.673 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for room_name
[DEBUG] 2020-12-03 11:51:44.673 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-03 11:51:44.673 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-03 11:51:44.734 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-03 11:51:44.734 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-03 11:51:44.735 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [reservation]
[DEBUG] 2020-12-03 11:51:44.735 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room]
[DEBUG] 2020-12-03 11:51:44.735 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room_reserved]
[DEBUG] 2020-12-03 11:51:44.735 [http-nio-8080-exec-6] CollectionSecondPass - Second pass for collection: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:51:44.737 [http-nio-8080-exec-6] CollectionBinder - Binding a OneToMany: hote.entity.User.reservations through a foreign key
[DEBUG] 2020-12-03 11:51:44.759 [http-nio-8080-exec-6] CollectionBinder - Mapping collection: hote.entity.User.reservations -> reservation
[DEBUG] 2020-12-03 11:51:44.762 [http-nio-8080-exec-6] TableBinder - Retrieving property hote.entity.Reservation.user
[DEBUG] 2020-12-03 11:51:44.762 [http-nio-8080-exec-6] CollectionSecondPass - Mapped collection key: guest_id, one-to-many: hote.entity.Reservation
[DEBUG] 2020-12-03 11:51:44.768 [http-nio-8080-exec-6] CollectionSecondPass - Second pass for collection: hote.entity.User.roles
[DEBUG] 2020-12-03 11:51:44.771 [http-nio-8080-exec-6] CollectionBinder - Binding a OneToMany: hote.entity.User.roles through a foreign key
[DEBUG] 2020-12-03 11:51:44.777 [http-nio-8080-exec-6] CollectionBinder - Mapping collection: hote.entity.User.roles -> role
[DEBUG] 2020-12-03 11:51:44.778 [http-nio-8080-exec-6] TableBinder - Retrieving property hote.entity.Role.user
[DEBUG] 2020-12-03 11:51:44.778 [http-nio-8080-exec-6] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Role
[DEBUG] 2020-12-03 11:51:44.787 [http-nio-8080-exec-6] CollectionSecondPass - Second pass for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:44.787 [http-nio-8080-exec-6] CollectionBinder - Binding a OneToMany: hote.entity.Reservation.roomReserveds through a foreign key
[DEBUG] 2020-12-03 11:51:44.787 [http-nio-8080-exec-6] CollectionBinder - Mapping collection: hote.entity.Reservation.roomReserveds -> room_reserved
[DEBUG] 2020-12-03 11:51:44.787 [http-nio-8080-exec-6] TableBinder - Retrieving property hote.entity.RoomReserved.reservation
[DEBUG] 2020-12-03 11:51:44.788 [http-nio-8080-exec-6] CollectionSecondPass - Mapped collection key: reservation_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:51:44.791 [http-nio-8080-exec-6] CollectionSecondPass - Second pass for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:51:44.791 [http-nio-8080-exec-6] CollectionBinder - Binding a OneToMany: hote.entity.Room.roomReserveds through a foreign key
[DEBUG] 2020-12-03 11:51:44.791 [http-nio-8080-exec-6] CollectionBinder - Mapping collection: hote.entity.Room.roomReserveds -> room_reserved
[DEBUG] 2020-12-03 11:51:44.791 [http-nio-8080-exec-6] TableBinder - Retrieving property hote.entity.RoomReserved.room
[DEBUG] 2020-12-03 11:51:44.791 [http-nio-8080-exec-6] CollectionSecondPass - Mapped collection key: room_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:51:44.792 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-03 11:51:44.794 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-03 11:51:44.794 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-12-03 11:51:44.794 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-12-03 11:51:44.821 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-03 11:51:44.821 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-03 11:51:44.822 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-12-03 11:51:44.822 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-12-03 11:51:45.138 [http-nio-8080-exec-6] SessionFactoryImpl - Building session factory
[DEBUG] 2020-12-03 11:51:45.143 [http-nio-8080-exec-6] Settings - SessionFactory name : null
[DEBUG] 2020-12-03 11:51:45.143 [http-nio-8080-exec-6] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-12-03 11:51:45.143 [http-nio-8080-exec-6] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-12-03 11:51:45.160 [http-nio-8080-exec-6] Settings - Statistics: disabled
[DEBUG] 2020-12-03 11:51:45.161 [http-nio-8080-exec-6] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-12-03 11:51:45.161 [http-nio-8080-exec-6] Settings - Default entity-mode: pojo
[DEBUG] 2020-12-03 11:51:45.161 [http-nio-8080-exec-6] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-12-03 11:51:45.161 [http-nio-8080-exec-6] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-12-03 11:51:45.161 [http-nio-8080-exec-6] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-12-03 11:51:45.162 [http-nio-8080-exec-6] Settings - Default batch fetch size: -1
[DEBUG] 2020-12-03 11:51:45.162 [http-nio-8080-exec-6] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-12-03 11:51:45.162 [http-nio-8080-exec-6] Settings - Default null ordering: NONE
[DEBUG] 2020-12-03 11:51:45.162 [http-nio-8080-exec-6] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-12-03 11:51:45.162 [http-nio-8080-exec-6] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-12-03 11:51:45.162 [http-nio-8080-exec-6] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Query language substitutions: {}
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Named query checking : enabled
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Second-level cache: disabled
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Second-level query cache: disabled
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Second-level query cache factory: null
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Second-level cache region prefix: null
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-12-03 11:51:45.163 [http-nio-8080-exec-6] Settings - JDBC batch size: 15
[DEBUG] 2020-12-03 11:51:45.164 [http-nio-8080-exec-6] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-12-03 11:51:45.164 [http-nio-8080-exec-6] Settings - Scrollable result sets: enabled
[DEBUG] 2020-12-03 11:51:45.164 [http-nio-8080-exec-6] Settings - Wrap result sets: disabled
[DEBUG] 2020-12-03 11:51:45.164 [http-nio-8080-exec-6] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-12-03 11:51:45.164 [http-nio-8080-exec-6] Settings - JDBC result set fetch size: null
[DEBUG] 2020-12-03 11:51:45.164 [http-nio-8080-exec-6] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-12-03 11:51:45.164 [http-nio-8080-exec-6] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-12-03 11:51:45.169 [http-nio-8080-exec-6] Settings - JPA compliance - query : 
[DEBUG] 2020-12-03 11:51:45.169 [http-nio-8080-exec-6] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-12-03 11:51:45.169 [http-nio-8080-exec-6] Settings - JPA compliance - lists : 
[DEBUG] 2020-12-03 11:51:45.169 [http-nio-8080-exec-6] Settings - JPA compliance - transactions : 
[INFO ] 2020-12-03 11:51:46.013 [http-nio-8080-exec-6] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-12-03 11:51:46.345 [http-nio-8080-exec-6] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-12-03 11:51:46.356 [http-nio-8080-exec-6] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.8, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-51-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotelFull, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@63b22c0b, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/hotelFull, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-12-03 11:51:46.635 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-12-03 11:51:46.641 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-12-03 11:51:46.666 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-12-03 11:51:46.667 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-12-03 11:51:46.673 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-12-03 11:51:46.673 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:51:46.692 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-12-03 11:51:46.692 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-12-03 11:51:46.729 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-12-03 11:51:46.756 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-12-03 11:51:46.851 [http-nio-8080-exec-6] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-12-03 11:51:46.888 [http-nio-8080-exec-6] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-12-03 11:51:46.889 [http-nio-8080-exec-6] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c4a6295] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@579bf9a8]
[DEBUG] 2020-12-03 11:51:47.811 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-12-03 11:51:47.813 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-12-03 11:51:48.037 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-12-03 11:51:48.038 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-12-03 11:51:52.098 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-12-03 11:51:52.102 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-12-03 11:51:52.113 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-12-03 11:51:52.113 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-12-03 11:51:52.627 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-12-03 11:51:52.627 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:51:52.630 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-12-03 11:51:52.630 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:51:52.981 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-12-03 11:51:52.986 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-12-03 11:51:52.992 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-12-03 11:51:52.992 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-12-03 11:51:53.657 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-12-03 11:51:53.662 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-12-03 11:51:53.663 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-12-03 11:51:53.663 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-12-03 11:51:53.919 [http-nio-8080-exec-6] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:51:53.921 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row insert: update reservation set guest_id=? where id=?
[DEBUG] 2020-12-03 11:51:53.921 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row update: update reservation set  where id=?
[DEBUG] 2020-12-03 11:51:53.922 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row delete: update reservation set guest_id=null where guest_id=? and id=?
[DEBUG] 2020-12-03 11:51:53.922 [http-nio-8080-exec-6] AbstractCollectionPersister -  One-shot delete: update reservation set guest_id=null where guest_id=?
[DEBUG] 2020-12-03 11:51:53.928 [http-nio-8080-exec-6] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.roles
[DEBUG] 2020-12-03 11:51:53.928 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-12-03 11:51:53.928 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-12-03 11:51:53.928 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-12-03 11:51:53.928 [http-nio-8080-exec-6] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-12-03 11:51:53.928 [http-nio-8080-exec-6] AbstractCollectionPersister - Static SQL for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:53.929 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row insert: update room_reserved set reservation_id=? where id=?
[DEBUG] 2020-12-03 11:51:53.929 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-12-03 11:51:53.929 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row delete: update room_reserved set reservation_id=null where reservation_id=? and id=?
[DEBUG] 2020-12-03 11:51:53.929 [http-nio-8080-exec-6] AbstractCollectionPersister -  One-shot delete: update room_reserved set reservation_id=null where reservation_id=?
[DEBUG] 2020-12-03 11:51:53.929 [http-nio-8080-exec-6] AbstractCollectionPersister - Static SQL for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:51:53.929 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row insert: update room_reserved set room_id=? where id=?
[DEBUG] 2020-12-03 11:51:53.936 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-12-03 11:51:53.936 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row delete: update room_reserved set room_id=null where room_id=? and id=?
[DEBUG] 2020-12-03 11:51:53.936 [http-nio-8080-exec-6] AbstractCollectionPersister -  One-shot delete: update room_reserved set room_id=null where room_id=?
[DEBUG] 2020-12-03 11:51:53.977 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: hote.entity.Reservation
[DEBUG] 2020-12-03 11:51:53.977 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from reservation where id =?
[DEBUG] 2020-12-03 11:51:53.977 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select reservatio_.id, reservatio_.end_date as end_date2_0_, reservatio_.start_date as start_da3_0_, reservatio_.total_price as total_pr4_0_, reservatio_.guest_id as guest_id5_0_ from reservation reservatio_ where reservatio_.id=?
[DEBUG] 2020-12-03 11:51:53.977 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into reservation (end_date, start_date, total_price, guest_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:51:53.980 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update reservation set end_date=?, start_date=?, total_price=?, guest_id=? where id=?
[DEBUG] 2020-12-03 11:51:53.980 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from reservation where id=?
[DEBUG] 2020-12-03 11:51:53.980 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into reservation (end_date, start_date, total_price, guest_id) values (?, ?, ?, ?)
[DEBUG] 2020-12-03 11:51:54.355 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d750b88]
[DEBUG] 2020-12-03 11:51:54.364 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-03 11:51:54.364 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:51:54.409 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c4df7b1]
[DEBUG] 2020-12-03 11:51:54.428 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc85b1d]
[DEBUG] 2020-12-03 11:51:54.458 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-03 11:51:54.459 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:54.459 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:54.463 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-03 11:51:54.479 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@690bbdd7]
[DEBUG] 2020-12-03 11:51:54.484 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-12-03 11:51:54.485 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-12-03 11:51:54.492 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-12-03 11:51:54.494 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-03 11:51:54.509 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-03 11:51:54.509 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-12-03 11:51:54.518 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-03 11:51:54.519 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-03 11:51:54.522 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:51:54.522 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59bbda8]
[DEBUG] 2020-12-03 11:51:54.523 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-03 11:51:54.525 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-03 11:51:54.525 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-03 11:51:54.525 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-03 11:51:54.525 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-03 11:51:54.526 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-03 11:51:54.526 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-03 11:51:54.526 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-03 11:51:54.526 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-12-03 11:51:54.526 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-03 11:51:54.543 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e1ef5f1]
[DEBUG] 2020-12-03 11:51:54.543 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315e218e]
[DEBUG] 2020-12-03 11:51:54.543 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-12-03 11:51:54.544 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-03 11:51:54.544 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-03 11:51:54.544 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-12-03 11:51:54.554 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-03 11:51:54.567 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:54.757 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:54.852 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-03 11:51:54.879 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.Reservation [NONE]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-12-03 11:51:54.888 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43084e84]
[DEBUG] 2020-12-03 11:51:54.888 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-03 11:51:54.888 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:51:54.888 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62aac953]
[DEBUG] 2020-12-03 11:51:54.889 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ed161c]
[DEBUG] 2020-12-03 11:51:54.889 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-03 11:51:54.889 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:54.890 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:54.891 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-03 11:51:54.894 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8cf05]
[DEBUG] 2020-12-03 11:51:54.898 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-12-03 11:51:54.898 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-12-03 11:51:54.898 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-12-03 11:51:54.898 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-03 11:51:54.898 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-03 11:51:54.898 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-12-03 11:51:54.915 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-03 11:51:54.915 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-03 11:51:54.915 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:51:54.917 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a68415e]
[DEBUG] 2020-12-03 11:51:54.917 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-03 11:51:54.917 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-03 11:51:54.918 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-03 11:51:54.918 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-03 11:51:54.918 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-03 11:51:54.919 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-03 11:51:54.919 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-03 11:51:54.919 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-03 11:51:54.919 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-12-03 11:51:54.919 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-03 11:51:54.920 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b92ef61]
[DEBUG] 2020-12-03 11:51:54.921 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b3be2d]
[DEBUG] 2020-12-03 11:51:54.921 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-12-03 11:51:54.921 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-03 11:51:54.921 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-03 11:51:54.921 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-12-03 11:51:54.923 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-03 11:51:54.923 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:54.923 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:54.945 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-03 11:51:54.947 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.Reservation [READ]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-12-03 11:51:55.144 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-12-03 11:51:55.160 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-12-03 11:51:55.160 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: hote.entity.Room
[DEBUG] 2020-12-03 11:51:55.161 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from room where id =?
[DEBUG] 2020-12-03 11:51:55.161 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select room_.id, room_.Avalable as Avalable2_2_, room_.current_price as current_3_2_, room_.description as descript4_2_, room_.room_name as room_nam5_2_ from room room_ where room_.id=?
[DEBUG] 2020-12-03 11:51:55.161 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into room (Avalable, current_price, description, room_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:51:55.161 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update room set Avalable=?, current_price=?, description=?, room_name=? where id=?
[DEBUG] 2020-12-03 11:51:55.164 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from room where id=?
[DEBUG] 2020-12-03 11:51:55.164 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into room (Avalable, current_price, description, room_name) values (?, ?, ?, ?)
[DEBUG] 2020-12-03 11:51:55.164 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bde3163]
[DEBUG] 2020-12-03 11:51:55.164 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-12-03 11:51:55.164 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-12-03 11:51:55.164 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-03 11:51:55.164 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:51:55.165 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@285fa144]
[DEBUG] 2020-12-03 11:51:55.165 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655ce14a]
[DEBUG] 2020-12-03 11:51:55.165 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-03 11:51:55.165 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:55.165 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fe1c761]
[DEBUG] 2020-12-03 11:51:55.165 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-12-03 11:51:55.172 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.172 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.172 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-12-03 11:51:55.172 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-12-03 11:51:55.172 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-12-03 11:51:55.172 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec8a7a2]
[DEBUG] 2020-12-03 11:51:55.173 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-03 11:51:55.173 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-12-03 11:51:55.177 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-12-03 11:51:55.177 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.181 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.191 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-03 11:51:55.191 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.Room [NONE]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-12-03 11:51:55.193 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c3c7ccd]
[DEBUG] 2020-12-03 11:51:55.194 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-12-03 11:51:55.194 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-12-03 11:51:55.194 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-03 11:51:55.194 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:51:55.195 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@594d762f]
[DEBUG] 2020-12-03 11:51:55.196 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2633f13]
[DEBUG] 2020-12-03 11:51:55.196 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-03 11:51:55.196 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:55.196 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@597ebbd7]
[DEBUG] 2020-12-03 11:51:55.196 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-12-03 11:51:55.197 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.197 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.197 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-12-03 11:51:55.197 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-12-03 11:51:55.197 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-12-03 11:51:55.197 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687eef54]
[DEBUG] 2020-12-03 11:51:55.201 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-03 11:51:55.202 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-12-03 11:51:55.202 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-12-03 11:51:55.202 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.203 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.214 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-03 11:51:55.215 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.Room [READ]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-12-03 11:51:55.221 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-12-03 11:51:55.222 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-12-03 11:51:55.223 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: hote.entity.RoomReserved
[DEBUG] 2020-12-03 11:51:55.230 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from room_reserved where id =?
[DEBUG] 2020-12-03 11:51:55.230 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select roomreserv_.id, roomreserv_.price as price2_3_, roomreserv_.reservation_id as reservat3_3_, roomreserv_.room_id as room_id4_3_ from room_reserved roomreserv_ where roomreserv_.id=?
[DEBUG] 2020-12-03 11:51:55.231 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into room_reserved (price, reservation_id, room_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-03 11:51:55.231 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update room_reserved set price=?, reservation_id=?, room_id=? where id=?
[DEBUG] 2020-12-03 11:51:55.231 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from room_reserved where id=?
[DEBUG] 2020-12-03 11:51:55.231 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into room_reserved (price, reservation_id, room_id) values (?, ?, ?)
[DEBUG] 2020-12-03 11:51:55.231 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@103329f]
[DEBUG] 2020-12-03 11:51:55.232 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-03 11:51:55.232 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-03 11:51:55.238 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b25746a]
[DEBUG] 2020-12-03 11:51:55.247 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-03 11:51:55.248 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.248 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.248 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-03 11:51:55.248 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-03 11:51:55.248 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-03 11:51:55.248 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb171d7]
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d520401]
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@879c12a]
[DEBUG] 2020-12-03 11:51:55.249 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-03 11:51:55.250 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-03 11:51:55.250 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fd1363b]
[DEBUG] 2020-12-03 11:51:55.258 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-03 11:51:55.258 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-03 11:51:55.258 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-03 11:51:55.258 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-03 11:51:55.258 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-03 11:51:55.258 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-03 11:51:55.258 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.260 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.277 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-12-03 11:51:55.278 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.RoomReserved [NONE]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-12-03 11:51:55.278 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1abde9ec]
[DEBUG] 2020-12-03 11:51:55.287 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-03 11:51:55.287 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-03 11:51:55.288 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a7d9e54]
[DEBUG] 2020-12-03 11:51:55.288 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-03 11:51:55.288 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.288 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.288 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-03 11:51:55.295 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-03 11:51:55.295 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-03 11:51:55.298 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cf332e4]
[DEBUG] 2020-12-03 11:51:55.298 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-03 11:51:55.298 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-03 11:51:55.298 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-03 11:51:55.298 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-03 11:51:55.298 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-03 11:51:55.298 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-03 11:51:55.299 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-03 11:51:55.299 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-03 11:51:55.299 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-03 11:51:55.300 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-03 11:51:55.300 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e8dcb1f]
[DEBUG] 2020-12-03 11:51:55.300 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7597e1c5]
[DEBUG] 2020-12-03 11:51:55.300 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-03 11:51:55.300 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-03 11:51:55.317 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30b68981]
[DEBUG] 2020-12-03 11:51:55.318 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-03 11:51:55.322 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-03 11:51:55.322 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-03 11:51:55.322 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-03 11:51:55.322 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-03 11:51:55.322 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-03 11:51:55.322 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.324 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.325 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-12-03 11:51:55.326 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.RoomReserved [READ]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-12-03 11:51:55.330 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-12-03 11:51:55.332 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-12-03 11:51:55.332 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-12-03 11:51:55.332 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-12-03 11:51:55.332 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select user_.id, user_.Password as Password2_4_, user_.address as address3_4_, user_.details as details4_4_, user_.email as email5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.phone as phone8_4_, user_.user_name as user_nam9_4_ from user user_ where user_.id=?
[DEBUG] 2020-12-03 11:51:55.332 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into user (Password, address, details, email, first_name, last_name, phone, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:51:55.332 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-12-03 11:51:55.332 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-12-03 11:51:55.332 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-03 11:51:55.347 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba7365f]
[DEBUG] 2020-12-03 11:51:55.348 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-12-03 11:51:55.348 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-03 11:51:55.348 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-12-03 11:51:55.348 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-12-03 11:51:55.348 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-12-03 11:51:55.348 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-12-03 11:51:55.348 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-03 11:51:55.349 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-12-03 11:51:55.349 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@158a1409]
[DEBUG] 2020-12-03 11:51:55.349 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@487d1d96]
[DEBUG] 2020-12-03 11:51:55.350 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-12-03 11:51:55.351 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-12-03 11:51:55.352 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5dca676a]
[DEBUG] 2020-12-03 11:51:55.352 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dfb50e8]
[DEBUG] 2020-12-03 11:51:55.352 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-12-03 11:51:55.352 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:55.353 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:55.353 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-12-03 11:51:55.355 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f8e0c7c]
[DEBUG] 2020-12-03 11:51:55.355 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-12-03 11:51:55.355 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-12-03 11:51:55.355 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-12-03 11:51:55.355 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-12-03 11:51:55.358 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-03 11:51:55.358 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18d57775]
[DEBUG] 2020-12-03 11:51:55.358 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@301eb50d]
[DEBUG] 2020-12-03 11:51:55.382 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-12-03 11:51:55.382 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-03 11:51:55.382 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-12-03 11:51:55.385 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-12-03 11:51:55.385 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-12-03 11:51:55.387 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.390 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.392 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-03 11:51:55.430 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:51:55.430 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73cf2f7b]
[DEBUG] 2020-12-03 11:51:55.445 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-12-03 11:51:55.446 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-03 11:51:55.446 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-12-03 11:51:55.446 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-12-03 11:51:55.446 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-12-03 11:51:55.446 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-12-03 11:51:55.446 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-03 11:51:55.446 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-12-03 11:51:55.447 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3db2770e]
[DEBUG] 2020-12-03 11:51:55.447 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69425ae5]
[DEBUG] 2020-12-03 11:51:55.447 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-12-03 11:51:55.447 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-12-03 11:51:55.447 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19e6b3c7]
[DEBUG] 2020-12-03 11:51:55.447 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6288476c]
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fa06556]
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-12-03 11:51:55.448 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-03 11:51:55.449 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f33ece9]
[DEBUG] 2020-12-03 11:51:55.449 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4f2e6]
[DEBUG] 2020-12-03 11:51:55.449 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-12-03 11:51:55.460 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-03 11:51:55.461 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-12-03 11:51:55.461 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-12-03 11:51:55.463 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-12-03 11:51:55.463 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.464 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.485 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-03 11:51:55.492 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:51:55.495 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-12-03 11:51:55.496 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-12-03 11:51:55.496 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: hote.entity.Role
[DEBUG] 2020-12-03 11:51:55.496 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-12-03 11:51:55.496 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_1_, role_.user_id as user_id4_1_, role_.user_name as user_nam3_1_ from role role_ where role_.id=?
[DEBUG] 2020-12-03 11:51:55.497 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-03 11:51:55.497 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2020-12-03 11:51:55.497 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-12-03 11:51:55.497 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2020-12-03 11:51:55.497 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5de6e932]
[DEBUG] 2020-12-03 11:51:55.507 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-03 11:51:55.508 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:51:55.511 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f28c887]
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4854b9b8]
[DEBUG] 2020-12-03 11:51:55.514 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a38a0b]
[DEBUG] 2020-12-03 11:51:55.534 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-12-03 11:51:55.535 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-12-03 11:51:55.535 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b27de17]
[DEBUG] 2020-12-03 11:51:55.538 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@215efaaa]
[DEBUG] 2020-12-03 11:51:55.538 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-12-03 11:51:55.538 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-12-03 11:51:55.538 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-12-03 11:51:55.538 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-12-03 11:51:55.538 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-03 11:51:55.539 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-03 11:51:55.539 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-03 11:51:55.539 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-03 11:51:55.539 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.539 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.566 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-03 11:51:55.566 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-12-03 11:51:55.571 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e92396d]
[DEBUG] 2020-12-03 11:51:55.571 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-03 11:51:55.571 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:51:55.571 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@346c2621]
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-03 11:51:55.572 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d8705c6]
[DEBUG] 2020-12-03 11:51:55.580 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e70ab8]
[DEBUG] 2020-12-03 11:51:55.580 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-12-03 11:51:55.594 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-12-03 11:51:55.594 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5225aecf]
[DEBUG] 2020-12-03 11:51:55.595 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32f7dcf9]
[DEBUG] 2020-12-03 11:51:55.595 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-12-03 11:51:55.595 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-12-03 11:51:55.595 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-12-03 11:51:55.595 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-12-03 11:51:55.600 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-03 11:51:55.601 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-03 11:51:55.601 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-03 11:51:55.606 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-03 11:51:55.608 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.609 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.665 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-03 11:51:55.665 [http-nio-8080-exec-6] EntityLoader - Static select for entity hote.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-12-03 11:51:55.667 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-03 11:51:55.668 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-03 11:51:55.728 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@789c905]
[DEBUG] 2020-12-03 11:51:55.745 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6096cd51]
[DEBUG] 2020-12-03 11:51:55.747 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-03 11:51:55.747 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-03 11:51:55.748 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2315b3cf]
[DEBUG] 2020-12-03 11:51:55.748 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75bf0eb9]
[DEBUG] 2020-12-03 11:51:55.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-03 11:51:55.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-03 11:51:55.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:51:55.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-03 11:51:55.748 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.764 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.779 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.reservations)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:0>, path=[hote.entity.User.reservations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=[hote.entity.User.reservations].<elements>)
             - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:2>, path=[hote.entity.User.reservations].<elements>.roomReserveds)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:3>, path=[hote.entity.User.reservations].<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.reservations)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {guest_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-12-03 11:51:55.785 [http-nio-8080-exec-6] CollectionLoader - Static select for collection hote.entity.User.reservations: select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-03 11:51:55.786 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16f75025]
[DEBUG] 2020-12-03 11:51:55.786 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d9e3e3]
[DEBUG] 2020-12-03 11:51:55.789 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-03 11:51:55.789 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-03 11:51:55.789 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-03 11:51:55.791 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-03 11:51:55.791 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.792 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.805 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:0>, path=[hote.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:1>, path=[hote.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-12-03 11:51:55.810 [http-nio-8080-exec-6] CollectionLoader - Static select for collection hote.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-03 11:51:55.813 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21622821]
[DEBUG] 2020-12-03 11:51:55.813 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d381115]
[DEBUG] 2020-12-03 11:51:55.828 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-03 11:51:55.829 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-03 11:51:55.829 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservation
[DEBUG] 2020-12-03 11:51:55.829 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-03 11:51:55.829 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5311fe70]
[DEBUG] 2020-12-03 11:51:55.829 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-03 11:51:55.848 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-03 11:51:55.848 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-03 11:51:55.848 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-03 11:51:55.848 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-03 11:51:55.848 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-03 11:51:55.848 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.849 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.866 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Reservation.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Reservation.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Reservation.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:2>, path=[hote.entity.Reservation.roomReserveds].<elements>.room)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Reservation.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {reservat3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(room)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Room)
                      - SQL table alias mapping - room1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-12-03 11:51:55.870 [http-nio-8080-exec-6] CollectionLoader - Static select for collection hote.entity.Reservation.roomReserveds: select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-03 11:51:55.871 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4115a3d4]
[DEBUG] 2020-12-03 11:51:55.871 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35eb489e]
[DEBUG] 2020-12-03 11:51:55.871 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-03 11:51:55.880 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-03 11:51:55.881 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4aef76]
[DEBUG] 2020-12-03 11:51:55.881 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-03 11:51:55.881 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.881 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-03 11:51:55.881 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-03 11:51:55.881 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-03 11:51:55.881 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64098b3f]
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-03 11:51:55.882 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-03 11:51:55.886 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30dc9f8e]
[DEBUG] 2020-12-03 11:51:55.886 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44aca465]
[DEBUG] 2020-12-03 11:51:55.887 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-03 11:51:55.887 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-03 11:51:55.887 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : room
[DEBUG] 2020-12-03 11:51:55.887 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-03 11:51:55.887 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-03 11:51:55.909 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Room.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Room.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Room.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=[hote.entity.Room.roomReserveds].<elements>.reservation)
                - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:3>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user)
                   - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:4>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:5>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Room.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {room_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(reservation)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}

[DEBUG] 2020-12-03 11:51:55.909 [http-nio-8080-exec-6] CollectionLoader - Static select for collection hote.entity.Room.roomReserveds: select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-12-03 11:51:56.412 [http-nio-8080-exec-6] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-12-03 11:51:56.414 [http-nio-8080-exec-6] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-12-03 11:51:56.424 [http-nio-8080-exec-6] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-12-03 11:51:56.497 [http-nio-8080-exec-6] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-12-03 11:51:56.497 [http-nio-8080-exec-6] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-12-03 11:51:56.498 [http-nio-8080-exec-6] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-12-03 11:51:56.499 [http-nio-8080-exec-6] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-12-03 11:51:56.518 [http-nio-8080-exec-6] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4390d5a4
[DEBUG] 2020-12-03 11:51:56.531 [http-nio-8080-exec-6] SessionFactoryRegistry - Registering SessionFactory: a2608b20-fc2f-4a91-b613-75d28f61e589 (<unnamed>)
[DEBUG] 2020-12-03 11:51:56.532 [http-nio-8080-exec-6] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-12-03 11:51:57.330 [http-nio-8080-exec-6] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-12-03 11:51:57.855 [http-nio-8080-exec-6] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-12-03 11:51:58.020 [http-nio-8080-exec-6] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2a36a80c
[DEBUG] 2020-12-03 11:51:58.297 [http-nio-8080-exec-6] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-12-03 11:51:58.347 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:51:58.397 [http-nio-8080-exec-6] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'first_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-12-03 11:51:58.613 [http-nio-8080-exec-6] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-12-03 11:51:58.774 [http-nio-8080-exec-6] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-12-03 11:51:58.782 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-03 11:51:58.800 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-03 11:51:58.814 [http-nio-8080-exec-6] DotNode - getDataType() : first_name -> org.hibernate.type.StringType@377ca6d9
[DEBUG] 2020-12-03 11:51:58.815 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0.first_name -> user0_.first_name
[DEBUG] 2020-12-03 11:51:58.829 [http-nio-8080-exec-6] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-12-03 11:51:58.830 [http-nio-8080-exec-6] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.first_name user0_.id first_name ) ? ) ) )
[DEBUG] 2020-12-03 11:51:58.915 [http-nio-8080-exec-6] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-12-03 11:51:58.916 [http-nio-8080-exec-6] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-12-03 11:51:58.921 [http-nio-8080-exec-6] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.first_name' {propertyName=first_name,dereferenceType=PRIMITIVE,getPropertyPath=first_name,path=generatedAlias0.first_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'first_name' {originalText=first_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@377ca6d9}

[DEBUG] 2020-12-03 11:51:58.925 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:51:58.980 [http-nio-8080-exec-6] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-12-03 11:51:58.981 [http-nio-8080-exec-6] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.first_name=?
[DEBUG] 2020-12-03 11:51:58.981 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-03 11:51:59.347 [http-nio-8080-exec-6] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.first_name=?
[DEBUG] 2020-12-03 11:51:59.683 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-12-03 11:51:59.804 [http-nio-8080-exec-6] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-12-03 11:52:00.117 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-12-03 11:52:00.130 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-12-03 11:52:00.134 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.134 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:52:00.134 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.134 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-12-03 11:52:00.134 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.134 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:00.135 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.262 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:00.265 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.266 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-12-03 11:52:00.266 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.298 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-12-03 11:52:00.343 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:52:00.344 [http-nio-8080-exec-6] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-03 11:52:00.418 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:52:00.504 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:52:00.543 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:52:00.578 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Role#2]
[DEBUG] 2020-12-03 11:52:00.578 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-12-03 11:52:00.578 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.578 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-03 11:52:00.578 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.593 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = jpatel
[DEBUG] 2020-12-03 11:52:00.594 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.594 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Role#2]
[DEBUG] 2020-12-03 11:52:00.594 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:52:00.599 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:52:00.599 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:52:00.602 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:52:00.602 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:52:00.602 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:52:00.602 [http-nio-8080-exec-6] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-03 11:52:00.612 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:52:00.625 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:52:00.649 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:52:00.649 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:52:00.649 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-12-03 11:52:00.649 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.649 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:00.649 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.650 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-12-03 11:52:00.650 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.650 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-12-03 11:52:00.650 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.650 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-03 11:52:00.650 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.650 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:52:00.654 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:52:00.654 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:52:00.654 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:52:00.657 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:52:00.657 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:52:00.657 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:00.657 [http-nio-8080-exec-6] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-03 11:52:00.679 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:00.679 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:52:00.687 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:00.688 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:52:00.688 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-12-03 11:52:00.688 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.688 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-12-03 11:52:00.688 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.688 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-12-03 11:52:00.688 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:00.689 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:52:00.690 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:52:00.690 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:52:00.690 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:00.694 [http-nio-8080-exec-6] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-12-03 11:52:00.704 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:00.704 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:52:00.705 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:00.709 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:52:00.710 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:00.710 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:52:00.712 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:52:00.712 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-03 11:52:00.718 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:52:16.757 [http-nio-8080-exec-12] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:52:16.789 [http-nio-8080-exec-12] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:52:16.798 [http-nio-8080-exec-12] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-03 11:52:16.822 [http-nio-8080-exec-12] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:16.822 [http-nio-8080-exec-12] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:16.823 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:16.824 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.840 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-12-03 11:52:16.840 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.845 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-12-03 11:52:16.845 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.845 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-03 11:52:16.845 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.846 [http-nio-8080-exec-12] SQL - select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-12-03 11:52:16.870 [http-nio-8080-exec-12] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:52:16.870 [http-nio-8080-exec-12] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.871 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Room#1
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [hote.entity.Role#2]
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-03 11:52:16.872 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.873 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `userName` : value = jpatel
[DEBUG] 2020-12-03 11:52:16.873 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:16.873 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [hote.entity.Role#2]
[DEBUG] 2020-12-03 11:52:16.873 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:52:16.873 [http-nio-8080-exec-12] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:16.873 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:52:16.888 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:52:16.889 [http-nio-8080-exec-12] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:52:16.889 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:52:16.889 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:52:16.889 [http-nio-8080-exec-12] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:52:16.889 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:52:16.889 [http-nio-8080-exec-12] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:52:16.889 [http-nio-8080-exec-12] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-12-03 11:52:16.890 [http-nio-8080-exec-12] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:52:29.477 [http-nio-8080-exec-14] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-03 11:52:29.486 [http-nio-8080-exec-14] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:52:29.487 [http-nio-8080-exec-14] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-03 11:52:29.489 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:29.491 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:52:29.491 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.493 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-12-03 11:52:29.494 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:52:29.494 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-03 11:52:29.495 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.508 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-12-03 11:52:29.508 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:52:29.508 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-12-03 11:52:29.508 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.508 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-12-03 11:52:29.508 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.508 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-12-03 11:52:29.508 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.511 [http-nio-8080-exec-14] SQL - select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-12-03 11:52:29.521 [http-nio-8080-exec-14] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-03 11:52:29.521 [http-nio-8080-exec-14] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-03 11:52:29.522 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-12-03 11:52:29.528 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.530 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-12-03 11:52:29.531 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:52:29.531 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:29.531 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-03 11:52:29.531 [http-nio-8080-exec-14] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:52:29.531 [http-nio-8080-exec-14] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Room#1
[DEBUG] 2020-12-03 11:52:29.532 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-03 11:52:29.532 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [hote.entity.Role#2]
[DEBUG] 2020-12-03 11:52:29.532 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-12-03 11:52:29.532 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.532 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-03 11:52:29.532 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.533 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `userName` : value = jpatel
[DEBUG] 2020-12-03 11:52:29.533 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [hote.entity.Role#2]
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-12-03 11:52:29.534 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-03 11:52:29.535 [http-nio-8080-exec-14] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-03 11:52:29.535 [http-nio-8080-exec-14] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-12-03 11:52:29.535 [http-nio-8080-exec-14] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:52:29.567 [http-nio-8080-exec-14] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-12-03 11:52:29.568 [http-nio-8080-exec-14] TransactionImpl - begin
[DEBUG] 2020-12-03 11:52:29.670 [http-nio-8080-exec-14] TransactionImpl - committing
[DEBUG] 2020-12-03 11:52:29.672 [http-nio-8080-exec-14] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-12-03 11:52:29.673 [http-nio-8080-exec-14] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-12-03 11:52:29.697 [http-nio-8080-exec-14] Collections - Collection found: [hote.entity.User.reservations#1], was: [hote.entity.User.reservations#1] (initialized)
[DEBUG] 2020-12-03 11:52:29.697 [http-nio-8080-exec-14] Collections - Collection found: [hote.entity.User.roles#1], was: [hote.entity.User.roles#1] (initialized)
[DEBUG] 2020-12-03 11:52:29.697 [http-nio-8080-exec-14] Collections - Collection found: [hote.entity.Reservation.roomReserveds#1], was: [hote.entity.Reservation.roomReserveds#1] (initialized)
[DEBUG] 2020-12-03 11:52:29.704 [http-nio-8080-exec-14] AbstractFlushingEventListener - Flushed: 0 insertions, 4 updates, 0 deletions to 4 objects
[DEBUG] 2020-12-03 11:52:29.704 [http-nio-8080-exec-14] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
[DEBUG] 2020-12-03 11:52:29.712 [http-nio-8080-exec-14] EntityPrinter - Listing entities:
[DEBUG] 2020-12-03 11:52:29.719 [http-nio-8080-exec-14] EntityPrinter - hote.entity.Reservation{end_date=2020-10-22, roomReserveds=[hote.entity.RoomReserved#1], total_price=50.0, id=1, user=hote.entity.User#1, start_date=2019-10-21}
[DEBUG] 2020-12-03 11:52:29.719 [http-nio-8080-exec-14] EntityPrinter - hote.entity.User{address=1013 8th street, baraboo, wi, reservations=[hote.entity.Reservation#1], phone=6089638555, user_name=jpatel, roles=[hote.entity.Role#2], last_name=patel123, details=has reservasion, id=1, first_name=janak, email=janakaa@some.com, Password=jpatel}
[DEBUG] 2020-12-03 11:52:29.719 [http-nio-8080-exec-14] EntityPrinter - hote.entity.RoomReserved{price=60.0, reservation=hote.entity.Reservation#1, id=1, room=hote.entity.Room#1}
[DEBUG] 2020-12-03 11:52:29.719 [http-nio-8080-exec-14] EntityPrinter - hote.entity.Role{roleName=admin, id=2, userName=jpatel, user=hote.entity.User#1}
[DEBUG] 2020-12-03 11:52:29.754 [http-nio-8080-exec-14] SQL - update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-12-03 11:52:29.777 [http-nio-8080-exec-14] SQL - update reservation set end_date=?, start_date=?, total_price=?, guest_id=? where id=?
[DEBUG] 2020-12-03 11:52:29.799 [http-nio-8080-exec-14] SQL - update room_reserved set price=?, reservation_id=?, room_id=? where id=?
[DEBUG] 2020-12-03 11:52:29.806 [http-nio-8080-exec-14] SQL - update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2020-12-03 11:52:29.829 [http-nio-8080-exec-14] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-03 11:52:29.842 [http-nio-8080-exec-14] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
