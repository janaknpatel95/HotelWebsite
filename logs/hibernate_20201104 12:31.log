[DEBUG] 2020-11-04 12:31:43.222 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-11-04 12:31:43.233 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-11-04 12:31:43.249 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-11-04 12:31:43.460 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-11-04 12:31:43.463 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-11-04 12:31:43.894 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-11-04 12:31:44.663 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-11-04 12:31:44.690 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-11-04 12:31:44.691 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-11-04 12:31:44.723 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-11-04 12:31:44.821 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@430659a6
[DEBUG] 2020-11-04 12:31:44.821 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@430659a6
[DEBUG] 2020-11-04 12:31:44.822 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@430659a6
[DEBUG] 2020-11-04 12:31:44.822 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2feca049
[DEBUG] 2020-11-04 12:31:44.823 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@63a2469c
[DEBUG] 2020-11-04 12:31:44.823 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3ba5bc25
[DEBUG] 2020-11-04 12:31:44.825 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3b08ed39
[DEBUG] 2020-11-04 12:31:44.825 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3b08ed39
[DEBUG] 2020-11-04 12:31:44.825 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b08ed39
[DEBUG] 2020-11-04 12:31:44.826 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5ed3796a
[DEBUG] 2020-11-04 12:31:44.826 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5ed3796a
[DEBUG] 2020-11-04 12:31:44.826 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5ed3796a
[DEBUG] 2020-11-04 12:31:44.828 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@8a5b8a6
[DEBUG] 2020-11-04 12:31:44.828 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@8a5b8a6
[DEBUG] 2020-11-04 12:31:44.828 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8a5b8a6
[DEBUG] 2020-11-04 12:31:44.829 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2e7ae102
[DEBUG] 2020-11-04 12:31:44.829 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2e7ae102
[DEBUG] 2020-11-04 12:31:44.829 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e7ae102
[DEBUG] 2020-11-04 12:31:44.831 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@33c6f2b7
[DEBUG] 2020-11-04 12:31:44.831 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@33c6f2b7
[DEBUG] 2020-11-04 12:31:44.831 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@33c6f2b7
[DEBUG] 2020-11-04 12:31:44.832 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@65ceb4af
[DEBUG] 2020-11-04 12:31:44.833 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@65ceb4af
[DEBUG] 2020-11-04 12:31:44.833 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65ceb4af
[DEBUG] 2020-11-04 12:31:44.836 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@192e652b
[DEBUG] 2020-11-04 12:31:44.836 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@192e652b
[DEBUG] 2020-11-04 12:31:44.836 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@192e652b
[DEBUG] 2020-11-04 12:31:44.839 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4f452106
[DEBUG] 2020-11-04 12:31:44.840 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4f452106
[DEBUG] 2020-11-04 12:31:44.841 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@450f94ef
[DEBUG] 2020-11-04 12:31:44.841 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@450f94ef
[DEBUG] 2020-11-04 12:31:44.842 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5cf44229
[DEBUG] 2020-11-04 12:31:44.842 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5cf44229
[DEBUG] 2020-11-04 12:31:44.843 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e333ce
[DEBUG] 2020-11-04 12:31:44.845 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2270ff58
[DEBUG] 2020-11-04 12:31:44.846 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@605fe9fb
[DEBUG] 2020-11-04 12:31:44.847 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@605fe9fb
[DEBUG] 2020-11-04 12:31:44.848 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5157c82f
[DEBUG] 2020-11-04 12:31:44.848 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5157c82f
[DEBUG] 2020-11-04 12:31:44.851 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2f08e9d6
[DEBUG] 2020-11-04 12:31:44.851 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f08e9d6
[DEBUG] 2020-11-04 12:31:44.858 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3885a479
[DEBUG] 2020-11-04 12:31:44.861 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3885a479
[DEBUG] 2020-11-04 12:31:44.862 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@487ce0b2
[DEBUG] 2020-11-04 12:31:44.862 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@487ce0b2
[DEBUG] 2020-11-04 12:31:44.872 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3f116b88
[DEBUG] 2020-11-04 12:31:44.872 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3f116b88
[DEBUG] 2020-11-04 12:31:44.876 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1251c4bc
[DEBUG] 2020-11-04 12:31:44.876 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1251c4bc
[DEBUG] 2020-11-04 12:31:44.877 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76380f94
[DEBUG] 2020-11-04 12:31:44.877 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76380f94
[DEBUG] 2020-11-04 12:31:44.883 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54210de7
[DEBUG] 2020-11-04 12:31:44.884 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54210de7
[DEBUG] 2020-11-04 12:31:44.889 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4dd671f
[DEBUG] 2020-11-04 12:31:44.891 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dd671f
[DEBUG] 2020-11-04 12:31:44.893 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7468a702
[DEBUG] 2020-11-04 12:31:44.895 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7468a702
[DEBUG] 2020-11-04 12:31:44.896 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ac6709
[DEBUG] 2020-11-04 12:31:44.896 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ac6709
[DEBUG] 2020-11-04 12:31:44.896 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ac6709
[DEBUG] 2020-11-04 12:31:44.897 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d75fba9
[DEBUG] 2020-11-04 12:31:44.900 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@a5e5786
[DEBUG] 2020-11-04 12:31:44.900 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a5e5786
[DEBUG] 2020-11-04 12:31:44.900 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a5e5786
[DEBUG] 2020-11-04 12:31:44.907 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62b60f05
[DEBUG] 2020-11-04 12:31:44.909 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@316a1fa7
[DEBUG] 2020-11-04 12:31:44.910 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@316a1fa7
[DEBUG] 2020-11-04 12:31:44.911 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5e39377d
[DEBUG] 2020-11-04 12:31:44.911 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5e39377d
[DEBUG] 2020-11-04 12:31:44.914 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@500d09f8
[DEBUG] 2020-11-04 12:31:44.914 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@500d09f8
[DEBUG] 2020-11-04 12:31:44.915 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7f8d0407
[DEBUG] 2020-11-04 12:31:44.915 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7f8d0407
[DEBUG] 2020-11-04 12:31:44.916 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@65f18a57
[DEBUG] 2020-11-04 12:31:44.917 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@65f18a57
[DEBUG] 2020-11-04 12:31:44.918 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42b82d05
[DEBUG] 2020-11-04 12:31:44.922 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@c9b5a86
[DEBUG] 2020-11-04 12:31:44.922 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@c9b5a86
[DEBUG] 2020-11-04 12:31:44.922 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@c9b5a86
[DEBUG] 2020-11-04 12:31:44.924 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79646ce1
[DEBUG] 2020-11-04 12:31:44.924 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79646ce1
[DEBUG] 2020-11-04 12:31:44.924 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79646ce1
[DEBUG] 2020-11-04 12:31:44.925 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a927ff5
[DEBUG] 2020-11-04 12:31:44.927 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@c7cd207
[DEBUG] 2020-11-04 12:31:44.928 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3be1fc00
[DEBUG] 2020-11-04 12:31:44.928 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3be1fc00
[DEBUG] 2020-11-04 12:31:44.928 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3be1fc00
[DEBUG] 2020-11-04 12:31:44.929 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@651ebb8e
[DEBUG] 2020-11-04 12:31:44.929 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@651ebb8e
[DEBUG] 2020-11-04 12:31:44.934 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@651ebb8e
[DEBUG] 2020-11-04 12:31:44.936 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1d1af8c0
[DEBUG] 2020-11-04 12:31:44.937 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@576d7c0c
[DEBUG] 2020-11-04 12:31:44.939 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@a66ed7e
[DEBUG] 2020-11-04 12:31:44.939 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a66ed7e
[DEBUG] 2020-11-04 12:31:44.939 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67ce0753
[DEBUG] 2020-11-04 12:31:44.940 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1c71f52e
[DEBUG] 2020-11-04 12:31:44.941 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c71f52e
[DEBUG] 2020-11-04 12:31:44.942 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3c373ca1
[DEBUG] 2020-11-04 12:31:44.942 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c373ca1
[DEBUG] 2020-11-04 12:31:44.942 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8a5200d
[DEBUG] 2020-11-04 12:31:44.943 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fcb43c1
[DEBUG] 2020-11-04 12:31:44.945 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@61efdeb0
[DEBUG] 2020-11-04 12:31:44.950 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1a28473b
[DEBUG] 2020-11-04 12:31:44.951 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a28473b
[DEBUG] 2020-11-04 12:31:44.951 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@703b28b7
[DEBUG] 2020-11-04 12:31:44.952 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c601ca4
[DEBUG] 2020-11-04 12:31:44.952 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3907ad4b
[DEBUG] 2020-11-04 12:31:44.952 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4509bad
[DEBUG] 2020-11-04 12:31:44.956 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d077500
[DEBUG] 2020-11-04 12:31:44.956 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@319ec938
[DEBUG] 2020-11-04 12:31:44.956 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@357757b5
[DEBUG] 2020-11-04 12:31:44.956 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@357a3f45
[DEBUG] 2020-11-04 12:31:44.992 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-11-04 12:31:44.992 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-11-04 12:31:44.997 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-04 12:31:44.997 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-04 12:31:44.999 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-11-04 12:31:45.000 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-11-04 12:31:45.002 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-11-04 12:31:45.004 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-04 12:31:45.005 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-11-04 12:31:45.005 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-11-04 12:31:45.006 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-11-04 12:31:45.006 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-11-04 12:31:45.006 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-04 12:31:45.007 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-11-04 12:31:45.021 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotel
[INFO ] 2020-11-04 12:31:45.021 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-11-04 12:31:45.021 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-11-04 12:31:45.392 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-11-04 12:31:45.890 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-11-04 12:31:45.895 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-11-04 12:31:45.895 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-11-04 12:31:46.005 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-11-04 12:31:46.070 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-11-04 12:31:46.143 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-11-04 12:31:46.246 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-11-04 12:31:46.254 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@277b80cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d65abd6]
[DEBUG] 2020-11-04 12:31:46.350 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-11-04 12:31:46.425 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-04 12:31:46.433 [http-nio-8080-exec-1] EntityBinder - Import with entity name User
[DEBUG] 2020-11-04 12:31:46.438 [http-nio-8080-exec-1] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-11-04 12:31:46.477 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.481 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-04 12:31:46.491 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-11-04 12:31:46.496 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-04 12:31:46.498 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2020-11-04 12:31:46.504 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-04 12:31:46.506 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] PropertyBinder - Building property first_name
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-11-04 12:31:46.507 [http-nio-8080-exec-1] PropertyBinder - Building property last_name
[DEBUG] 2020-11-04 12:31:46.508 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-04 12:31:46.509 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.510 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.526 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.526 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.527 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-04 12:31:46.529 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-04 12:31:46.533 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-04 12:31:46.533 [http-nio-8080-exec-1] CollectionBinder - Collection role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:31:46.538 [http-nio-8080-exec-1] PropertyBinder - Building property orders
[DEBUG] 2020-11-04 12:31:46.539 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.540 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-11-04 12:31:46.540 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-11-04 12:31:46.540 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-11-04 12:31:46.540 [http-nio-8080-exec-1] PropertyBinder - Building property user_name
[DEBUG] 2020-11-04 12:31:46.541 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: hote.entity.Order
[DEBUG] 2020-11-04 12:31:46.541 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-04 12:31:46.541 [http-nio-8080-exec-1] EntityBinder - Import with entity name Order
[DEBUG] 2020-11-04 12:31:46.541 [http-nio-8080-exec-1] EntityBinder - Bind entity hote.entity.Order on table orders
[DEBUG] 2020-11-04 12:31:46.546 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.546 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-04 12:31:46.546 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:id]
[DEBUG] 2020-11-04 12:31:46.546 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-04 12:31:46.546 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2020-11-04 12:31:46.546 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(order_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-04 12:31:46.547 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.547 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-11-04 12:31:46.547 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:description]
[DEBUG] 2020-11-04 12:31:46.548 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-11-04 12:31:46.548 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2020-11-04 12:31:46.548 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-04 12:31:46.548 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:31:46.551 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-11-04 12:31:46.556 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-04 12:31:46.556 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-11-04 12:31:46.556 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-11-04 12:31:46.557 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-11-04 12:31:46.557 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-04 12:31:46.557 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-11-04 12:31:46.561 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-11-04 12:31:46.563 [http-nio-8080-exec-1] PrimaryKey - Forcing column [order_id] to be non-null as it is part of the primary key for table [orders]
[DEBUG] 2020-11-04 12:31:46.565 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: hote.entity.User.orders
[DEBUG] 2020-11-04 12:31:46.566 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: hote.entity.User.orders through a foreign key
[DEBUG] 2020-11-04 12:31:46.566 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: hote.entity.User.orders -> orders
[DEBUG] 2020-11-04 12:31:46.567 [http-nio-8080-exec-1] TableBinder - Retrieving property hote.entity.Order.user
[DEBUG] 2020-11-04 12:31:46.567 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Order
[DEBUG] 2020-11-04 12:31:46.567 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-04 12:31:46.576 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-04 12:31:46.623 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-11-04 12:31:46.626 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2020-11-04 12:31:46.628 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-11-04 12:31:46.628 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2020-11-04 12:31:46.628 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-11-04 12:31:46.628 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-11-04 12:31:46.628 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-11-04 12:31:46.628 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-11-04 12:31:46.629 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2020-11-04 12:31:46.629 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2020-11-04 12:31:46.629 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2020-11-04 12:31:46.629 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2020-11-04 12:31:46.629 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2020-11-04 12:31:46.629 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-11-04 12:31:46.630 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2020-11-04 12:31:46.631 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-11-04 12:31:46.633 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2020-11-04 12:31:46.636 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2020-11-04 12:31:46.796 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-11-04 12:31:46.879 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-11-04 12:31:46.882 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.8, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-51-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotel, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4bdb468b, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/hotel, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-11-04 12:31:46.940 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-04 12:31:46.940 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-04 12:31:46.969 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-11-04 12:31:46.971 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-11-04 12:31:46.974 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-11-04 12:31:46.984 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-11-04 12:31:46.984 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@277b80cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61d1c9c2]
[DEBUG] 2020-11-04 12:31:47.066 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-04 12:31:47.066 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-04 12:31:47.106 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-04 12:31:47.106 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-04 12:31:47.488 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-11-04 12:31:47.488 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-11-04 12:31:47.489 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-11-04 12:31:47.489 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-11-04 12:31:47.536 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.orders
[DEBUG] 2020-11-04 12:31:47.536 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update orders set user_id=? where order_id=?
[DEBUG] 2020-11-04 12:31:47.536 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update orders set  where order_id=?
[DEBUG] 2020-11-04 12:31:47.536 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update orders set user_id=null where user_id=? and order_id=?
[DEBUG] 2020-11-04 12:31:47.536 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update orders set user_id=null where user_id=?
[DEBUG] 2020-11-04 12:31:47.541 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-11-04 12:31:47.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-11-04 12:31:47.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select user_.id, user_.first_name as first_na2_1_, user_.last_name as last_nam3_1_, user_.user_name as user_nam4_1_ from user user_ where user_.id=?
[DEBUG] 2020-11-04 12:31:47.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-04 12:31:47.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2020-11-04 12:31:47.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-11-04 12:31:47.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-11-04 12:31:47.576 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@596fe339]
[DEBUG] 2020-11-04 12:31:47.577 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-04 12:31:47.577 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-04 12:31:47.577 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-11-04 12:31:47.581 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19f7c13]
[DEBUG] 2020-11-04 12:31:47.584 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41de0e70]
[DEBUG] 2020-11-04 12:31:47.591 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-11-04 12:31:47.591 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-11-04 12:31:47.591 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-11-04 12:31:47.592 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-04 12:31:47.592 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:31:47.643 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:31:47.682 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - order_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {order_id1_0_2_}

[DEBUG] 2020-11-04 12:31:47.697 [http-nio-8080-exec-1] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.order_id as order_id1_0_1_, orders1_.order_id as order_id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:31:47.697 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7907ab68]
[DEBUG] 2020-11-04 12:31:47.697 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-04 12:31:47.697 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-04 12:31:47.697 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-11-04 12:31:47.697 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55f8d0a5]
[DEBUG] 2020-11-04 12:31:47.697 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f9391f9]
[DEBUG] 2020-11-04 12:31:47.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-11-04 12:31:47.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-11-04 12:31:47.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-11-04 12:31:47.701 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-04 12:31:47.701 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:31:47.701 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:31:47.701 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - order_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {order_id1_0_2_}

[DEBUG] 2020-11-04 12:31:47.701 [http-nio-8080-exec-1] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.order_id as order_id1_0_1_, orders1_.order_id as order_id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:31:47.743 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.order_id as order_id1_0_3_, orders1_.order_id as order_id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.order_id as order_id1_0_3_, orders1_.order_id as order_id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: hote.entity.Order
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select order_id from orders where order_id =?
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select order_.order_id, order_.description as descript2_0_, order_.user_id as user_id3_0_ from orders order_ where order_.order_id=?
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into orders (description, user_id, order_id) values (?, ?, ?)
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update orders set description=?, user_id=? where order_id=?
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from orders where order_id=?
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e7d5566]
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-04 12:31:47.744 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51281693]
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] EntityLoader - Static select for entity hote.entity.Order [NONE]: select order0_.order_id as order_id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.order_id=?
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a420af3]
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-04 12:31:47.745 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@538c2503]
[DEBUG] 2020-11-04 12:31:47.746 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-04 12:31:47.746 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-04 12:31:47.746 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-11-04 12:31:47.746 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-11-04 12:31:47.746 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-04 12:31:47.746 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:31:47.749 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:31:47.749 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-04 12:31:47.751 [http-nio-8080-exec-1] EntityLoader - Static select for entity hote.entity.Order [READ]: select order0_.order_id as order_id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.order_id=?
[DEBUG] 2020-11-04 12:31:47.755 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity hote.entity.Order: select order0_.order_id as order_id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.order_id=?
[DEBUG] 2020-11-04 12:31:47.756 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Order: select order0_.order_id as order_id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.order_id=?
[DEBUG] 2020-11-04 12:31:47.766 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dd1d470]
[DEBUG] 2020-11-04 12:31:47.766 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea0271d]
[DEBUG] 2020-11-04 12:31:47.767 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-04 12:31:47.767 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-04 12:31:47.767 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-04 12:31:47.767 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:31:47.773 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:31:47.776 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.orders)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:0>, path=[hote.entity.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:1>, path=[hote.entity.User.orders].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - order_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {order_id1_0_1_}

[DEBUG] 2020-11-04 12:31:47.776 [http-nio-8080-exec-1] CollectionLoader - Static select for collection hote.entity.User.orders: select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:31:47.926 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-11-04 12:31:47.927 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-11-04 12:31:47.928 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-11-04 12:31:47.965 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-11-04 12:31:47.965 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-11-04 12:31:47.966 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-11-04 12:31:47.966 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-11-04 12:31:47.976 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3ecb3bca
[DEBUG] 2020-11-04 12:31:47.978 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 23a3cd48-6110-4923-add3-a88f43f4b8f6 (<unnamed>)
[DEBUG] 2020-11-04 12:31:47.987 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-11-04 12:31:48.240 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-11-04 12:31:48.295 [http-nio-8080-exec-1] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.order_id as order_id1_0_1_, orders1_.order_id as order_id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:31:48.376 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:31:48.378 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-04 12:31:48.430 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:31:48.463 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:31:48.463 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-04 12:31:48.466 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:31:48.466 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-11-04 12:31:48.468 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-04 12:31:48.469 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:31:48.473 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-11-04 12:31:48.474 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-04 12:31:48.474 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:31:48.483 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-04 12:31:48.484 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-11-04 12:31:48.484 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.484 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-11-04 12:31:48.484 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.484 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:31:48.484 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.484 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-11-04 12:31:48.484 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.488 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-04 12:31:48.488 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:31:48.488 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:31:48.488 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.488 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:31:48.488 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.488 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:31:48.503 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:31:48.504 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:31:48.504 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.504 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:31:48.504 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:31:48.504 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:31:48.504 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:31:48.513 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:31:48.513 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:31:48.516 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:31:48.516 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-11-04 12:31:48.516 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
