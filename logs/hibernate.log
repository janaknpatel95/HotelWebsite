[DEBUG] 2020-11-30 11:41:41.658 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-11-30 11:41:41.687 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-11-30 11:41:41.705 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-11-30 11:41:42.622 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-11-30 11:41:42.669 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-11-30 11:41:44.319 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-11-30 11:41:46.101 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-11-30 11:41:46.219 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-11-30 11:41:46.231 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-11-30 11:41:46.386 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-11-30 11:41:46.513 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@331ff3ac
[DEBUG] 2020-11-30 11:41:46.514 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@331ff3ac
[DEBUG] 2020-11-30 11:41:46.515 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@331ff3ac
[DEBUG] 2020-11-30 11:41:46.518 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35d60381
[DEBUG] 2020-11-30 11:41:46.520 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d7d8613
[DEBUG] 2020-11-30 11:41:46.524 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@abad89c
[DEBUG] 2020-11-30 11:41:46.537 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2a47597
[DEBUG] 2020-11-30 11:41:46.538 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2a47597
[DEBUG] 2020-11-30 11:41:46.539 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a47597
[DEBUG] 2020-11-30 11:41:46.555 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@21ae657b
[DEBUG] 2020-11-30 11:41:46.556 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@21ae657b
[DEBUG] 2020-11-30 11:41:46.556 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21ae657b
[DEBUG] 2020-11-30 11:41:46.566 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28157173
[DEBUG] 2020-11-30 11:41:46.566 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28157173
[DEBUG] 2020-11-30 11:41:46.566 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@28157173
[DEBUG] 2020-11-30 11:41:46.568 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7741d346
[DEBUG] 2020-11-30 11:41:46.568 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7741d346
[DEBUG] 2020-11-30 11:41:46.570 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7741d346
[DEBUG] 2020-11-30 11:41:46.573 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e33b52e
[DEBUG] 2020-11-30 11:41:46.573 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e33b52e
[DEBUG] 2020-11-30 11:41:46.573 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e33b52e
[DEBUG] 2020-11-30 11:41:46.574 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@38f981b6
[DEBUG] 2020-11-30 11:41:46.574 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@38f981b6
[DEBUG] 2020-11-30 11:41:46.574 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38f981b6
[DEBUG] 2020-11-30 11:41:46.580 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f8d9767
[DEBUG] 2020-11-30 11:41:46.581 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f8d9767
[DEBUG] 2020-11-30 11:41:46.581 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5f8d9767
[DEBUG] 2020-11-30 11:41:46.582 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@536b71b4
[DEBUG] 2020-11-30 11:41:46.584 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@536b71b4
[DEBUG] 2020-11-30 11:41:46.587 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@60cb1ed6
[DEBUG] 2020-11-30 11:41:46.587 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@60cb1ed6
[DEBUG] 2020-11-30 11:41:46.589 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3d8d17a3
[DEBUG] 2020-11-30 11:41:46.589 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d8d17a3
[DEBUG] 2020-11-30 11:41:46.592 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49433c98
[DEBUG] 2020-11-30 11:41:46.594 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47829d6d
[DEBUG] 2020-11-30 11:41:46.599 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@59fc6d05
[DEBUG] 2020-11-30 11:41:46.600 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@59fc6d05
[DEBUG] 2020-11-30 11:41:46.602 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4391a2d8
[DEBUG] 2020-11-30 11:41:46.602 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4391a2d8
[DEBUG] 2020-11-30 11:41:46.624 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7730ef88
[DEBUG] 2020-11-30 11:41:46.629 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7730ef88
[DEBUG] 2020-11-30 11:41:46.640 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33feda48
[DEBUG] 2020-11-30 11:41:46.642 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33feda48
[DEBUG] 2020-11-30 11:41:46.653 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7b2bf745
[DEBUG] 2020-11-30 11:41:46.654 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7b2bf745
[DEBUG] 2020-11-30 11:41:46.663 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@740b6628
[DEBUG] 2020-11-30 11:41:46.666 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@740b6628
[DEBUG] 2020-11-30 11:41:46.675 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d8cf9ac
[DEBUG] 2020-11-30 11:41:46.676 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d8cf9ac
[DEBUG] 2020-11-30 11:41:46.686 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@750ed637
[DEBUG] 2020-11-30 11:41:46.687 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@750ed637
[DEBUG] 2020-11-30 11:41:46.701 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28279a49
[DEBUG] 2020-11-30 11:41:46.704 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28279a49
[DEBUG] 2020-11-30 11:41:46.711 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@390037e7
[DEBUG] 2020-11-30 11:41:46.712 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@390037e7
[DEBUG] 2020-11-30 11:41:46.714 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7d4d8579
[DEBUG] 2020-11-30 11:41:46.719 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7d4d8579
[DEBUG] 2020-11-30 11:41:46.725 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d66e944
[DEBUG] 2020-11-30 11:41:46.770 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d66e944
[DEBUG] 2020-11-30 11:41:46.771 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d66e944
[DEBUG] 2020-11-30 11:41:46.773 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45e617c4
[DEBUG] 2020-11-30 11:41:46.779 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2574a9e3
[DEBUG] 2020-11-30 11:41:46.780 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2574a9e3
[DEBUG] 2020-11-30 11:41:46.780 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2574a9e3
[DEBUG] 2020-11-30 11:41:46.781 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@11d86b9d
[DEBUG] 2020-11-30 11:41:46.783 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5403799b
[DEBUG] 2020-11-30 11:41:46.784 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5403799b
[DEBUG] 2020-11-30 11:41:46.787 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3946075
[DEBUG] 2020-11-30 11:41:46.788 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3946075
[DEBUG] 2020-11-30 11:41:46.790 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e01b133
[DEBUG] 2020-11-30 11:41:46.790 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e01b133
[DEBUG] 2020-11-30 11:41:46.791 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@33d60b7e
[DEBUG] 2020-11-30 11:41:46.796 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@33d60b7e
[DEBUG] 2020-11-30 11:41:46.797 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@59a2388e
[DEBUG] 2020-11-30 11:41:46.797 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@59a2388e
[DEBUG] 2020-11-30 11:41:46.798 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6518fdfd
[DEBUG] 2020-11-30 11:41:46.806 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@47b33e07
[DEBUG] 2020-11-30 11:41:46.807 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@47b33e07
[DEBUG] 2020-11-30 11:41:46.808 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@47b33e07
[DEBUG] 2020-11-30 11:41:46.811 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@626d2016
[DEBUG] 2020-11-30 11:41:46.811 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@626d2016
[DEBUG] 2020-11-30 11:41:46.811 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@626d2016
[DEBUG] 2020-11-30 11:41:46.823 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@581b1c08
[DEBUG] 2020-11-30 11:41:46.824 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5809fa26
[DEBUG] 2020-11-30 11:41:46.826 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3e546734
[DEBUG] 2020-11-30 11:41:46.829 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e546734
[DEBUG] 2020-11-30 11:41:46.830 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3e546734
[DEBUG] 2020-11-30 11:41:46.839 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c61eda5
[DEBUG] 2020-11-30 11:41:46.840 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c61eda5
[DEBUG] 2020-11-30 11:41:46.842 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c61eda5
[DEBUG] 2020-11-30 11:41:46.848 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5ae15
[DEBUG] 2020-11-30 11:41:46.852 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7f0b93b4
[DEBUG] 2020-11-30 11:41:46.857 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3e046e39
[DEBUG] 2020-11-30 11:41:46.858 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e046e39
[DEBUG] 2020-11-30 11:41:46.867 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f0a2638
[DEBUG] 2020-11-30 11:41:46.870 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@317890ea
[DEBUG] 2020-11-30 11:41:46.870 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@317890ea
[DEBUG] 2020-11-30 11:41:46.877 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2b736fee
[DEBUG] 2020-11-30 11:41:46.878 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b736fee
[DEBUG] 2020-11-30 11:41:46.879 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@75d366c2
[DEBUG] 2020-11-30 11:41:46.880 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2047981
[DEBUG] 2020-11-30 11:41:46.891 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1b3ab4f9
[DEBUG] 2020-11-30 11:41:46.903 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@50110971
[DEBUG] 2020-11-30 11:41:46.906 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@50110971
[DEBUG] 2020-11-30 11:41:46.910 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6909f6be
[DEBUG] 2020-11-30 11:41:46.910 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b5ab2f2
[DEBUG] 2020-11-30 11:41:46.912 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@315c081
[DEBUG] 2020-11-30 11:41:46.912 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6b2dd3df
[DEBUG] 2020-11-30 11:41:46.913 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4db77402
[DEBUG] 2020-11-30 11:41:46.913 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73c48264
[DEBUG] 2020-11-30 11:41:46.913 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ef85555
[DEBUG] 2020-11-30 11:41:46.918 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5bcec67e
[DEBUG] 2020-11-30 11:41:47.032 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-11-30 11:41:47.033 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-11-30 11:41:47.037 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 11:41:47.039 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 11:41:47.044 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-11-30 11:41:47.052 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-11-30 11:41:47.062 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-11-30 11:41:47.073 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 11:41:47.075 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-11-30 11:41:47.076 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-11-30 11:41:47.084 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-11-30 11:41:47.087 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-11-30 11:41:47.088 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 11:41:47.098 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-11-30 11:41:47.131 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotelFull_test
[INFO ] 2020-11-30 11:41:47.133 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-11-30 11:41:47.133 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-11-30 11:41:48.173 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-11-30 11:41:49.141 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-11-30 11:41:49.147 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-11-30 11:41:49.148 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-11-30 11:41:49.517 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-11-30 11:41:49.670 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-11-30 11:41:50.127 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-11-30 11:41:50.620 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-11-30 11:41:50.797 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75e80a97] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5b8853]
[DEBUG] 2020-11-30 11:41:51.063 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-11-30 11:41:51.129 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:41:51.145 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-11-30 11:41:51.154 [main] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-11-30 11:41:51.270 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.278 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:41:51.280 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-11-30 11:41:51.284 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:41:51.287 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:41:51.291 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:41:51.293 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.293 [main] PropertyBinder - MetadataSourceProcessor property Password with lazy=false
[DEBUG] 2020-11-30 11:41:51.293 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:Password]
[DEBUG] 2020-11-30 11:41:51.294 [main] SimpleValueBinder - building SimpleValue for Password
[DEBUG] 2020-11-30 11:41:51.294 [main] PropertyBinder - Building property Password
[DEBUG] 2020-11-30 11:41:51.294 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.295 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-11-30 11:41:51.295 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:address]
[DEBUG] 2020-11-30 11:41:51.295 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-11-30 11:41:51.296 [main] PropertyBinder - Building property address
[DEBUG] 2020-11-30 11:41:51.296 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=details, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.296 [main] PropertyBinder - MetadataSourceProcessor property details with lazy=false
[DEBUG] 2020-11-30 11:41:51.300 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:details]
[DEBUG] 2020-11-30 11:41:51.303 [main] SimpleValueBinder - building SimpleValue for details
[DEBUG] 2020-11-30 11:41:51.303 [main] PropertyBinder - Building property details
[DEBUG] 2020-11-30 11:41:51.306 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.306 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-11-30 11:41:51.307 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:email]
[DEBUG] 2020-11-30 11:41:51.307 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-11-30 11:41:51.307 [main] PropertyBinder - Building property email
[DEBUG] 2020-11-30 11:41:51.310 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.310 [main] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-11-30 11:41:51.310 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-11-30 11:41:51.311 [main] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-11-30 11:41:51.311 [main] PropertyBinder - Building property first_name
[DEBUG] 2020-11-30 11:41:51.313 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.313 [main] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-11-30 11:41:51.314 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-11-30 11:41:51.314 [main] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-11-30 11:41:51.314 [main] PropertyBinder - Building property last_name
[DEBUG] 2020-11-30 11:41:51.314 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.314 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-11-30 11:41:51.314 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:phone]
[DEBUG] 2020-11-30 11:41:51.314 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-11-30 11:41:51.314 [main] PropertyBinder - Building property phone
[DEBUG] 2020-11-30 11:41:51.322 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:41:51.322 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.354 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.400 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.401 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.402 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:41:51.404 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:41:51.404 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:41:51.405 [main] CollectionBinder - Collection role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:41:51.414 [main] PropertyBinder - Building property reservations
[DEBUG] 2020-11-30 11:41:51.416 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:41:51.416 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.416 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.417 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.417 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.417 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:41:51.418 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:41:51.420 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:41:51.420 [main] CollectionBinder - Collection role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:41:51.420 [main] PropertyBinder - Building property roles
[DEBUG] 2020-11-30 11:41:51.421 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.421 [main] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-11-30 11:41:51.421 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-11-30 11:41:51.421 [main] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-11-30 11:41:51.422 [main] PropertyBinder - Building property user_name
[DEBUG] 2020-11-30 11:41:51.430 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Role
[DEBUG] 2020-11-30 11:41:51.433 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:41:51.434 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-11-30 11:41:51.434 [main] EntityBinder - Bind entity hote.entity.Role on table role
[DEBUG] 2020-11-30 11:41:51.460 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.460 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:41:51.460 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:id]
[DEBUG] 2020-11-30 11:41:51.462 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:41:51.462 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:41:51.463 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:41:51.463 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.466 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-11-30 11:41:51.466 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:roleName]
[DEBUG] 2020-11-30 11:41:51.466 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-11-30 11:41:51.466 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-11-30 11:41:51.468 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:41:51.471 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.491 [main] PropertyBinder - Building property user
[DEBUG] 2020-11-30 11:41:51.492 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.492 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-11-30 11:41:51.492 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:userName]
[DEBUG] 2020-11-30 11:41:51.493 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-11-30 11:41:51.493 [main] PropertyBinder - Building property userName
[DEBUG] 2020-11-30 11:41:51.493 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:41:51.493 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:41:51.493 [main] EntityBinder - Import with entity name Reservation
[DEBUG] 2020-11-30 11:41:51.494 [main] EntityBinder - Bind entity hote.entity.Reservation on table reservation
[DEBUG] 2020-11-30 11:41:51.497 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.497 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:41:51.497 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:id]
[DEBUG] 2020-11-30 11:41:51.497 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:41:51.498 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:41:51.498 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:41:51.498 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.499 [main] PropertyBinder - MetadataSourceProcessor property end_date with lazy=false
[DEBUG] 2020-11-30 11:41:51.500 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:end_date]
[DEBUG] 2020-11-30 11:41:51.501 [main] SimpleValueBinder - building SimpleValue for end_date
[DEBUG] 2020-11-30 11:41:51.502 [main] PropertyBinder - Building property end_date
[DEBUG] 2020-11-30 11:41:51.503 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:41:51.503 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.503 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.503 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.504 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.504 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:41:51.504 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:41:51.504 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:41:51.507 [main] CollectionBinder - Collection role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:51.507 [main] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-11-30 11:41:51.508 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=start_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.509 [main] PropertyBinder - MetadataSourceProcessor property start_date with lazy=false
[DEBUG] 2020-11-30 11:41:51.509 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:start_date]
[DEBUG] 2020-11-30 11:41:51.509 [main] SimpleValueBinder - building SimpleValue for start_date
[DEBUG] 2020-11-30 11:41:51.509 [main] PropertyBinder - Building property start_date
[DEBUG] 2020-11-30 11:41:51.509 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=total_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.509 [main] PropertyBinder - MetadataSourceProcessor property total_price with lazy=false
[DEBUG] 2020-11-30 11:41:51.509 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:total_price]
[DEBUG] 2020-11-30 11:41:51.509 [main] SimpleValueBinder - building SimpleValue for total_price
[DEBUG] 2020-11-30 11:41:51.510 [main] PropertyBinder - Building property total_price
[DEBUG] 2020-11-30 11:41:51.510 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='guest_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:41:51.510 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.511 [main] PropertyBinder - Building property user
[DEBUG] 2020-11-30 11:41:51.512 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Room
[DEBUG] 2020-11-30 11:41:51.512 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:41:51.512 [main] EntityBinder - Import with entity name Room
[DEBUG] 2020-11-30 11:41:51.512 [main] EntityBinder - Bind entity hote.entity.Room on table room
[DEBUG] 2020-11-30 11:41:51.523 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.523 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:41:51.523 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:id]
[DEBUG] 2020-11-30 11:41:51.523 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:41:51.523 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:41:51.523 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:41:51.524 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=Avalable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.524 [main] PropertyBinder - MetadataSourceProcessor property Avalable with lazy=false
[DEBUG] 2020-11-30 11:41:51.525 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:Avalable]
[DEBUG] 2020-11-30 11:41:51.525 [main] SimpleValueBinder - building SimpleValue for Avalable
[DEBUG] 2020-11-30 11:41:51.531 [main] PropertyBinder - Building property Avalable
[DEBUG] 2020-11-30 11:41:51.532 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=current_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.532 [main] PropertyBinder - MetadataSourceProcessor property current_price with lazy=false
[DEBUG] 2020-11-30 11:41:51.534 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:current_price]
[DEBUG] 2020-11-30 11:41:51.534 [main] SimpleValueBinder - building SimpleValue for current_price
[DEBUG] 2020-11-30 11:41:51.535 [main] PropertyBinder - Building property current_price
[DEBUG] 2020-11-30 11:41:51.535 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.535 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-11-30 11:41:51.535 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:description]
[DEBUG] 2020-11-30 11:41:51.536 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-11-30 11:41:51.536 [main] PropertyBinder - Building property description
[DEBUG] 2020-11-30 11:41:51.536 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:41:51.536 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.538 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.538 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.539 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.539 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:41:51.539 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:41:51.541 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:41:51.541 [main] CollectionBinder - Collection role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:41:51.541 [main] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-11-30 11:41:51.542 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=room_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.543 [main] PropertyBinder - MetadataSourceProcessor property room_name with lazy=false
[DEBUG] 2020-11-30 11:41:51.544 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:room_name]
[DEBUG] 2020-11-30 11:41:51.547 [main] SimpleValueBinder - building SimpleValue for room_name
[DEBUG] 2020-11-30 11:41:51.548 [main] PropertyBinder - Building property room_name
[DEBUG] 2020-11-30 11:41:51.548 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:41:51.549 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:41:51.549 [main] EntityBinder - Import with entity name Roomreserved
[DEBUG] 2020-11-30 11:41:51.550 [main] EntityBinder - Bind entity hote.entity.RoomReserved on table room_reserved
[DEBUG] 2020-11-30 11:41:51.553 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.554 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:41:51.554 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:id]
[DEBUG] 2020-11-30 11:41:51.554 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:41:51.556 [main] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:41:51.556 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:41:51.556 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.557 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-11-30 11:41:51.557 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:price]
[DEBUG] 2020-11-30 11:41:51.557 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-11-30 11:41:51.557 [main] PropertyBinder - Building property price
[DEBUG] 2020-11-30 11:41:51.557 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservation_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:41:51.562 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=reservation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.562 [main] PropertyBinder - Building property reservation
[DEBUG] 2020-11-30 11:41:51.562 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='room_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:41:51.562 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=room, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:41:51.563 [main] PropertyBinder - Building property room
[DEBUG] 2020-11-30 11:41:51.564 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:41:51.564 [main] SimpleValueBinder - Starting fillSimpleValue for Password
[DEBUG] 2020-11-30 11:41:51.564 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-11-30 11:41:51.566 [main] SimpleValueBinder - Starting fillSimpleValue for details
[DEBUG] 2020-11-30 11:41:51.566 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-11-30 11:41:51.566 [main] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-11-30 11:41:51.566 [main] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-11-30 11:41:51.567 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-11-30 11:41:51.567 [main] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-11-30 11:41:51.567 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:41:51.570 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-11-30 11:41:51.570 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-11-30 11:41:51.570 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:41:51.570 [main] SimpleValueBinder - Starting fillSimpleValue for end_date
[DEBUG] 2020-11-30 11:41:51.571 [main] SimpleValueBinder - Starting fillSimpleValue for start_date
[DEBUG] 2020-11-30 11:41:51.571 [main] SimpleValueBinder - Starting fillSimpleValue for total_price
[DEBUG] 2020-11-30 11:41:51.571 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:41:51.573 [main] SimpleValueBinder - Starting fillSimpleValue for Avalable
[DEBUG] 2020-11-30 11:41:51.574 [main] SimpleValueBinder - Starting fillSimpleValue for current_price
[DEBUG] 2020-11-30 11:41:51.575 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-11-30 11:41:51.575 [main] SimpleValueBinder - Starting fillSimpleValue for room_name
[DEBUG] 2020-11-30 11:41:51.578 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:41:51.578 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-11-30 11:41:51.595 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-11-30 11:41:51.596 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-11-30 11:41:51.598 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [reservation]
[DEBUG] 2020-11-30 11:41:51.598 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room]
[DEBUG] 2020-11-30 11:41:51.598 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room_reserved]
[DEBUG] 2020-11-30 11:41:51.598 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:41:51.601 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.reservations through a foreign key
[DEBUG] 2020-11-30 11:41:51.602 [main] CollectionBinder - Mapping collection: hote.entity.User.reservations -> reservation
[DEBUG] 2020-11-30 11:41:51.604 [main] TableBinder - Retrieving property hote.entity.Reservation.user
[DEBUG] 2020-11-30 11:41:51.604 [main] CollectionSecondPass - Mapped collection key: guest_id, one-to-many: hote.entity.Reservation
[DEBUG] 2020-11-30 11:41:51.604 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.roles
[DEBUG] 2020-11-30 11:41:51.604 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.roles through a foreign key
[DEBUG] 2020-11-30 11:41:51.605 [main] CollectionBinder - Mapping collection: hote.entity.User.roles -> role
[DEBUG] 2020-11-30 11:41:51.605 [main] TableBinder - Retrieving property hote.entity.Role.user
[DEBUG] 2020-11-30 11:41:51.605 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Role
[DEBUG] 2020-11-30 11:41:51.606 [main] CollectionSecondPass - Second pass for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:51.606 [main] CollectionBinder - Binding a OneToMany: hote.entity.Reservation.roomReserveds through a foreign key
[DEBUG] 2020-11-30 11:41:51.609 [main] CollectionBinder - Mapping collection: hote.entity.Reservation.roomReserveds -> room_reserved
[DEBUG] 2020-11-30 11:41:51.612 [main] TableBinder - Retrieving property hote.entity.RoomReserved.reservation
[DEBUG] 2020-11-30 11:41:51.612 [main] CollectionSecondPass - Mapped collection key: reservation_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:41:51.612 [main] CollectionSecondPass - Second pass for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:41:51.613 [main] CollectionBinder - Binding a OneToMany: hote.entity.Room.roomReserveds through a foreign key
[DEBUG] 2020-11-30 11:41:51.613 [main] CollectionBinder - Mapping collection: hote.entity.Room.roomReserveds -> room_reserved
[DEBUG] 2020-11-30 11:41:51.615 [main] TableBinder - Retrieving property hote.entity.RoomReserved.room
[DEBUG] 2020-11-30 11:41:51.616 [main] CollectionSecondPass - Mapped collection key: room_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:41:51.619 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:41:51.621 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:41:51.621 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:41:51.621 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-11-30 11:41:51.630 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:41:51.630 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:41:51.630 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:41:51.631 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-11-30 11:41:51.869 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-11-30 11:41:51.893 [main] Settings - SessionFactory name : null
[DEBUG] 2020-11-30 11:41:51.894 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-11-30 11:41:51.894 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-11-30 11:41:51.894 [main] Settings - Statistics: disabled
[DEBUG] 2020-11-30 11:41:51.905 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-11-30 11:41:51.905 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-11-30 11:41:51.905 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-11-30 11:41:51.905 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-11-30 11:41:51.905 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-11-30 11:41:51.906 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-11-30 11:41:51.906 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-11-30 11:41:51.906 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-11-30 11:41:51.906 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-11-30 11:41:51.906 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-11-30 11:41:51.910 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-11-30 11:41:51.910 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-11-30 11:41:51.910 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-11-30 11:41:51.910 [main] Settings - Named query checking : enabled
[DEBUG] 2020-11-30 11:41:51.911 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-11-30 11:41:51.911 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-11-30 11:41:51.911 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-11-30 11:41:51.911 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-11-30 11:41:51.911 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-11-30 11:41:51.911 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-11-30 11:41:51.913 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-11-30 11:41:51.913 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-11-30 11:41:51.913 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-11-30 11:41:51.913 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-11-30 11:41:51.914 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-11-30 11:41:52.484 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-11-30 11:41:52.733 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-11-30 11:41:52.734 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=/home/student/IdeaProjects/HotelWebsie/target/surefire/surefirebooter765841321616729526.jar /home/student/IdeaProjects/HotelWebsie/target/surefire/surefire13592704313492762956tmp /home/student/IdeaProjects/HotelWebsie/target/surefire/surefire_03392353050446080968tmp, jdk.debug=release, surefire.test.class.path=/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, basedir=/home/student/IdeaProjects/HotelWebsie, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/student/IdeaProjects/HotelWebsie/target/surefire/surefirebooter765841321616729526.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotelFull_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, localRepository=/home/student/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, idea.version=2020.2.4, java.version=11.0.8, user.dir=/home/student/IdeaProjects/HotelWebsie, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@283a8ad6, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hotelFull_test, java.class.version=55.0}
[DEBUG] 2020-11-30 11:41:52.970 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-11-30 11:41:52.970 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-11-30 11:41:52.973 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-11-30 11:41:52.978 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75e80a97] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6658f08a]
[DEBUG] 2020-11-30 11:41:53.288 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:41:53.288 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:41:53.757 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:41:53.758 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:41:56.778 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:41:56.779 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:41:56.791 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:41:56.791 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:41:56.954 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:41:56.964 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:41:56.965 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:41:56.965 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:41:57.128 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:41:57.128 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:41:57.133 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:41:57.133 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:41:57.492 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:41:57.494 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:41:57.495 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:41:57.495 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:41:57.637 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:41:57.637 [main] AbstractCollectionPersister -  Row insert: update reservation set guest_id=? where id=?
[DEBUG] 2020-11-30 11:41:57.637 [main] AbstractCollectionPersister -  Row update: update reservation set  where id=?
[DEBUG] 2020-11-30 11:41:57.637 [main] AbstractCollectionPersister -  Row delete: update reservation set guest_id=null where guest_id=? and id=?
[DEBUG] 2020-11-30 11:41:57.638 [main] AbstractCollectionPersister -  One-shot delete: update reservation set guest_id=null where guest_id=?
[DEBUG] 2020-11-30 11:41:57.638 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.roles
[DEBUG] 2020-11-30 11:41:57.638 [main] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-11-30 11:41:57.638 [main] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-11-30 11:41:57.638 [main] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-11-30 11:41:57.639 [main] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-11-30 11:41:57.639 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:57.639 [main] AbstractCollectionPersister -  Row insert: update room_reserved set reservation_id=? where id=?
[DEBUG] 2020-11-30 11:41:57.639 [main] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-11-30 11:41:57.647 [main] AbstractCollectionPersister -  Row delete: update room_reserved set reservation_id=null where reservation_id=? and id=?
[DEBUG] 2020-11-30 11:41:57.647 [main] AbstractCollectionPersister -  One-shot delete: update room_reserved set reservation_id=null where reservation_id=?
[DEBUG] 2020-11-30 11:41:57.647 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:41:57.647 [main] AbstractCollectionPersister -  Row insert: update room_reserved set room_id=? where id=?
[DEBUG] 2020-11-30 11:41:57.648 [main] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-11-30 11:41:57.648 [main] AbstractCollectionPersister -  Row delete: update room_reserved set room_id=null where room_id=? and id=?
[DEBUG] 2020-11-30 11:41:57.648 [main] AbstractCollectionPersister -  One-shot delete: update room_reserved set room_id=null where room_id=?
[DEBUG] 2020-11-30 11:41:57.674 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Reservation
[DEBUG] 2020-11-30 11:41:57.674 [main] AbstractEntityPersister -  Version select: select id from reservation where id =?
[DEBUG] 2020-11-30 11:41:57.674 [main] AbstractEntityPersister -  Snapshot select: select reservatio_.id, reservatio_.end_date as end_date2_0_, reservatio_.start_date as start_da3_0_, reservatio_.total_price as total_pr4_0_, reservatio_.guest_id as guest_id5_0_ from reservation reservatio_ where reservatio_.id=?
[DEBUG] 2020-11-30 11:41:57.675 [main] AbstractEntityPersister -  Insert 0: insert into reservation (end_date, start_date, total_price, guest_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:41:57.675 [main] AbstractEntityPersister -  Update 0: update reservation set end_date=?, start_date=?, total_price=?, guest_id=? where id=?
[DEBUG] 2020-11-30 11:41:57.675 [main] AbstractEntityPersister -  Delete 0: delete from reservation where id=?
[DEBUG] 2020-11-30 11:41:57.675 [main] AbstractEntityPersister -  Identity insert: insert into reservation (end_date, start_date, total_price, guest_id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:41:57.963 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7827d7b]
[DEBUG] 2020-11-30 11:41:57.965 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:41:57.965 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:41:58.012 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11015ca0]
[DEBUG] 2020-11-30 11:41:58.016 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62883f8a]
[DEBUG] 2020-11-30 11:41:58.018 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:41:58.018 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.018 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.030 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:41:58.037 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8f0f98]
[DEBUG] 2020-11-30 11:41:58.038 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-11-30 11:41:58.041 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-11-30 11:41:58.041 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-11-30 11:41:58.042 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.042 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.042 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-11-30 11:41:58.043 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:41:58.043 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:41:58.043 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:41:58.044 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c41a177]
[DEBUG] 2020-11-30 11:41:58.044 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:41:58.044 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:41:58.048 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:41:58.048 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:41:58.048 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:41:58.048 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:41:58.048 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:41:58.049 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:41:58.049 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-11-30 11:41:58.049 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:41:58.049 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43ab0659]
[DEBUG] 2020-11-30 11:41:58.049 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@644947ee]
[DEBUG] 2020-11-30 11:41:58.055 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 11:41:58.055 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 11:41:58.055 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 11:41:58.055 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-11-30 11:41:58.055 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:41:58.058 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.144 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.216 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:41:58.242 [main] EntityLoader - Static select for entity hote.entity.Reservation [NONE]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:41:58.246 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e47aab]
[DEBUG] 2020-11-30 11:41:58.246 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:41:58.246 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:41:58.246 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@adc8683]
[DEBUG] 2020-11-30 11:41:58.246 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eac65db]
[DEBUG] 2020-11-30 11:41:58.247 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:41:58.247 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.247 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.247 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:41:58.248 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16029e2f]
[DEBUG] 2020-11-30 11:41:58.248 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-11-30 11:41:58.248 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-11-30 11:41:58.248 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-11-30 11:41:58.248 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.249 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.249 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-11-30 11:41:58.249 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:41:58.249 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:41:58.249 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:41:58.252 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f1413c]
[DEBUG] 2020-11-30 11:41:58.253 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:41:58.253 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:41:58.253 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:41:58.254 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:41:58.254 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:41:58.254 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:41:58.254 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:41:58.254 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:41:58.254 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-11-30 11:41:58.255 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:41:58.255 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@186295cc]
[DEBUG] 2020-11-30 11:41:58.255 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e85dcb2]
[DEBUG] 2020-11-30 11:41:58.255 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 11:41:58.255 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 11:41:58.255 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 11:41:58.255 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-11-30 11:41:58.255 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:41:58.259 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.259 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.267 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:41:58.270 [main] EntityLoader - Static select for entity hote.entity.Reservation [READ]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:41:58.439 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:41:58.439 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:41:58.440 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Room
[DEBUG] 2020-11-30 11:41:58.440 [main] AbstractEntityPersister -  Version select: select id from room where id =?
[DEBUG] 2020-11-30 11:41:58.440 [main] AbstractEntityPersister -  Snapshot select: select room_.id, room_.Avalable as Avalable2_2_, room_.current_price as current_3_2_, room_.description as descript4_2_, room_.room_name as room_nam5_2_ from room room_ where room_.id=?
[DEBUG] 2020-11-30 11:41:58.440 [main] AbstractEntityPersister -  Insert 0: insert into room (Avalable, current_price, description, room_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:41:58.440 [main] AbstractEntityPersister -  Update 0: update room set Avalable=?, current_price=?, description=?, room_name=? where id=?
[DEBUG] 2020-11-30 11:41:58.440 [main] AbstractEntityPersister -  Delete 0: delete from room where id=?
[DEBUG] 2020-11-30 11:41:58.440 [main] AbstractEntityPersister -  Identity insert: insert into room (Avalable, current_price, description, room_name) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:41:58.440 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@578b2dec]
[DEBUG] 2020-11-30 11:41:58.440 [main] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-11-30 11:41:58.440 [main] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-11-30 11:41:58.440 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 11:41:58.440 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:41:58.440 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39f4a7c4]
[DEBUG] 2020-11-30 11:41:58.440 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111fe921]
[DEBUG] 2020-11-30 11:41:58.440 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:41:58.440 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.441 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54387873]
[DEBUG] 2020-11-30 11:41:58.441 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-11-30 11:41:58.441 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.441 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.441 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-11-30 11:41:58.441 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-11-30 11:41:58.441 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-11-30 11:41:58.441 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd5689d]
[DEBUG] 2020-11-30 11:41:58.441 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:41:58.441 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-11-30 11:41:58.446 [main] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-11-30 11:41:58.446 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.447 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.474 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:41:58.474 [main] EntityLoader - Static select for entity hote.entity.Room [NONE]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-11-30 11:41:58.474 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e3321e]
[DEBUG] 2020-11-30 11:41:58.475 [main] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-11-30 11:41:58.475 [main] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-11-30 11:41:58.475 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 11:41:58.475 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:41:58.477 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d9af731]
[DEBUG] 2020-11-30 11:41:58.477 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39afe59f]
[DEBUG] 2020-11-30 11:41:58.477 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:41:58.478 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.478 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43756cb]
[DEBUG] 2020-11-30 11:41:58.478 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-11-30 11:41:58.478 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.478 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.478 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-11-30 11:41:58.478 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-11-30 11:41:58.478 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-11-30 11:41:58.478 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e96cb04]
[DEBUG] 2020-11-30 11:41:58.480 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:41:58.480 [main] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-11-30 11:41:58.480 [main] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-11-30 11:41:58.480 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.481 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.488 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:41:58.496 [main] EntityLoader - Static select for entity hote.entity.Room [READ]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-11-30 11:41:58.519 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-11-30 11:41:58.521 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-11-30 11:41:58.521 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:41:58.521 [main] AbstractEntityPersister -  Version select: select id from room_reserved where id =?
[DEBUG] 2020-11-30 11:41:58.522 [main] AbstractEntityPersister -  Snapshot select: select roomreserv_.id, roomreserv_.price as price2_3_, roomreserv_.reservation_id as reservat3_3_, roomreserv_.room_id as room_id4_3_ from room_reserved roomreserv_ where roomreserv_.id=?
[DEBUG] 2020-11-30 11:41:58.522 [main] AbstractEntityPersister -  Insert 0: insert into room_reserved (price, reservation_id, room_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:41:58.522 [main] AbstractEntityPersister -  Update 0: update room_reserved set price=?, reservation_id=?, room_id=? where id=?
[DEBUG] 2020-11-30 11:41:58.522 [main] AbstractEntityPersister -  Delete 0: delete from room_reserved where id=?
[DEBUG] 2020-11-30 11:41:58.522 [main] AbstractEntityPersister -  Identity insert: insert into room_reserved (price, reservation_id, room_id) values (?, ?, ?)
[DEBUG] 2020-11-30 11:41:58.522 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70ecf57b]
[DEBUG] 2020-11-30 11:41:58.527 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:41:58.527 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:41:58.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a336906]
[DEBUG] 2020-11-30 11:41:58.532 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:41:58.532 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.532 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.532 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:41:58.538 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:41:58.538 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:41:58.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d539b9]
[DEBUG] 2020-11-30 11:41:58.538 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:41:58.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:41:58.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:41:58.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:41:58.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:41:58.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:41:58.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:41:58.539 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:41:58.539 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:41:58.540 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:41:58.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@210c1b9d]
[DEBUG] 2020-11-30 11:41:58.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69bc4024]
[DEBUG] 2020-11-30 11:41:58.540 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:41:58.540 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:41:58.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3578a45b]
[DEBUG] 2020-11-30 11:41:58.543 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:41:58.544 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:41:58.544 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:41:58.544 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.544 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.544 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:41:58.544 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.544 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.545 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-11-30 11:41:58.545 [main] EntityLoader - Static select for entity hote.entity.RoomReserved [NONE]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:41:58.545 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65e05005]
[DEBUG] 2020-11-30 11:41:58.545 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:41:58.545 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:41:58.559 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efcba00]
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:41:58.560 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@569a26ab]
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:41:58.560 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:41:58.560 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77ce8bc5]
[DEBUG] 2020-11-30 11:41:58.560 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fcc5f49]
[DEBUG] 2020-11-30 11:41:58.561 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:41:58.561 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:41:58.561 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e48b65]
[DEBUG] 2020-11-30 11:41:58.561 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:41:58.561 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:41:58.561 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:41:58.561 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.567 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.567 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:41:58.568 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.568 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.569 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-11-30 11:41:58.569 [main] EntityLoader - Static select for entity hote.entity.RoomReserved [READ]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:41:58.569 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:41:58.570 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:41:58.570 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-11-30 11:41:58.570 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-11-30 11:41:58.570 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.Password as Password2_4_, user_.address as address3_4_, user_.details as details4_4_, user_.email as email5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.phone as phone8_4_, user_.user_name as user_nam9_4_ from user user_ where user_.id=?
[DEBUG] 2020-11-30 11:41:58.577 [main] AbstractEntityPersister -  Insert 0: insert into user (Password, address, details, email, first_name, last_name, phone, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:41:58.578 [main] AbstractEntityPersister -  Update 0: update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-11-30 11:41:58.578 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-11-30 11:41:58.578 [main] AbstractEntityPersister -  Identity insert: insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:41:58.578 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f4d2294]
[DEBUG] 2020-11-30 11:41:58.584 [main] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-11-30 11:41:58.584 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-11-30 11:41:58.584 [main] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-11-30 11:41:58.584 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 11:41:58.584 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-30 11:41:58.591 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-30 11:41:58.591 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-11-30 11:41:58.592 [main] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-11-30 11:41:58.592 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e0516a3]
[DEBUG] 2020-11-30 11:41:58.593 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a4ea4e]
[DEBUG] 2020-11-30 11:41:58.601 [main] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-11-30 11:41:58.602 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-11-30 11:41:58.602 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20184ade]
[DEBUG] 2020-11-30 11:41:58.602 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35fb3209]
[DEBUG] 2020-11-30 11:41:58.603 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-11-30 11:41:58.603 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.609 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.610 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-11-30 11:41:58.612 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0325d0]
[DEBUG] 2020-11-30 11:41:58.612 [main] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-11-30 11:41:58.612 [main] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-11-30 11:41:58.612 [main] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-11-30 11:41:58.614 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-11-30 11:41:58.619 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 11:41:58.621 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70439c3]
[DEBUG] 2020-11-30 11:41:58.621 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a33316]
[DEBUG] 2020-11-30 11:41:58.622 [main] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 11:41:58.622 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 11:41:58.622 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 11:41:58.622 [main] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-11-30 11:41:58.622 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-30 11:41:58.622 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.625 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.635 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:41:58.635 [main] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:41:58.635 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51cca357]
[DEBUG] 2020-11-30 11:41:58.635 [main] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-11-30 11:41:58.635 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-11-30 11:41:58.635 [main] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-11-30 11:41:58.635 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 11:41:58.635 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-30 11:41:58.635 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-30 11:41:58.635 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-11-30 11:41:58.635 [main] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-11-30 11:41:58.636 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@416c8bb5]
[DEBUG] 2020-11-30 11:41:58.636 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340b4f07]
[DEBUG] 2020-11-30 11:41:58.636 [main] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-11-30 11:41:58.636 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-11-30 11:41:58.636 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fb44737]
[DEBUG] 2020-11-30 11:41:58.636 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11295cb1]
[DEBUG] 2020-11-30 11:41:58.648 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-11-30 11:41:58.649 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.649 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:41:58.649 [main] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-11-30 11:41:58.649 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f50dd0]
[DEBUG] 2020-11-30 11:41:58.649 [main] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-11-30 11:41:58.649 [main] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-11-30 11:41:58.649 [main] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-11-30 11:41:58.649 [main] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-11-30 11:41:58.650 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 11:41:58.650 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3620eab]
[DEBUG] 2020-11-30 11:41:58.650 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ef1d58]
[DEBUG] 2020-11-30 11:41:58.650 [main] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 11:41:58.650 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 11:41:58.650 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 11:41:58.650 [main] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-11-30 11:41:58.650 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-30 11:41:58.650 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.651 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.660 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:41:58.663 [main] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:41:58.669 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-11-30 11:41:58.670 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-11-30 11:41:58.670 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Role
[DEBUG] 2020-11-30 11:41:58.670 [main] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-11-30 11:41:58.674 [main] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_1_, role_.user_id as user_id4_1_, role_.user_name as user_nam3_1_ from role role_ where role_.id=?
[DEBUG] 2020-11-30 11:41:58.674 [main] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:41:58.674 [main] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2020-11-30 11:41:58.674 [main] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-11-30 11:41:58.675 [main] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2020-11-30 11:41:58.675 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@457692cb]
[DEBUG] 2020-11-30 11:41:58.675 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:41:58.675 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:41:58.675 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d297d4d]
[DEBUG] 2020-11-30 11:41:58.675 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:41:58.675 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:41:58.676 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cc56b32]
[DEBUG] 2020-11-30 11:41:58.676 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43fe2008]
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-11-30 11:41:58.676 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d0f548a]
[DEBUG] 2020-11-30 11:41:58.676 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc3df43]
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-11-30 11:41:58.676 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-11-30 11:41:58.677 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-11-30 11:41:58.677 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:41:58.677 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 11:41:58.677 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:41:58.677 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:41:58.677 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.685 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.702 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:41:58.703 [main] EntityLoader - Static select for entity hote.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-11-30 11:41:58.704 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15130002]
[DEBUG] 2020-11-30 11:41:58.704 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:41:58.704 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:41:58.708 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@900649e]
[DEBUG] 2020-11-30 11:41:58.708 [main] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:41:58.709 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:41:58.709 [main] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:41:58.709 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:41:58.709 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:41:58.711 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:41:58.716 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:41:58.716 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:41:58.716 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@526893f]
[DEBUG] 2020-11-30 11:41:58.725 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3de45b6c]
[DEBUG] 2020-11-30 11:41:58.727 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-11-30 11:41:58.727 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-11-30 11:41:58.727 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ab9d160]
[DEBUG] 2020-11-30 11:41:58.728 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5599dc60]
[DEBUG] 2020-11-30 11:41:58.728 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-11-30 11:41:58.728 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-11-30 11:41:58.733 [main] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-11-30 11:41:58.733 [main] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-11-30 11:41:58.734 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:41:58.736 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 11:41:58.737 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:41:58.737 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:41:58.737 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.744 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.769 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:41:58.769 [main] EntityLoader - Static select for entity hote.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-11-30 11:41:58.775 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 11:41:58.779 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 11:41:58.830 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64ed18ec]
[DEBUG] 2020-11-30 11:41:58.830 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dfcf85a]
[DEBUG] 2020-11-30 11:41:58.830 [main] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:41:58.830 [main] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:41:58.831 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69f69078]
[DEBUG] 2020-11-30 11:41:58.831 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13b29b34]
[DEBUG] 2020-11-30 11:41:58.831 [main] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:41:58.831 [main] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:41:58.831 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:41:58.831 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 11:41:58.839 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.847 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.863 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.reservations)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:0>, path=[hote.entity.User.reservations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=[hote.entity.User.reservations].<elements>)
             - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:2>, path=[hote.entity.User.reservations].<elements>.roomReserveds)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:3>, path=[hote.entity.User.reservations].<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.reservations)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {guest_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-11-30 11:41:58.864 [main] CollectionLoader - Static select for collection hote.entity.User.reservations: select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:41:58.864 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c1e40d9]
[DEBUG] 2020-11-30 11:41:58.865 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b50c21]
[DEBUG] 2020-11-30 11:41:58.869 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:41:58.869 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:41:58.869 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 11:41:58.869 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:41:58.870 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.870 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.877 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:0>, path=[hote.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:1>, path=[hote.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-30 11:41:58.878 [main] CollectionLoader - Static select for collection hote.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:41:58.878 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@432a6a69]
[DEBUG] 2020-11-30 11:41:58.880 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f52a229]
[DEBUG] 2020-11-30 11:41:58.881 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:41:58.881 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:41:58.881 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation
[DEBUG] 2020-11-30 11:41:58.881 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:41:58.881 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@151a6598]
[DEBUG] 2020-11-30 11:41:58.881 [main] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:41:58.881 [main] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:41:58.881 [main] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:41:58.882 [main] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.893 [main] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:41:58.894 [main] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:41:58.894 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.919 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.920 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Reservation.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Reservation.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Reservation.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:2>, path=[hote.entity.Reservation.roomReserveds].<elements>.room)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Reservation.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {reservat3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(room)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Room)
                      - SQL table alias mapping - room1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-11-30 11:41:58.920 [main] CollectionLoader - Static select for collection hote.entity.Reservation.roomReserveds: select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:41:58.921 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c3d9e28]
[DEBUG] 2020-11-30 11:41:58.921 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a1cb94]
[DEBUG] 2020-11-30 11:41:58.921 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:41:58.921 [main] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:41:58.921 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47c81e89]
[DEBUG] 2020-11-30 11:41:58.928 [main] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:41:58.928 [main] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.928 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:41:58.928 [main] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:41:58.928 [main] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:41:58.928 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:41:58.929 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@563ada5]
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:41:58.929 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:41:58.929 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@156ff70f]
[DEBUG] 2020-11-30 11:41:58.929 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5a2d5]
[DEBUG] 2020-11-30 11:41:58.930 [main] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:41:58.930 [main] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:41:58.930 [main] MetamodelGraphWalker - Property path deemed to be circular : room
[DEBUG] 2020-11-30 11:41:58.930 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:41:58.939 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:41:58.941 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Room.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Room.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Room.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=[hote.entity.Room.roomReserveds].<elements>.reservation)
                - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:3>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user)
                   - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:4>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:5>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Room.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {room_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(reservation)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}

[DEBUG] 2020-11-30 11:41:58.945 [main] CollectionLoader - Static select for collection hote.entity.Room.roomReserveds: select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:41:59.439 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-11-30 11:41:59.440 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-11-30 11:41:59.442 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-11-30 11:41:59.470 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-11-30 11:41:59.470 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-11-30 11:41:59.474 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-11-30 11:41:59.474 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-11-30 11:41:59.507 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@319b1c77
[DEBUG] 2020-11-30 11:41:59.528 [main] SessionFactoryRegistry - Registering SessionFactory: e3a244ad-fb5b-4084-bea6-d6864b81dc0d (<unnamed>)
[DEBUG] 2020-11-30 11:41:59.528 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-11-30 11:42:02.368 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-11-30 11:42:02.837 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:42:03.834 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:03.869 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 11:42:05.639 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:05.813 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:05.951 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:06.039 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:42:06.074 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.075 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:42:06.075 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.075 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:42:06.075 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.075 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:42:06.076 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.076 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:42:06.076 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.076 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:42:06.076 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.076 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:42:06.081 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.089 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:06.090 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.090 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:06.094 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.095 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:42:06.095 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:06.252 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:06.264 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:06.265 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:06.348 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:06.349 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:06.349 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:06.350 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:06.389 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:06.395 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:06.402 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-11-30 11:42:06.402 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:07.269 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-11-30 11:42:07.270 [main] TransactionImpl - begin
[DEBUG] 2020-11-30 11:42:08.748 [main] TransactionImpl - committing
[DEBUG] 2020-11-30 11:42:08.760 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-11-30 11:42:08.771 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-11-30 11:42:08.795 [main] Collections - Collection dereferenced: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:08.796 [main] Collections - Collection dereferenced: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:08.806 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-11-30 11:42:08.806 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 2 removals to 2 collections
[DEBUG] 2020-11-30 11:42:08.808 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-11-30 11:42:08.822 [main] EntityPrinter - hote.entity.User{address=1014 8th street, baraboo, wi, reservations=[], phone=6049638522, user_name=jpatel1, roles=[], last_name=ptel, details=has reseasion, id=2, first_name=jackk, email=jate@some.com, Password=jpatel2}
[DEBUG] 2020-11-30 11:42:09.064 [main] SQL - delete from user where id=?
[DEBUG] 2020-11-30 11:42:09.687 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:09.721 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:09.759 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-11-30 11:42:09.766 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:42:10.118 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:10.120 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:10.175 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:10.175 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:10.186 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-11-30 11:42:10.187 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:16.359 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-11-30 11:42:16.388 [main] TransactionImpl - begin
[DEBUG] 2020-11-30 11:42:18.287 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-11-30 11:42:18.398 [main] SQL - insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:42:19.181 [main] IdentifierGeneratorHelper - Natively generated identity: 45
[DEBUG] 2020-11-30 11:42:19.198 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:19.422 [main] TransactionImpl - committing
[DEBUG] 2020-11-30 11:42:19.516 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-11-30 11:42:19.516 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-11-30 11:42:19.536 [main] Collections - Collection found: [hote.entity.User.reservations#45], was: [<unreferenced>] (initialized)
[DEBUG] 2020-11-30 11:42:19.536 [main] Collections - Collection found: [hote.entity.User.roles#45], was: [<unreferenced>] (initialized)
[DEBUG] 2020-11-30 11:42:19.590 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-11-30 11:42:19.593 [main] AbstractFlushingEventListener - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2020-11-30 11:42:19.593 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-11-30 11:42:19.846 [main] EntityPrinter - hote.entity.User{address=101 8th st, reservations=[], phone=60800000000, user_name=jackrobert, roles=[], last_name=robertson, details=hi, id=45, first_name=jack, email=some@some.com, Password=null}
[DEBUG] 2020-11-30 11:42:20.227 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:20.269 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:21.660 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:42:22.755 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:22.913 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 11:42:23.237 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#45]
[DEBUG] 2020-11-30 11:42:23.290 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#45]
[DEBUG] 2020-11-30 11:42:23.353 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#45]
[DEBUG] 2020-11-30 11:42:23.353 [main] TwoPhaseLoad - Processing attribute `Password` : value = null
[DEBUG] 2020-11-30 11:42:23.381 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.416 [main] TwoPhaseLoad - Processing attribute `address` : value = 101 8th st
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Processing attribute `details` : value = hi
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Processing attribute `email` : value = some@some.com
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jack
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Processing attribute `last_name` : value = robertson
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Processing attribute `phone` : value = 60800000000
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:23.417 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.418 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:23.418 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.418 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jackrobert
[DEBUG] 2020-11-30 11:42:23.418 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:23.583 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#45]
[DEBUG] 2020-11-30 11:42:23.583 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:23.595 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:23.596 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#45]
[DEBUG] 2020-11-30 11:42:23.596 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:23.596 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:23.596 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#45]
[DEBUG] 2020-11-30 11:42:23.596 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:23.673 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:23.743 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#45
[DEBUG] 2020-11-30 11:42:23.743 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:30.870 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-11-30 11:42:31.200 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@70421a08
[DEBUG] 2020-11-30 11:42:32.112 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-11-30 11:42:32.272 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:42:32.931 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'hote'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-11-30 11:42:33.438 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-11-30 11:42:33.526 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-11-30 11:42:33.530 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:42:33.546 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-11-30 11:42:33.578 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-11-30 11:42:33.904 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-11-30 11:42:33.920 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-11-30 11:42:34.002 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}

[DEBUG] 2020-11-30 11:42:34.002 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:42:34.070 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-11-30 11:42:34.070 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_
[DEBUG] 2020-11-30 11:42:34.070 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:42:34.171 [main] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_
[DEBUG] 2020-11-30 11:42:34.957 [main] Loader - Result set row: 0
[DEBUG] 2020-11-30 11:42:34.968 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-30 11:42:35.073 [main] Loader - Result set row: 1
[DEBUG] 2020-11-30 11:42:35.074 [main] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:35.162 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-30 11:42:35.163 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-11-30 11:42:35.163 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.163 [main] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:42:35.163 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.163 [main] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-11-30 11:42:35.163 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.163 [main] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-11-30 11:42:35.199 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.199 [main] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-11-30 11:42:35.199 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.199 [main] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-11-30 11:42:35.200 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.238 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-11-30 11:42:35.238 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.238 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:35.238 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.238 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:35.238 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.282 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-11-30 11:42:35.283 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.283 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:42:35.326 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.327 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:42:35.327 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.327 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:42:35.327 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.327 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:42:35.332 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.332 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:35.332 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.338 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:35.338 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.338 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:42:35.376 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:35.377 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:35.573 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:35.617 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:42:35.678 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:35.779 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:35.779 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:35.780 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:35.780 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:35.780 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:35.781 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:35.781 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:42:36.105 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:36.106 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:36.127 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:36.127 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:36.127 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:36.129 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:36.129 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:42:36.130 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:42:36.163 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:42:36.165 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:36.166 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:42:36.166 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:36.167 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:36.167 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:36.168 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:42:36.168 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:42:36.347 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:42:36.349 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:36.804 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:42:36.824 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:42:36.825 [main] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-11-30 11:42:36.827 [main] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:36.827 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:36.827 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:36.827 [main] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-11-30 11:42:36.827 [main] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:36.827 [main] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-11-30 11:42:36.872 [main] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:36.872 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 11:42:36.873 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:36.875 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:42:36.875 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:36.876 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:42:36.876 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:36.877 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:36.877 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:36.878 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:36.878 [main] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:42:36.957 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:36.958 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:37.039 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:37.161 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:42:37.161 [main] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-11-30 11:42:37.162 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:37.162 [main] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-11-30 11:42:37.162 [main] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:37.162 [main] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-11-30 11:42:37.162 [main] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:37.255 [main] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:42:37.256 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:42:37.256 [main] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-11-30 11:42:37.256 [main] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:37.257 [main] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-11-30 11:42:37.258 [main] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:37.258 [main] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-11-30 11:42:37.258 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:37.258 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:37.258 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:37.261 [main] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-11-30 11:42:37.261 [main] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:37.261 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:42:37.262 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:37.269 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:37.269 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:37.271 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:37.272 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:37.361 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:37.362 [main] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:42:37.423 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:37.424 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:37.459 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:37.460 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:42:37.460 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:37.460 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:42:37.460 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:37.460 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:37.643 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:39.768 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-11-30 11:42:39.823 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-11-30 11:42:39.872 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:42:39.892 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'last_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-11-30 11:42:39.892 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-11-30 11:42:39.893 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-11-30 11:42:39.894 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:42:40.017 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:42:40.046 [main] DotNode - getDataType() : last_name -> org.hibernate.type.StringType@3d8d17a3
[DEBUG] 2020-11-30 11:42:40.072 [main] FromReferenceNode - Resolved : generatedAlias0.last_name -> user0_.last_name
[DEBUG] 2020-11-30 11:42:40.111 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-11-30 11:42:40.130 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.last_name user0_.id last_name ) ? ) ) )
[DEBUG] 2020-11-30 11:42:40.131 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-11-30 11:42:40.132 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-11-30 11:42:40.136 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=last_name,dereferenceType=PRIMITIVE,getPropertyPath=last_name,path=generatedAlias0.last_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'last_name' {originalText=last_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3d8d17a3}

[DEBUG] 2020-11-30 11:42:40.136 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:42:40.136 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-11-30 11:42:40.136 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-11-30 11:42:40.136 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:42:40.267 [main] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-11-30 11:42:40.319 [main] Loader - Result set row: 0
[DEBUG] 2020-11-30 11:42:40.319 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-30 11:42:40.320 [main] Loader - Result set row: 1
[DEBUG] 2020-11-30 11:42:40.320 [main] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:40.333 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-30 11:42:40.333 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-11-30 11:42:40.333 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.333 [main] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:42:40.334 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.334 [main] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-11-30 11:42:40.334 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.334 [main] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-11-30 11:42:40.334 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.334 [main] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-11-30 11:42:40.339 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.339 [main] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-11-30 11:42:40.340 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:40.341 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.342 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:42:40.342 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.343 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:40.343 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:40.344 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:42:40.367 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:40.369 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:40.369 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:40.369 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:40.370 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:40.370 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:40.370 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:40.370 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:42:40.392 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:40.395 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:40.396 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:40.396 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:40.396 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:40.396 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:40.400 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:42:40.400 [main] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:42:40.404 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:42:40.404 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:40.419 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:42:40.419 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:40.419 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:40.419 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:40.421 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:42:40.421 [main] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:42:40.423 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:42:40.423 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:40.428 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:42:40.428 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:42:40.428 [main] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-11-30 11:42:40.428 [main] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.428 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:40.429 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.429 [main] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-11-30 11:42:40.429 [main] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.429 [main] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-11-30 11:42:40.429 [main] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.429 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 11:42:40.429 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.429 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:42:40.429 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:40.429 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:42:40.429 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:40.429 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:40.429 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:40.430 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:40.430 [main] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:42:40.444 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:40.444 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:40.456 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:40.456 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:42:40.456 [main] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-11-30 11:42:40.457 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.457 [main] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-11-30 11:42:40.457 [main] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.457 [main] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-11-30 11:42:40.457 [main] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-11-30 11:42:40.458 [main] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:40.459 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:42:40.459 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:40.459 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:40.505 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:40.505 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:40.506 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:40.507 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:40.507 [main] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:42:40.561 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:40.561 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:40.562 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:40.573 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:42:40.583 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:42:40.583 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:42:40.588 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:40.588 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:42:40.589 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:42.864 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:42:43.062 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:43.103 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 11:42:43.131 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:43.131 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:43.131 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:43.131 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:42:43.131 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:42:43.135 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.136 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:43.136 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:43.136 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:43.136 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:43.136 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:43.136 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:43.136 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:43.136 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:43.136 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:43.136 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-11-30 11:42:43.136 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:42:43.701 [main] SQL - select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:42:43.742 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:42:43.745 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 11:42:43.774 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:43.774 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:43.775 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:43.775 [main] TwoPhaseLoad - Processing attribute `Password` : value = jpatel2
[DEBUG] 2020-11-30 11:42:43.775 [main] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.775 [main] TwoPhaseLoad - Processing attribute `address` : value = 1014 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:42:43.775 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Processing attribute `details` : value = has reseasion
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Processing attribute `email` : value = jate@some.com
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jackk
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Processing attribute `last_name` : value = ptel
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Processing attribute `phone` : value = 6049638522
[DEBUG] 2020-11-30 11:42:43.811 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.812 [main] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:43.812 [main] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.813 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:42:43.813 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.830 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel1
[DEBUG] 2020-11-30 11:42:43.830 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:42:43.831 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-30 11:42:43.831 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:42:43.834 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:43.835 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#2]
[DEBUG] 2020-11-30 11:42:43.835 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:42:43.835 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:43.836 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#2]
[DEBUG] 2020-11-30 11:42:43.836 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:42:43.836 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:42:43.836 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-11-30 11:42:43.836 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 11:45:56.709 [http-nio-8080-exec-21] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-11-30 11:45:56.840 [http-nio-8080-exec-21] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-11-30 11:45:56.887 [http-nio-8080-exec-21] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-11-30 11:45:58.522 [http-nio-8080-exec-21] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-11-30 11:45:58.533 [http-nio-8080-exec-21] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-11-30 11:45:59.788 [http-nio-8080-exec-21] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-11-30 11:46:02.677 [http-nio-8080-exec-21] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-11-30 11:46:03.207 [http-nio-8080-exec-21] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-11-30 11:46:03.231 [http-nio-8080-exec-21] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-11-30 11:46:03.646 [http-nio-8080-exec-21] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-11-30 11:46:04.193 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@60aaa1ff
[DEBUG] 2020-11-30 11:46:04.193 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@60aaa1ff
[DEBUG] 2020-11-30 11:46:04.194 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@60aaa1ff
[DEBUG] 2020-11-30 11:46:04.195 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2082f219
[DEBUG] 2020-11-30 11:46:04.197 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@103f40dd
[DEBUG] 2020-11-30 11:46:04.205 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@58cdd9eb
[DEBUG] 2020-11-30 11:46:04.239 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10b3646
[DEBUG] 2020-11-30 11:46:04.240 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10b3646
[DEBUG] 2020-11-30 11:46:04.240 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10b3646
[DEBUG] 2020-11-30 11:46:04.276 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@563fd5c
[DEBUG] 2020-11-30 11:46:04.276 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@563fd5c
[DEBUG] 2020-11-30 11:46:04.276 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@563fd5c
[DEBUG] 2020-11-30 11:46:04.321 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@54116093
[DEBUG] 2020-11-30 11:46:04.324 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@54116093
[DEBUG] 2020-11-30 11:46:04.335 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@54116093
[DEBUG] 2020-11-30 11:46:04.387 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2ffadbba
[DEBUG] 2020-11-30 11:46:04.387 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2ffadbba
[DEBUG] 2020-11-30 11:46:04.388 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2ffadbba
[DEBUG] 2020-11-30 11:46:04.390 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7232f769
[DEBUG] 2020-11-30 11:46:04.390 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7232f769
[DEBUG] 2020-11-30 11:46:04.390 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7232f769
[DEBUG] 2020-11-30 11:46:04.402 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@52eee8c1
[DEBUG] 2020-11-30 11:46:04.411 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@52eee8c1
[DEBUG] 2020-11-30 11:46:04.411 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@52eee8c1
[DEBUG] 2020-11-30 11:46:04.440 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4680db37
[DEBUG] 2020-11-30 11:46:04.445 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4680db37
[DEBUG] 2020-11-30 11:46:04.446 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4680db37
[DEBUG] 2020-11-30 11:46:04.464 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@534f26a8
[DEBUG] 2020-11-30 11:46:04.465 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@534f26a8
[DEBUG] 2020-11-30 11:46:04.481 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@188931e3
[DEBUG] 2020-11-30 11:46:04.482 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@188931e3
[DEBUG] 2020-11-30 11:46:04.527 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2799448e
[DEBUG] 2020-11-30 11:46:04.530 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2799448e
[DEBUG] 2020-11-30 11:46:04.549 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@533d5b31
[DEBUG] 2020-11-30 11:46:04.575 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d1eb2b0
[DEBUG] 2020-11-30 11:46:04.588 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@548f70fd
[DEBUG] 2020-11-30 11:46:04.613 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@548f70fd
[DEBUG] 2020-11-30 11:46:04.641 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1a5a5be6
[DEBUG] 2020-11-30 11:46:04.643 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1a5a5be6
[DEBUG] 2020-11-30 11:46:04.663 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@e613a29
[DEBUG] 2020-11-30 11:46:04.663 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@e613a29
[DEBUG] 2020-11-30 11:46:04.665 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@53c4cc47
[DEBUG] 2020-11-30 11:46:04.669 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@53c4cc47
[DEBUG] 2020-11-30 11:46:04.680 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3d58682d
[DEBUG] 2020-11-30 11:46:04.681 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3d58682d
[DEBUG] 2020-11-30 11:46:04.682 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@369d7830
[DEBUG] 2020-11-30 11:46:04.682 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@369d7830
[DEBUG] 2020-11-30 11:46:04.689 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a0fffec
[DEBUG] 2020-11-30 11:46:04.690 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a0fffec
[DEBUG] 2020-11-30 11:46:04.692 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4bce12c8
[DEBUG] 2020-11-30 11:46:04.693 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4bce12c8
[DEBUG] 2020-11-30 11:46:04.694 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49199cce
[DEBUG] 2020-11-30 11:46:04.694 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49199cce
[DEBUG] 2020-11-30 11:46:04.697 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2a9d5244
[DEBUG] 2020-11-30 11:46:04.697 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a9d5244
[DEBUG] 2020-11-30 11:46:04.699 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@61e3866c
[DEBUG] 2020-11-30 11:46:04.699 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61e3866c
[DEBUG] 2020-11-30 11:46:04.710 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@259ae9fd
[DEBUG] 2020-11-30 11:46:04.710 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@259ae9fd
[DEBUG] 2020-11-30 11:46:04.711 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@259ae9fd
[DEBUG] 2020-11-30 11:46:04.725 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@16c04457
[DEBUG] 2020-11-30 11:46:04.730 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@567573fc
[DEBUG] 2020-11-30 11:46:04.730 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@567573fc
[DEBUG] 2020-11-30 11:46:04.730 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@567573fc
[DEBUG] 2020-11-30 11:46:04.732 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@504f7c03
[DEBUG] 2020-11-30 11:46:04.755 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@48ffed8a
[DEBUG] 2020-11-30 11:46:04.757 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48ffed8a
[DEBUG] 2020-11-30 11:46:04.760 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@52960c41
[DEBUG] 2020-11-30 11:46:04.760 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@52960c41
[DEBUG] 2020-11-30 11:46:04.763 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1247efd
[DEBUG] 2020-11-30 11:46:04.763 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1247efd
[DEBUG] 2020-11-30 11:46:04.766 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@88087d8
[DEBUG] 2020-11-30 11:46:04.766 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@88087d8
[DEBUG] 2020-11-30 11:46:04.784 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54b1d4de
[DEBUG] 2020-11-30 11:46:04.784 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54b1d4de
[DEBUG] 2020-11-30 11:46:04.790 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@32964512
[DEBUG] 2020-11-30 11:46:04.793 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7cd9bdd7
[DEBUG] 2020-11-30 11:46:04.793 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7cd9bdd7
[DEBUG] 2020-11-30 11:46:04.793 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7cd9bdd7
[DEBUG] 2020-11-30 11:46:04.809 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a79008a
[DEBUG] 2020-11-30 11:46:04.810 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a79008a
[DEBUG] 2020-11-30 11:46:04.810 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a79008a
[DEBUG] 2020-11-30 11:46:04.842 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4393083e
[DEBUG] 2020-11-30 11:46:04.855 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54eb13a
[DEBUG] 2020-11-30 11:46:04.866 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2a076f45
[DEBUG] 2020-11-30 11:46:04.867 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2a076f45
[DEBUG] 2020-11-30 11:46:04.870 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2a076f45
[DEBUG] 2020-11-30 11:46:04.875 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57ffb721
[DEBUG] 2020-11-30 11:46:04.878 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57ffb721
[DEBUG] 2020-11-30 11:46:04.878 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57ffb721
[DEBUG] 2020-11-30 11:46:04.880 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@223aed8
[DEBUG] 2020-11-30 11:46:04.903 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5ffc5c0e
[DEBUG] 2020-11-30 11:46:04.906 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3d3ecf20
[DEBUG] 2020-11-30 11:46:04.906 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d3ecf20
[DEBUG] 2020-11-30 11:46:04.913 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@159b46a3
[DEBUG] 2020-11-30 11:46:04.927 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@341fb7e
[DEBUG] 2020-11-30 11:46:04.930 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@341fb7e
[DEBUG] 2020-11-30 11:46:04.963 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4ff05427
[DEBUG] 2020-11-30 11:46:04.966 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ff05427
[DEBUG] 2020-11-30 11:46:04.970 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ee0b5cc
[DEBUG] 2020-11-30 11:46:04.971 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ac56722
[DEBUG] 2020-11-30 11:46:04.981 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@42977b46
[DEBUG] 2020-11-30 11:46:05.013 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@70353950
[DEBUG] 2020-11-30 11:46:05.028 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@70353950
[DEBUG] 2020-11-30 11:46:05.056 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@39244170
[DEBUG] 2020-11-30 11:46:05.057 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66a56137
[DEBUG] 2020-11-30 11:46:05.057 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e06a0e1
[DEBUG] 2020-11-30 11:46:05.057 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ea8b4fb
[DEBUG] 2020-11-30 11:46:05.057 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@251c5d9f
[DEBUG] 2020-11-30 11:46:05.057 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@687d3cd2
[DEBUG] 2020-11-30 11:46:05.057 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@13879894
[DEBUG] 2020-11-30 11:46:05.058 [http-nio-8080-exec-21] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68f3e973
[DEBUG] 2020-11-30 11:46:05.661 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-11-30 11:46:05.662 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-11-30 11:46:05.682 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 11:46:05.687 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 11:46:05.688 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-11-30 11:46:05.728 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-11-30 11:46:05.753 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-11-30 11:46:05.829 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 11:46:05.852 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-11-30 11:46:05.866 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-11-30 11:46:05.869 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-11-30 11:46:05.870 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-11-30 11:46:05.870 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 11:46:05.880 [http-nio-8080-exec-21] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-11-30 11:46:06.057 [http-nio-8080-exec-21] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotelFull
[INFO ] 2020-11-30 11:46:06.060 [http-nio-8080-exec-21] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-11-30 11:46:06.061 [http-nio-8080-exec-21] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-11-30 11:46:09.540 [http-nio-8080-exec-21] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-11-30 11:46:13.846 [http-nio-8080-exec-21] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-11-30 11:46:13.857 [http-nio-8080-exec-21] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-11-30 11:46:13.864 [http-nio-8080-exec-21] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-11-30 11:46:14.190 [http-nio-8080-exec-21] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-11-30 11:46:14.289 [http-nio-8080-exec-21] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-11-30 11:46:14.641 [http-nio-8080-exec-21] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-11-30 11:46:14.992 [http-nio-8080-exec-21] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-11-30 11:46:15.021 [http-nio-8080-exec-21] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1535ea0a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@340fa19c]
[DEBUG] 2020-11-30 11:46:15.482 [http-nio-8080-exec-21] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-11-30 11:46:15.647 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:46:15.692 [http-nio-8080-exec-21] EntityBinder - Import with entity name User
[DEBUG] 2020-11-30 11:46:15.700 [http-nio-8080-exec-21] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-11-30 11:46:15.932 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:15.980 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:46:15.993 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-11-30 11:46:15.999 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:46:16.014 [http-nio-8080-exec-21] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:46:16.031 [http-nio-8080-exec-21] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:46:16.035 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.037 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property Password with lazy=false
[DEBUG] 2020-11-30 11:46:16.037 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:Password]
[DEBUG] 2020-11-30 11:46:16.038 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for Password
[DEBUG] 2020-11-30 11:46:16.038 [http-nio-8080-exec-21] PropertyBinder - Building property Password
[DEBUG] 2020-11-30 11:46:16.052 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.053 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-11-30 11:46:16.054 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:address]
[DEBUG] 2020-11-30 11:46:16.063 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-11-30 11:46:16.077 [http-nio-8080-exec-21] PropertyBinder - Building property address
[DEBUG] 2020-11-30 11:46:16.084 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=details, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.085 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property details with lazy=false
[DEBUG] 2020-11-30 11:46:16.085 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:details]
[DEBUG] 2020-11-30 11:46:16.113 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for details
[DEBUG] 2020-11-30 11:46:16.114 [http-nio-8080-exec-21] PropertyBinder - Building property details
[DEBUG] 2020-11-30 11:46:16.114 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.114 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-11-30 11:46:16.115 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:email]
[DEBUG] 2020-11-30 11:46:16.119 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-11-30 11:46:16.120 [http-nio-8080-exec-21] PropertyBinder - Building property email
[DEBUG] 2020-11-30 11:46:16.122 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.123 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-11-30 11:46:16.124 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-11-30 11:46:16.132 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-11-30 11:46:16.133 [http-nio-8080-exec-21] PropertyBinder - Building property first_name
[DEBUG] 2020-11-30 11:46:16.134 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.134 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-11-30 11:46:16.134 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-11-30 11:46:16.142 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-11-30 11:46:16.142 [http-nio-8080-exec-21] PropertyBinder - Building property last_name
[DEBUG] 2020-11-30 11:46:16.146 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.146 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-11-30 11:46:16.147 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:phone]
[DEBUG] 2020-11-30 11:46:16.147 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-11-30 11:46:16.154 [http-nio-8080-exec-21] PropertyBinder - Building property phone
[DEBUG] 2020-11-30 11:46:16.166 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:46:16.166 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.175 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.233 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.235 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.237 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:46:16.246 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:46:16.247 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:46:16.266 [http-nio-8080-exec-21] CollectionBinder - Collection role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:46:16.311 [http-nio-8080-exec-21] PropertyBinder - Building property reservations
[DEBUG] 2020-11-30 11:46:16.313 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:46:16.313 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.330 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.331 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.333 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.335 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:46:16.336 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:46:16.336 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 11:46:16.336 [http-nio-8080-exec-21] CollectionBinder - Collection role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:46:16.336 [http-nio-8080-exec-21] PropertyBinder - Building property roles
[DEBUG] 2020-11-30 11:46:16.336 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.337 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-11-30 11:46:16.337 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-11-30 11:46:16.337 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-11-30 11:46:16.337 [http-nio-8080-exec-21] PropertyBinder - Building property user_name
[DEBUG] 2020-11-30 11:46:16.342 [http-nio-8080-exec-21] AnnotationBinder - Binding entity from annotated class: hote.entity.Role
[DEBUG] 2020-11-30 11:46:16.343 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:46:16.345 [http-nio-8080-exec-21] EntityBinder - Import with entity name Role
[DEBUG] 2020-11-30 11:46:16.364 [http-nio-8080-exec-21] EntityBinder - Bind entity hote.entity.Role on table role
[DEBUG] 2020-11-30 11:46:16.389 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.390 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:46:16.390 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:id]
[DEBUG] 2020-11-30 11:46:16.390 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:46:16.392 [http-nio-8080-exec-21] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:46:16.392 [http-nio-8080-exec-21] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:46:16.393 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.393 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-11-30 11:46:16.393 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:roleName]
[DEBUG] 2020-11-30 11:46:16.393 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-11-30 11:46:16.394 [http-nio-8080-exec-21] PropertyBinder - Building property roleName
[DEBUG] 2020-11-30 11:46:16.394 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:46:16.394 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.398 [http-nio-8080-exec-21] PropertyBinder - Building property user
[DEBUG] 2020-11-30 11:46:16.398 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.402 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-11-30 11:46:16.404 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:userName]
[DEBUG] 2020-11-30 11:46:16.404 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-11-30 11:46:16.405 [http-nio-8080-exec-21] PropertyBinder - Building property userName
[DEBUG] 2020-11-30 11:46:16.406 [http-nio-8080-exec-21] AnnotationBinder - Binding entity from annotated class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:46:16.410 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:46:16.410 [http-nio-8080-exec-21] EntityBinder - Import with entity name Reservation
[DEBUG] 2020-11-30 11:46:16.411 [http-nio-8080-exec-21] EntityBinder - Bind entity hote.entity.Reservation on table reservation
[DEBUG] 2020-11-30 11:46:16.423 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.427 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:46:16.428 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:id]
[DEBUG] 2020-11-30 11:46:16.428 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:46:16.428 [http-nio-8080-exec-21] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:46:16.428 [http-nio-8080-exec-21] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:46:16.428 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.428 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property end_date with lazy=false
[DEBUG] 2020-11-30 11:46:16.429 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:end_date]
[DEBUG] 2020-11-30 11:46:16.431 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for end_date
[DEBUG] 2020-11-30 11:46:16.432 [http-nio-8080-exec-21] PropertyBinder - Building property end_date
[DEBUG] 2020-11-30 11:46:16.432 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:46:16.447 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.450 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.450 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.451 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.451 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:46:16.451 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:46:16.451 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-11-30 11:46:16.451 [http-nio-8080-exec-21] CollectionBinder - Collection role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:16.451 [http-nio-8080-exec-21] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-11-30 11:46:16.451 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=start_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.451 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property start_date with lazy=false
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:start_date]
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for start_date
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] PropertyBinder - Building property start_date
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=total_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property total_price with lazy=false
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:total_price]
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for total_price
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] PropertyBinder - Building property total_price
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='guest_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:46:16.452 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.453 [http-nio-8080-exec-21] PropertyBinder - Building property user
[DEBUG] 2020-11-30 11:46:16.453 [http-nio-8080-exec-21] AnnotationBinder - Binding entity from annotated class: hote.entity.Room
[DEBUG] 2020-11-30 11:46:16.453 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:46:16.453 [http-nio-8080-exec-21] EntityBinder - Import with entity name Room
[DEBUG] 2020-11-30 11:46:16.454 [http-nio-8080-exec-21] EntityBinder - Bind entity hote.entity.Room on table room
[DEBUG] 2020-11-30 11:46:16.461 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.461 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:46:16.461 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:id]
[DEBUG] 2020-11-30 11:46:16.462 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:46:16.462 [http-nio-8080-exec-21] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:46:16.462 [http-nio-8080-exec-21] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:46:16.463 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=Avalable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.463 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property Avalable with lazy=false
[DEBUG] 2020-11-30 11:46:16.463 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:Avalable]
[DEBUG] 2020-11-30 11:46:16.463 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for Avalable
[DEBUG] 2020-11-30 11:46:16.465 [http-nio-8080-exec-21] PropertyBinder - Building property Avalable
[DEBUG] 2020-11-30 11:46:16.465 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=current_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.465 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property current_price with lazy=false
[DEBUG] 2020-11-30 11:46:16.465 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:current_price]
[DEBUG] 2020-11-30 11:46:16.465 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for current_price
[DEBUG] 2020-11-30 11:46:16.471 [http-nio-8080-exec-21] PropertyBinder - Building property current_price
[DEBUG] 2020-11-30 11:46:16.483 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.484 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-11-30 11:46:16.485 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:description]
[DEBUG] 2020-11-30 11:46:16.485 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-11-30 11:46:16.485 [http-nio-8080-exec-21] PropertyBinder - Building property description
[DEBUG] 2020-11-30 11:46:16.485 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:46:16.485 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.486 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.487 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.487 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.487 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 11:46:16.487 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:46:16.488 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-11-30 11:46:16.488 [http-nio-8080-exec-21] CollectionBinder - Collection role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:46:16.488 [http-nio-8080-exec-21] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-11-30 11:46:16.488 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=room_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.488 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property room_name with lazy=false
[DEBUG] 2020-11-30 11:46:16.488 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:room_name]
[DEBUG] 2020-11-30 11:46:16.488 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for room_name
[DEBUG] 2020-11-30 11:46:16.489 [http-nio-8080-exec-21] PropertyBinder - Building property room_name
[DEBUG] 2020-11-30 11:46:16.489 [http-nio-8080-exec-21] AnnotationBinder - Binding entity from annotated class: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:46:16.489 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 11:46:16.489 [http-nio-8080-exec-21] EntityBinder - Import with entity name Roomreserved
[DEBUG] 2020-11-30 11:46:16.491 [http-nio-8080-exec-21] EntityBinder - Bind entity hote.entity.RoomReserved on table room_reserved
[DEBUG] 2020-11-30 11:46:16.493 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.497 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 11:46:16.516 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:id]
[DEBUG] 2020-11-30 11:46:16.516 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 11:46:16.517 [http-nio-8080-exec-21] PropertyBinder - Building property id
[DEBUG] 2020-11-30 11:46:16.518 [http-nio-8080-exec-21] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 11:46:16.518 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.518 [http-nio-8080-exec-21] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-11-30 11:46:16.518 [http-nio-8080-exec-21] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:price]
[DEBUG] 2020-11-30 11:46:16.521 [http-nio-8080-exec-21] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-11-30 11:46:16.522 [http-nio-8080-exec-21] PropertyBinder - Building property price
[DEBUG] 2020-11-30 11:46:16.522 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservation_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:46:16.524 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=reservation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.524 [http-nio-8080-exec-21] PropertyBinder - Building property reservation
[DEBUG] 2020-11-30 11:46:16.524 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='room_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 11:46:16.525 [http-nio-8080-exec-21] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=room, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 11:46:16.525 [http-nio-8080-exec-21] PropertyBinder - Building property room
[DEBUG] 2020-11-30 11:46:16.528 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:46:16.528 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for Password
[DEBUG] 2020-11-30 11:46:16.529 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-11-30 11:46:16.529 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for details
[DEBUG] 2020-11-30 11:46:16.529 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-11-30 11:46:16.529 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-11-30 11:46:16.529 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-11-30 11:46:16.529 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-11-30 11:46:16.530 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-11-30 11:46:16.530 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:46:16.532 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for end_date
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for start_date
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for total_price
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for Avalable
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for current_price
[DEBUG] 2020-11-30 11:46:16.545 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-11-30 11:46:16.546 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for room_name
[DEBUG] 2020-11-30 11:46:16.546 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 11:46:16.546 [http-nio-8080-exec-21] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-11-30 11:46:16.600 [http-nio-8080-exec-21] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-11-30 11:46:16.600 [http-nio-8080-exec-21] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-11-30 11:46:16.601 [http-nio-8080-exec-21] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [reservation]
[DEBUG] 2020-11-30 11:46:16.601 [http-nio-8080-exec-21] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room]
[DEBUG] 2020-11-30 11:46:16.601 [http-nio-8080-exec-21] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room_reserved]
[DEBUG] 2020-11-30 11:46:16.601 [http-nio-8080-exec-21] CollectionSecondPass - Second pass for collection: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:46:16.602 [http-nio-8080-exec-21] CollectionBinder - Binding a OneToMany: hote.entity.User.reservations through a foreign key
[DEBUG] 2020-11-30 11:46:16.605 [http-nio-8080-exec-21] CollectionBinder - Mapping collection: hote.entity.User.reservations -> reservation
[DEBUG] 2020-11-30 11:46:16.607 [http-nio-8080-exec-21] TableBinder - Retrieving property hote.entity.Reservation.user
[DEBUG] 2020-11-30 11:46:16.608 [http-nio-8080-exec-21] CollectionSecondPass - Mapped collection key: guest_id, one-to-many: hote.entity.Reservation
[DEBUG] 2020-11-30 11:46:16.608 [http-nio-8080-exec-21] CollectionSecondPass - Second pass for collection: hote.entity.User.roles
[DEBUG] 2020-11-30 11:46:16.608 [http-nio-8080-exec-21] CollectionBinder - Binding a OneToMany: hote.entity.User.roles through a foreign key
[DEBUG] 2020-11-30 11:46:16.608 [http-nio-8080-exec-21] CollectionBinder - Mapping collection: hote.entity.User.roles -> role
[DEBUG] 2020-11-30 11:46:16.608 [http-nio-8080-exec-21] TableBinder - Retrieving property hote.entity.Role.user
[DEBUG] 2020-11-30 11:46:16.608 [http-nio-8080-exec-21] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Role
[DEBUG] 2020-11-30 11:46:16.608 [http-nio-8080-exec-21] CollectionSecondPass - Second pass for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:16.609 [http-nio-8080-exec-21] CollectionBinder - Binding a OneToMany: hote.entity.Reservation.roomReserveds through a foreign key
[DEBUG] 2020-11-30 11:46:16.609 [http-nio-8080-exec-21] CollectionBinder - Mapping collection: hote.entity.Reservation.roomReserveds -> room_reserved
[DEBUG] 2020-11-30 11:46:16.609 [http-nio-8080-exec-21] TableBinder - Retrieving property hote.entity.RoomReserved.reservation
[DEBUG] 2020-11-30 11:46:16.611 [http-nio-8080-exec-21] CollectionSecondPass - Mapped collection key: reservation_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:46:16.613 [http-nio-8080-exec-21] CollectionSecondPass - Second pass for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:46:16.614 [http-nio-8080-exec-21] CollectionBinder - Binding a OneToMany: hote.entity.Room.roomReserveds through a foreign key
[DEBUG] 2020-11-30 11:46:16.614 [http-nio-8080-exec-21] CollectionBinder - Mapping collection: hote.entity.Room.roomReserveds -> room_reserved
[DEBUG] 2020-11-30 11:46:16.614 [http-nio-8080-exec-21] TableBinder - Retrieving property hote.entity.RoomReserved.room
[DEBUG] 2020-11-30 11:46:16.615 [http-nio-8080-exec-21] CollectionSecondPass - Mapped collection key: room_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:46:16.615 [http-nio-8080-exec-21] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:46:16.620 [http-nio-8080-exec-21] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:46:16.629 [http-nio-8080-exec-21] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:46:16.629 [http-nio-8080-exec-21] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-11-30 11:46:16.636 [http-nio-8080-exec-21] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:46:16.638 [http-nio-8080-exec-21] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-30 11:46:16.638 [http-nio-8080-exec-21] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-11-30 11:46:16.638 [http-nio-8080-exec-21] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-11-30 11:46:16.818 [http-nio-8080-exec-21] SessionFactoryImpl - Building session factory
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - SessionFactory name : null
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - Statistics: disabled
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - Default entity-mode: pojo
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-11-30 11:46:16.820 [http-nio-8080-exec-21] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-11-30 11:46:16.822 [http-nio-8080-exec-21] Settings - Default batch fetch size: -1
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Default null ordering: NONE
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Query language substitutions: {}
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Named query checking : enabled
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Second-level cache: disabled
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Second-level query cache: disabled
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Second-level query cache factory: null
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Second-level cache region prefix: null
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-11-30 11:46:16.823 [http-nio-8080-exec-21] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - JDBC batch size: 15
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - Scrollable result sets: enabled
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - Wrap result sets: disabled
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - JDBC result set fetch size: null
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - JPA compliance - query : 
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - JPA compliance - lists : 
[DEBUG] 2020-11-30 11:46:16.824 [http-nio-8080-exec-21] Settings - JPA compliance - transactions : 
[INFO ] 2020-11-30 11:46:17.593 [http-nio-8080-exec-21] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-11-30 11:46:17.796 [http-nio-8080-exec-21] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-11-30 11:46:17.797 [http-nio-8080-exec-21] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.8, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-51-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotelFull, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@171c8c9b, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/hotelFull, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-11-30 11:46:17.918 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:46:17.919 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:46:17.928 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:46:17.929 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:46:17.980 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:46:17.993 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:46:18.017 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:46:18.017 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:46:18.065 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:46:18.066 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:46:18.088 [http-nio-8080-exec-21] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-11-30 11:46:18.089 [http-nio-8080-exec-21] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-11-30 11:46:18.089 [http-nio-8080-exec-21] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1535ea0a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@39e61dbb]
[DEBUG] 2020-11-30 11:46:18.510 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:46:18.510 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:46:18.652 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-11-30 11:46:18.653 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-11-30 11:46:23.921 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:46:23.930 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:46:23.949 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-11-30 11:46:23.956 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-11-30 11:46:24.956 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:46:24.967 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:46:24.981 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-11-30 11:46:24.981 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:46:25.418 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:46:25.439 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:46:25.448 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-30 11:46:25.449 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-30 11:46:26.281 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:46:26.286 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:46:26.310 [http-nio-8080-exec-21] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-11-30 11:46:26.312 [http-nio-8080-exec-21] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-11-30 11:46:26.948 [http-nio-8080-exec-21] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:46:26.951 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row insert: update reservation set guest_id=? where id=?
[DEBUG] 2020-11-30 11:46:26.951 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row update: update reservation set  where id=?
[DEBUG] 2020-11-30 11:46:26.951 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row delete: update reservation set guest_id=null where guest_id=? and id=?
[DEBUG] 2020-11-30 11:46:26.951 [http-nio-8080-exec-21] AbstractCollectionPersister -  One-shot delete: update reservation set guest_id=null where guest_id=?
[DEBUG] 2020-11-30 11:46:26.953 [http-nio-8080-exec-21] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.roles
[DEBUG] 2020-11-30 11:46:26.953 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-11-30 11:46:26.953 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-11-30 11:46:26.953 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-11-30 11:46:26.953 [http-nio-8080-exec-21] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-11-30 11:46:26.957 [http-nio-8080-exec-21] AbstractCollectionPersister - Static SQL for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:26.958 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row insert: update room_reserved set reservation_id=? where id=?
[DEBUG] 2020-11-30 11:46:26.958 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-11-30 11:46:26.958 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row delete: update room_reserved set reservation_id=null where reservation_id=? and id=?
[DEBUG] 2020-11-30 11:46:26.958 [http-nio-8080-exec-21] AbstractCollectionPersister -  One-shot delete: update room_reserved set reservation_id=null where reservation_id=?
[DEBUG] 2020-11-30 11:46:26.967 [http-nio-8080-exec-21] AbstractCollectionPersister - Static SQL for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:46:26.968 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row insert: update room_reserved set room_id=? where id=?
[DEBUG] 2020-11-30 11:46:26.968 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-11-30 11:46:26.968 [http-nio-8080-exec-21] AbstractCollectionPersister -  Row delete: update room_reserved set room_id=null where room_id=? and id=?
[DEBUG] 2020-11-30 11:46:26.968 [http-nio-8080-exec-21] AbstractCollectionPersister -  One-shot delete: update room_reserved set room_id=null where room_id=?
[DEBUG] 2020-11-30 11:46:27.043 [http-nio-8080-exec-21] AbstractEntityPersister - Static SQL for entity: hote.entity.Reservation
[DEBUG] 2020-11-30 11:46:27.048 [http-nio-8080-exec-21] AbstractEntityPersister -  Version select: select id from reservation where id =?
[DEBUG] 2020-11-30 11:46:27.048 [http-nio-8080-exec-21] AbstractEntityPersister -  Snapshot select: select reservatio_.id, reservatio_.end_date as end_date2_0_, reservatio_.start_date as start_da3_0_, reservatio_.total_price as total_pr4_0_, reservatio_.guest_id as guest_id5_0_ from reservation reservatio_ where reservatio_.id=?
[DEBUG] 2020-11-30 11:46:27.048 [http-nio-8080-exec-21] AbstractEntityPersister -  Insert 0: insert into reservation (end_date, start_date, total_price, guest_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:46:27.049 [http-nio-8080-exec-21] AbstractEntityPersister -  Update 0: update reservation set end_date=?, start_date=?, total_price=?, guest_id=? where id=?
[DEBUG] 2020-11-30 11:46:27.049 [http-nio-8080-exec-21] AbstractEntityPersister -  Delete 0: delete from reservation where id=?
[DEBUG] 2020-11-30 11:46:27.049 [http-nio-8080-exec-21] AbstractEntityPersister -  Identity insert: insert into reservation (end_date, start_date, total_price, guest_id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:46:27.847 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d04c9f6]
[DEBUG] 2020-11-30 11:46:27.933 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:46:27.942 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:46:28.176 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5989130]
[DEBUG] 2020-11-30 11:46:28.241 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69b056d0]
[DEBUG] 2020-11-30 11:46:28.277 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:46:28.280 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:28.281 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:28.306 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:46:28.309 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bf627a0]
[DEBUG] 2020-11-30 11:46:28.325 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-11-30 11:46:28.325 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-11-30 11:46:28.344 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-11-30 11:46:28.356 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:46:28.362 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:46:28.363 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-11-30 11:46:28.382 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:46:28.382 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:46:28.392 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:46:28.395 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fe6fde]
[DEBUG] 2020-11-30 11:46:28.410 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:46:28.410 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:46:28.410 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:46:28.410 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:46:28.410 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:46:28.410 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:46:28.410 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:46:28.411 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:46:28.411 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-11-30 11:46:28.411 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:46:28.419 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6494b558]
[DEBUG] 2020-11-30 11:46:28.420 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6de0d020]
[DEBUG] 2020-11-30 11:46:28.420 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 11:46:28.421 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 11:46:28.427 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 11:46:28.428 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-11-30 11:46:28.429 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:46:28.429 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:28.820 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:29.071 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:46:29.132 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.Reservation [NONE]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:46:29.160 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771caafd]
[DEBUG] 2020-11-30 11:46:29.162 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:46:29.172 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:46:29.173 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423ce447]
[DEBUG] 2020-11-30 11:46:29.173 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6951cd97]
[DEBUG] 2020-11-30 11:46:29.182 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:46:29.183 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:29.197 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:29.201 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:46:29.211 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc32f50]
[DEBUG] 2020-11-30 11:46:29.217 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-11-30 11:46:29.219 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-11-30 11:46:29.219 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-11-30 11:46:29.219 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:46:29.220 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-11-30 11:46:29.220 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-11-30 11:46:29.220 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:46:29.220 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:46:29.227 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:46:29.235 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47e46292]
[DEBUG] 2020-11-30 11:46:29.248 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:46:29.248 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:46:29.248 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:46:29.249 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:46:29.249 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:46:29.249 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:46:29.249 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:46:29.249 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:46:29.250 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-11-30 11:46:29.277 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:46:29.278 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c880f89]
[DEBUG] 2020-11-30 11:46:29.286 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d809526]
[DEBUG] 2020-11-30 11:46:29.287 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 11:46:29.287 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 11:46:29.295 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 11:46:29.295 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-11-30 11:46:29.295 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:46:29.296 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:29.308 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:29.342 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:46:29.350 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.Reservation [READ]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:46:29.785 [http-nio-8080-exec-21] Loader - Static select for action ACTION_MERGE on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:46:29.812 [http-nio-8080-exec-21] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-11-30 11:46:29.813 [http-nio-8080-exec-21] AbstractEntityPersister - Static SQL for entity: hote.entity.Room
[DEBUG] 2020-11-30 11:46:29.813 [http-nio-8080-exec-21] AbstractEntityPersister -  Version select: select id from room where id =?
[DEBUG] 2020-11-30 11:46:29.813 [http-nio-8080-exec-21] AbstractEntityPersister -  Snapshot select: select room_.id, room_.Avalable as Avalable2_2_, room_.current_price as current_3_2_, room_.description as descript4_2_, room_.room_name as room_nam5_2_ from room room_ where room_.id=?
[DEBUG] 2020-11-30 11:46:29.813 [http-nio-8080-exec-21] AbstractEntityPersister -  Insert 0: insert into room (Avalable, current_price, description, room_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:46:29.814 [http-nio-8080-exec-21] AbstractEntityPersister -  Update 0: update room set Avalable=?, current_price=?, description=?, room_name=? where id=?
[DEBUG] 2020-11-30 11:46:29.814 [http-nio-8080-exec-21] AbstractEntityPersister -  Delete 0: delete from room where id=?
[DEBUG] 2020-11-30 11:46:29.822 [http-nio-8080-exec-21] AbstractEntityPersister -  Identity insert: insert into room (Avalable, current_price, description, room_name) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:46:29.843 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee34ccc]
[DEBUG] 2020-11-30 11:46:29.849 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-11-30 11:46:29.849 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-11-30 11:46:29.849 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 11:46:29.862 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:46:29.864 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d0d3b2a]
[DEBUG] 2020-11-30 11:46:29.864 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e2af906]
[DEBUG] 2020-11-30 11:46:29.865 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:46:29.871 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:29.871 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554d8c9a]
[DEBUG] 2020-11-30 11:46:29.878 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-11-30 11:46:29.896 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:29.897 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:29.897 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-11-30 11:46:29.897 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-11-30 11:46:29.909 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-11-30 11:46:29.911 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cd46708]
[DEBUG] 2020-11-30 11:46:29.912 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:46:29.912 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-11-30 11:46:29.915 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-11-30 11:46:29.916 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:29.934 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:29.946 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:46:29.971 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.Room [NONE]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-11-30 11:46:29.972 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@349eeda3]
[DEBUG] 2020-11-30 11:46:29.975 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-11-30 11:46:29.987 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-11-30 11:46:29.987 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 11:46:29.987 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:46:29.988 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@642e9bf6]
[DEBUG] 2020-11-30 11:46:29.988 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bcd5c5c]
[DEBUG] 2020-11-30 11:46:29.988 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-11-30 11:46:29.988 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:29.988 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@419c5546]
[DEBUG] 2020-11-30 11:46:29.995 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-11-30 11:46:29.995 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:29.997 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:30.002 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-11-30 11:46:30.003 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-11-30 11:46:30.003 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-11-30 11:46:30.003 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6cf3f]
[DEBUG] 2020-11-30 11:46:30.005 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-11-30 11:46:30.005 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-11-30 11:46:30.005 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-11-30 11:46:30.005 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:30.006 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:30.013 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:46:30.013 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.Room [READ]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-11-30 11:46:30.038 [http-nio-8080-exec-21] Loader - Static select for action ACTION_MERGE on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-11-30 11:46:30.061 [http-nio-8080-exec-21] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-11-30 11:46:30.061 [http-nio-8080-exec-21] AbstractEntityPersister - Static SQL for entity: hote.entity.RoomReserved
[DEBUG] 2020-11-30 11:46:30.084 [http-nio-8080-exec-21] AbstractEntityPersister -  Version select: select id from room_reserved where id =?
[DEBUG] 2020-11-30 11:46:30.085 [http-nio-8080-exec-21] AbstractEntityPersister -  Snapshot select: select roomreserv_.id, roomreserv_.price as price2_3_, roomreserv_.reservation_id as reservat3_3_, roomreserv_.room_id as room_id4_3_ from room_reserved roomreserv_ where roomreserv_.id=?
[DEBUG] 2020-11-30 11:46:30.085 [http-nio-8080-exec-21] AbstractEntityPersister -  Insert 0: insert into room_reserved (price, reservation_id, room_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:46:30.085 [http-nio-8080-exec-21] AbstractEntityPersister -  Update 0: update room_reserved set price=?, reservation_id=?, room_id=? where id=?
[DEBUG] 2020-11-30 11:46:30.085 [http-nio-8080-exec-21] AbstractEntityPersister -  Delete 0: delete from room_reserved where id=?
[DEBUG] 2020-11-30 11:46:30.085 [http-nio-8080-exec-21] AbstractEntityPersister -  Identity insert: insert into room_reserved (price, reservation_id, room_id) values (?, ?, ?)
[DEBUG] 2020-11-30 11:46:30.085 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5b2ae8]
[DEBUG] 2020-11-30 11:46:30.085 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:46:30.085 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:46:30.086 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a5e4d4a]
[DEBUG] 2020-11-30 11:46:30.086 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:46:30.103 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:30.103 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:30.103 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:46:30.103 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:46:30.103 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:46:30.104 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18cfc54f]
[DEBUG] 2020-11-30 11:46:30.104 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:46:30.104 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:46:30.104 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:46:30.114 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:46:30.118 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:46:30.118 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:46:30.118 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:46:30.118 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:46:30.118 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:46:30.118 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:46:30.127 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f9320bc]
[DEBUG] 2020-11-30 11:46:30.128 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c8508b3]
[DEBUG] 2020-11-30 11:46:30.132 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:46:30.132 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:46:30.143 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a0653d1]
[DEBUG] 2020-11-30 11:46:30.156 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:46:30.157 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:46:30.158 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:46:30.158 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:46:30.158 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:46:30.159 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:46:30.159 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:30.160 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:30.196 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-11-30 11:46:30.196 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.RoomReserved [NONE]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:46:30.196 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236e7417]
[DEBUG] 2020-11-30 11:46:30.197 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:46:30.197 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:46:30.197 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f4a61a0]
[DEBUG] 2020-11-30 11:46:30.199 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:46:30.199 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:30.200 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:30.200 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:46:30.200 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:46:30.200 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:46:30.215 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b98f7f0]
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:46:30.216 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:46:30.219 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:46:30.223 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@410d395b]
[DEBUG] 2020-11-30 11:46:30.228 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d156307]
[DEBUG] 2020-11-30 11:46:30.229 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:46:30.233 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:46:30.259 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@617e3622]
[DEBUG] 2020-11-30 11:46:30.267 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:46:30.267 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:46:30.267 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:46:30.267 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:46:30.267 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:46:30.273 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:46:30.273 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:30.282 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:30.287 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-11-30 11:46:30.287 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.RoomReserved [READ]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:46:30.292 [http-nio-8080-exec-21] Loader - Static select for action ACTION_MERGE on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:46:30.292 [http-nio-8080-exec-21] Loader - Static select for action ACTION_REFRESH on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] AbstractEntityPersister -  Snapshot select: select user_.id, user_.Password as Password2_4_, user_.address as address3_4_, user_.details as details4_4_, user_.email as email5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.phone as phone8_4_, user_.user_name as user_nam9_4_ from user user_ where user_.id=?
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] AbstractEntityPersister -  Insert 0: insert into user (Password, address, details, email, first_name, last_name, phone, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] AbstractEntityPersister -  Update 0: update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] AbstractEntityPersister -  Identity insert: insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@349bee0d]
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@224f4184]
[DEBUG] 2020-11-30 11:46:30.293 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d8ebe7]
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c127914]
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ca3ea2]
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c7bbbc]
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@676ab488]
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64238214]
[DEBUG] 2020-11-30 11:46:30.294 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 11:46:30.295 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 11:46:30.295 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 11:46:30.295 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-11-30 11:46:30.305 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-30 11:46:30.305 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:30.318 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:30.326 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:46:30.326 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:46:30.328 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7149e81d]
[DEBUG] 2020-11-30 11:46:30.329 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-11-30 11:46:30.329 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-11-30 11:46:30.329 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-11-30 11:46:30.332 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 11:46:30.333 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-30 11:46:30.366 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-30 11:46:30.366 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-11-30 11:46:30.366 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-11-30 11:46:30.395 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e06bfc4]
[DEBUG] 2020-11-30 11:46:30.399 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@538ebf71]
[DEBUG] 2020-11-30 11:46:30.400 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-11-30 11:46:30.400 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-11-30 11:46:30.400 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78ee0577]
[DEBUG] 2020-11-30 11:46:30.400 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e3d482c]
[DEBUG] 2020-11-30 11:46:30.401 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-11-30 11:46:30.401 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:30.401 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-11-30 11:46:30.401 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-11-30 11:46:30.431 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eeece3f]
[DEBUG] 2020-11-30 11:46:30.432 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-11-30 11:46:30.433 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-11-30 11:46:30.434 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-11-30 11:46:30.475 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-11-30 11:46:30.478 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 11:46:30.497 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5aa697e6]
[DEBUG] 2020-11-30 11:46:30.498 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cf735e]
[DEBUG] 2020-11-30 11:46:30.499 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 11:46:30.499 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 11:46:30.500 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 11:46:30.500 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-11-30 11:46:30.500 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-30 11:46:30.500 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:30.501 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:30.579 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-11-30 11:46:30.579 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] AbstractEntityPersister - Static SQL for entity: hote.entity.Role
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_1_, role_.user_id as user_id4_1_, role_.user_name as user_nam3_1_ from role role_ where role_.id=?
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-11-30 11:46:30.588 [http-nio-8080-exec-21] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb6b75c]
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a88a333]
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@693fb010]
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c03ec88]
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b58e0e8]
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ec3ca7]
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:30.589 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:30.604 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:46:30.604 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-11-30 11:46:30.604 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3120fbe5]
[DEBUG] 2020-11-30 11:46:30.604 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:46:30.604 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:46:30.623 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79956a43]
[DEBUG] 2020-11-30 11:46:30.624 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-11-30 11:46:30.636 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-11-30 11:46:30.636 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-11-30 11:46:30.637 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 11:46:30.637 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-30 11:46:30.637 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-30 11:46:30.637 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-11-30 11:46:30.637 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-11-30 11:46:30.660 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@465c4af6]
[DEBUG] 2020-11-30 11:46:30.668 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f6a4ed]
[DEBUG] 2020-11-30 11:46:30.676 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-11-30 11:46:30.682 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-11-30 11:46:30.683 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a444e75]
[DEBUG] 2020-11-30 11:46:30.691 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d7481c]
[DEBUG] 2020-11-30 11:46:30.691 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-11-30 11:46:30.693 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-11-30 11:46:30.696 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-11-30 11:46:30.696 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-11-30 11:46:30.713 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 11:46:30.721 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 11:46:30.721 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-30 11:46:30.721 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:46:30.722 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:30.738 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:30.799 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-11-30 11:46:30.800 [http-nio-8080-exec-21] EntityLoader - Static select for entity hote.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-11-30 11:46:30.804 [http-nio-8080-exec-21] Loader - Static select for action ACTION_MERGE on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 11:46:30.806 [http-nio-8080-exec-21] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 11:46:31.022 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@428f2717]
[DEBUG] 2020-11-30 11:46:31.026 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f8b4f6]
[DEBUG] 2020-11-30 11:46:31.040 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-11-30 11:46:31.040 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-11-30 11:46:31.040 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@172797e4]
[DEBUG] 2020-11-30 11:46:31.045 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2748cef2]
[DEBUG] 2020-11-30 11:46:31.045 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-11-30 11:46:31.046 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-11-30 11:46:31.046 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:46:31.046 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 11:46:31.072 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:31.161 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:31.170 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.reservations)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:0>, path=[hote.entity.User.reservations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=[hote.entity.User.reservations].<elements>)
             - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:2>, path=[hote.entity.User.reservations].<elements>.roomReserveds)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:3>, path=[hote.entity.User.reservations].<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.reservations)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {guest_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-11-30 11:46:31.207 [http-nio-8080-exec-21] CollectionLoader - Static select for collection hote.entity.User.reservations: select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:46:31.208 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24c85302]
[DEBUG] 2020-11-30 11:46:31.208 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1815a338]
[DEBUG] 2020-11-30 11:46:31.215 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 11:46:31.218 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 11:46:31.224 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 11:46:31.224 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-11-30 11:46:31.225 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:31.245 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:31.263 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:0>, path=[hote.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:1>, path=[hote.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-30 11:46:31.271 [http-nio-8080-exec-21] CollectionLoader - Static select for collection hote.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:46:31.277 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c5513f9]
[DEBUG] 2020-11-30 11:46:31.296 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ec6528]
[DEBUG] 2020-11-30 11:46:31.297 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:46:31.297 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservation
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a2af0d]
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-11-30 11:46:31.298 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-11-30 11:46:31.308 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:31.308 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Reservation.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Reservation.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Reservation.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:2>, path=[hote.entity.Reservation.roomReserveds].<elements>.room)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Reservation.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {reservat3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(room)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Room)
                      - SQL table alias mapping - room1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] CollectionLoader - Static select for collection hote.entity.Reservation.roomReserveds: select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ec2ea33]
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b5aae07]
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773eb902]
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-11-30 11:46:31.309 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e894869]
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20f9abfa]
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@911c52a]
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] MetamodelGraphWalker - Property path deemed to be circular : room
[DEBUG] 2020-11-30 11:46:31.310 [http-nio-8080-exec-21] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 11:46:31.342 [http-nio-8080-exec-21] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 11:46:31.373 [http-nio-8080-exec-21] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Room.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Room.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Room.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=[hote.entity.Room.roomReserveds].<elements>.reservation)
                - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:3>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user)
                   - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:4>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:5>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Room.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {room_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(reservation)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}

[DEBUG] 2020-11-30 11:46:31.391 [http-nio-8080-exec-21] CollectionLoader - Static select for collection hote.entity.Room.roomReserveds: select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:46:32.485 [http-nio-8080-exec-21] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-11-30 11:46:32.486 [http-nio-8080-exec-21] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-11-30 11:46:32.515 [http-nio-8080-exec-21] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-11-30 11:46:32.905 [http-nio-8080-exec-21] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-11-30 11:46:32.915 [http-nio-8080-exec-21] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-11-30 11:46:32.948 [http-nio-8080-exec-21] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-11-30 11:46:32.953 [http-nio-8080-exec-21] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-11-30 11:46:33.036 [http-nio-8080-exec-21] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2184b70a
[DEBUG] 2020-11-30 11:46:33.114 [http-nio-8080-exec-21] SessionFactoryRegistry - Registering SessionFactory: 4bf6cf2d-28c2-41cd-8be7-3e1e4a8321e6 (<unnamed>)
[DEBUG] 2020-11-30 11:46:33.125 [http-nio-8080-exec-21] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-11-30 11:46:35.866 [http-nio-8080-exec-21] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-11-30 11:46:36.803 [http-nio-8080-exec-21] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-11-30 11:46:37.162 [http-nio-8080-exec-21] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2c5fa2b4
[DEBUG] 2020-11-30 11:46:37.516 [http-nio-8080-exec-21] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-11-30 11:46:37.717 [http-nio-8080-exec-21] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:46:37.856 [http-nio-8080-exec-21] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'first_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-11-30 11:46:38.278 [http-nio-8080-exec-21] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-11-30 11:46:38.729 [http-nio-8080-exec-21] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-11-30 11:46:38.765 [http-nio-8080-exec-21] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:46:38.866 [http-nio-8080-exec-21] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-30 11:46:38.907 [http-nio-8080-exec-21] DotNode - getDataType() : first_name -> org.hibernate.type.StringType@2799448e
[DEBUG] 2020-11-30 11:46:38.944 [http-nio-8080-exec-21] FromReferenceNode - Resolved : generatedAlias0.first_name -> user0_.first_name
[DEBUG] 2020-11-30 11:46:39.027 [http-nio-8080-exec-21] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-11-30 11:46:39.028 [http-nio-8080-exec-21] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.first_name user0_.id first_name ) ? ) ) )
[DEBUG] 2020-11-30 11:46:39.346 [http-nio-8080-exec-21] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-11-30 11:46:39.369 [http-nio-8080-exec-21] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-11-30 11:46:39.377 [http-nio-8080-exec-21] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.first_name' {propertyName=first_name,dereferenceType=PRIMITIVE,getPropertyPath=first_name,path=generatedAlias0.first_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'first_name' {originalText=first_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2799448e}

[DEBUG] 2020-11-30 11:46:39.377 [http-nio-8080-exec-21] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:46:39.409 [http-nio-8080-exec-21] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-11-30 11:46:39.410 [http-nio-8080-exec-21] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.first_name=?
[DEBUG] 2020-11-30 11:46:39.410 [http-nio-8080-exec-21] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 11:46:39.730 [http-nio-8080-exec-21] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.first_name=?
[DEBUG] 2020-11-30 11:46:40.248 [http-nio-8080-exec-21] Loader - Result set row: 0
[DEBUG] 2020-11-30 11:46:40.307 [http-nio-8080-exec-21] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-30 11:46:40.409 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-30 11:46:40.438 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-11-30 11:46:40.438 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.439 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-11-30 11:46:40.439 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.439 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-11-30 11:46:40.443 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.443 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-11-30 11:46:40.444 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.444 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-11-30 11:46:40.444 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.444 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-11-30 11:46:40.444 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.449 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-11-30 11:46:40.449 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.449 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:46:40.450 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.748 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:46:40.752 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.755 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-11-30 11:46:40.756 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:40.796 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-30 11:46:40.882 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:46:40.906 [http-nio-8080-exec-21] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 11:46:40.949 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:46:41.072 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:46:41.116 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:46:41.153 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [hote.entity.Role#2]
[DEBUG] 2020-11-30 11:46:41.153 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-11-30 11:46:41.153 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.153 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 11:46:41.153 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.154 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `userName` : value = jpatel
[DEBUG] 2020-11-30 11:46:41.154 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.154 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [hote.entity.Role#2]
[DEBUG] 2020-11-30 11:46:41.154 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:46:41.155 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-11-30 11:46:41.155 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-11-30 11:46:41.155 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:46:41.155 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:46:41.155 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:46:41.155 [http-nio-8080-exec-21] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-11-30 11:46:41.165 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:46:41.166 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:46:41.190 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:46:41.190 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:46:41.190 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-11-30 11:46:41.190 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.195 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:46:41.195 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.196 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-11-30 11:46:41.197 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.197 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-11-30 11:46:41.197 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.197 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 11:46:41.197 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.197 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-11-30 11:46:41.213 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:46:41.213 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-11-30 11:46:41.213 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-11-30 11:46:41.213 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:46:41.213 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:46:41.213 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:46:41.213 [http-nio-8080-exec-21] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-11-30 11:46:41.224 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:46:41.224 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:46:41.257 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:46:41.257 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-11-30 11:46:41.258 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.277 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-11-30 11:46:41.277 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.277 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 11:46:41.277 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.277 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-11-30 11:46:41.277 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 11:46:41.278 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-11-30 11:46:41.293 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:41.293 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-11-30 11:46:41.293 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-11-30 11:46:41.293 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:46:41.293 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:46:41.293 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:46:41.294 [http-nio-8080-exec-21] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-11-30 11:46:41.316 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:46:41.336 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 11:46:41.337 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:46:41.338 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:46:41.338 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-11-30 11:46:41.357 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-11-30 11:46:41.372 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 11:46:41.378 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-30 11:46:41.448 [http-nio-8080-exec-21] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
