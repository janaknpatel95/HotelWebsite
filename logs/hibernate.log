[DEBUG] 2020-11-04 12:39:55.171 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-11-04 12:39:55.197 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-11-04 12:39:55.209 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-11-04 12:39:55.428 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-11-04 12:39:55.431 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-11-04 12:39:55.987 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-11-04 12:39:56.882 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-11-04 12:39:56.926 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-11-04 12:39:56.928 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-11-04 12:39:56.991 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-11-04 12:39:57.068 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@32a3cbac
[DEBUG] 2020-11-04 12:39:57.068 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@32a3cbac
[DEBUG] 2020-11-04 12:39:57.069 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32a3cbac
[DEBUG] 2020-11-04 12:39:57.070 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1357c350
[DEBUG] 2020-11-04 12:39:57.070 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7bde8f75
[DEBUG] 2020-11-04 12:39:57.071 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@54b0c266
[DEBUG] 2020-11-04 12:39:57.073 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@38693a3e
[DEBUG] 2020-11-04 12:39:57.073 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@38693a3e
[DEBUG] 2020-11-04 12:39:57.073 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38693a3e
[DEBUG] 2020-11-04 12:39:57.074 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7e98ccda
[DEBUG] 2020-11-04 12:39:57.075 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7e98ccda
[DEBUG] 2020-11-04 12:39:57.078 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e98ccda
[DEBUG] 2020-11-04 12:39:57.081 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@50c8a930
[DEBUG] 2020-11-04 12:39:57.082 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@50c8a930
[DEBUG] 2020-11-04 12:39:57.082 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50c8a930
[DEBUG] 2020-11-04 12:39:57.083 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@40f69ef0
[DEBUG] 2020-11-04 12:39:57.083 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@40f69ef0
[DEBUG] 2020-11-04 12:39:57.083 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40f69ef0
[DEBUG] 2020-11-04 12:39:57.084 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@583df4d2
[DEBUG] 2020-11-04 12:39:57.084 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@583df4d2
[DEBUG] 2020-11-04 12:39:57.084 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@583df4d2
[DEBUG] 2020-11-04 12:39:57.085 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@169a63b4
[DEBUG] 2020-11-04 12:39:57.085 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@169a63b4
[DEBUG] 2020-11-04 12:39:57.085 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@169a63b4
[DEBUG] 2020-11-04 12:39:57.086 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a677b
[DEBUG] 2020-11-04 12:39:57.087 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a677b
[DEBUG] 2020-11-04 12:39:57.087 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a677b
[DEBUG] 2020-11-04 12:39:57.091 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d92aa9e
[DEBUG] 2020-11-04 12:39:57.091 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d92aa9e
[DEBUG] 2020-11-04 12:39:57.094 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@61eac0dd
[DEBUG] 2020-11-04 12:39:57.094 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@61eac0dd
[DEBUG] 2020-11-04 12:39:57.095 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3b148ba0
[DEBUG] 2020-11-04 12:39:57.100 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b148ba0
[DEBUG] 2020-11-04 12:39:57.100 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5ddc1d5f
[DEBUG] 2020-11-04 12:39:57.103 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f4e31e0
[DEBUG] 2020-11-04 12:39:57.104 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@bbcdd7f
[DEBUG] 2020-11-04 12:39:57.104 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@bbcdd7f
[DEBUG] 2020-11-04 12:39:57.105 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@30833c7
[DEBUG] 2020-11-04 12:39:57.105 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30833c7
[DEBUG] 2020-11-04 12:39:57.111 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@9ee08ff
[DEBUG] 2020-11-04 12:39:57.111 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@9ee08ff
[DEBUG] 2020-11-04 12:39:57.112 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@20119b57
[DEBUG] 2020-11-04 12:39:57.113 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@20119b57
[DEBUG] 2020-11-04 12:39:57.115 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@69032792
[DEBUG] 2020-11-04 12:39:57.115 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@69032792
[DEBUG] 2020-11-04 12:39:57.117 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4c1b40c8
[DEBUG] 2020-11-04 12:39:57.117 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4c1b40c8
[DEBUG] 2020-11-04 12:39:57.120 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@65063146
[DEBUG] 2020-11-04 12:39:57.120 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@65063146
[DEBUG] 2020-11-04 12:39:57.123 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@118112db
[DEBUG] 2020-11-04 12:39:57.123 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@118112db
[DEBUG] 2020-11-04 12:39:57.124 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4855a8a
[DEBUG] 2020-11-04 12:39:57.124 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4855a8a
[DEBUG] 2020-11-04 12:39:57.125 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7a36f26f
[DEBUG] 2020-11-04 12:39:57.126 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a36f26f
[DEBUG] 2020-11-04 12:39:57.126 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@69cf042
[DEBUG] 2020-11-04 12:39:57.127 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@69cf042
[DEBUG] 2020-11-04 12:39:57.127 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a736cb6
[DEBUG] 2020-11-04 12:39:57.127 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a736cb6
[DEBUG] 2020-11-04 12:39:57.128 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a736cb6
[DEBUG] 2020-11-04 12:39:57.129 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5319e7ee
[DEBUG] 2020-11-04 12:39:57.129 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7cbd4a5d
[DEBUG] 2020-11-04 12:39:57.129 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7cbd4a5d
[DEBUG] 2020-11-04 12:39:57.130 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7cbd4a5d
[DEBUG] 2020-11-04 12:39:57.130 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c4e8b6c
[DEBUG] 2020-11-04 12:39:57.131 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@75589755
[DEBUG] 2020-11-04 12:39:57.132 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@75589755
[DEBUG] 2020-11-04 12:39:57.134 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@212e6174
[DEBUG] 2020-11-04 12:39:57.135 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@212e6174
[DEBUG] 2020-11-04 12:39:57.135 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4331ffd0
[DEBUG] 2020-11-04 12:39:57.135 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4331ffd0
[DEBUG] 2020-11-04 12:39:57.136 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4c01a72e
[DEBUG] 2020-11-04 12:39:57.136 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c01a72e
[DEBUG] 2020-11-04 12:39:57.137 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a17175d
[DEBUG] 2020-11-04 12:39:57.137 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a17175d
[DEBUG] 2020-11-04 12:39:57.139 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@68b1a895
[DEBUG] 2020-11-04 12:39:57.142 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@12bed99d
[DEBUG] 2020-11-04 12:39:57.142 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@12bed99d
[DEBUG] 2020-11-04 12:39:57.143 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@12bed99d
[DEBUG] 2020-11-04 12:39:57.144 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4db1d84a
[DEBUG] 2020-11-04 12:39:57.144 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4db1d84a
[DEBUG] 2020-11-04 12:39:57.144 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4db1d84a
[DEBUG] 2020-11-04 12:39:57.145 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@14bbdd5d
[DEBUG] 2020-11-04 12:39:57.145 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@352d7083
[DEBUG] 2020-11-04 12:39:57.147 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@790775eb
[DEBUG] 2020-11-04 12:39:57.147 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@790775eb
[DEBUG] 2020-11-04 12:39:57.147 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@790775eb
[DEBUG] 2020-11-04 12:39:57.148 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@517febed
[DEBUG] 2020-11-04 12:39:57.148 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@517febed
[DEBUG] 2020-11-04 12:39:57.148 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@517febed
[DEBUG] 2020-11-04 12:39:57.148 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3764e4fc
[DEBUG] 2020-11-04 12:39:57.148 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@68696bcc
[DEBUG] 2020-11-04 12:39:57.152 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@276916d9
[DEBUG] 2020-11-04 12:39:57.153 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@276916d9
[DEBUG] 2020-11-04 12:39:57.154 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2aaebbb4
[DEBUG] 2020-11-04 12:39:57.156 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@121461f
[DEBUG] 2020-11-04 12:39:57.156 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@121461f
[DEBUG] 2020-11-04 12:39:57.157 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@af31e7
[DEBUG] 2020-11-04 12:39:57.157 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@af31e7
[DEBUG] 2020-11-04 12:39:57.157 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e9e1e6c
[DEBUG] 2020-11-04 12:39:57.158 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1adc387b
[DEBUG] 2020-11-04 12:39:57.160 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1fc3b256
[DEBUG] 2020-11-04 12:39:57.164 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@25a5093c
[DEBUG] 2020-11-04 12:39:57.165 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25a5093c
[DEBUG] 2020-11-04 12:39:57.166 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@632d5d46
[DEBUG] 2020-11-04 12:39:57.166 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2baceabe
[DEBUG] 2020-11-04 12:39:57.166 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c7fb558
[DEBUG] 2020-11-04 12:39:57.166 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6095cb08
[DEBUG] 2020-11-04 12:39:57.169 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69db7d31
[DEBUG] 2020-11-04 12:39:57.169 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25ee93ae
[DEBUG] 2020-11-04 12:39:57.169 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@342a273e
[DEBUG] 2020-11-04 12:39:57.169 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7aa97738
[DEBUG] 2020-11-04 12:39:57.230 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-11-04 12:39:57.231 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-11-04 12:39:57.232 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-04 12:39:57.232 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-04 12:39:57.232 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-11-04 12:39:57.234 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-11-04 12:39:57.235 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-11-04 12:39:57.237 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-04 12:39:57.238 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-11-04 12:39:57.239 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-11-04 12:39:57.239 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-11-04 12:39:57.241 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-11-04 12:39:57.242 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-04 12:39:57.243 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-11-04 12:39:57.249 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotel
[INFO ] 2020-11-04 12:39:57.252 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-11-04 12:39:57.252 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-11-04 12:39:57.620 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-11-04 12:39:58.159 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-11-04 12:39:58.161 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-11-04 12:39:58.161 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-11-04 12:39:58.258 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-11-04 12:39:58.297 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-11-04 12:39:58.380 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-11-04 12:39:58.476 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-11-04 12:39:58.479 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ca301c8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@641e9f34]
[DEBUG] 2020-11-04 12:39:58.602 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-11-04 12:39:58.639 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-04 12:39:58.648 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2020-11-04 12:39:58.652 [http-nio-8080-exec-10] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-11-04 12:39:58.710 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.716 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-04 12:39:58.718 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-11-04 12:39:58.727 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-04 12:39:58.733 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2020-11-04 12:39:58.739 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-04 12:39:58.742 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.744 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-11-04 12:39:58.744 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-11-04 12:39:58.744 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-11-04 12:39:58.744 [http-nio-8080-exec-10] PropertyBinder - Building property first_name
[DEBUG] 2020-11-04 12:39:58.744 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.744 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-11-04 12:39:58.745 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-11-04 12:39:58.745 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-11-04 12:39:58.745 [http-nio-8080-exec-10] PropertyBinder - Building property last_name
[DEBUG] 2020-11-04 12:39:58.746 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-04 12:39:58.746 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.754 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.782 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.783 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.785 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-04 12:39:58.789 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-04 12:39:58.794 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-04 12:39:58.794 [http-nio-8080-exec-10] CollectionBinder - Collection role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:39:58.808 [http-nio-8080-exec-10] PropertyBinder - Building property orders
[DEBUG] 2020-11-04 12:39:58.810 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.810 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-11-04 12:39:58.810 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-11-04 12:39:58.810 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-11-04 12:39:58.810 [http-nio-8080-exec-10] PropertyBinder - Building property user_name
[DEBUG] 2020-11-04 12:39:58.816 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: hote.entity.Order
[DEBUG] 2020-11-04 12:39:58.817 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-04 12:39:58.817 [http-nio-8080-exec-10] EntityBinder - Import with entity name Order
[DEBUG] 2020-11-04 12:39:58.817 [http-nio-8080-exec-10] EntityBinder - Bind entity hote.entity.Order on table orders
[DEBUG] 2020-11-04 12:39:58.832 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.832 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-04 12:39:58.832 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:id]
[DEBUG] 2020-11-04 12:39:58.832 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-04 12:39:58.832 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2020-11-04 12:39:58.832 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(order_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-04 12:39:58.832 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.833 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-11-04 12:39:58.833 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:description]
[DEBUG] 2020-11-04 12:39:58.833 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-11-04 12:39:58.833 [http-nio-8080-exec-10] PropertyBinder - Building property description
[DEBUG] 2020-11-04 12:39:58.833 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-04 12:39:58.833 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-04 12:39:58.834 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-11-04 12:39:58.845 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-04 12:39:58.845 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-11-04 12:39:58.845 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-11-04 12:39:58.845 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-11-04 12:39:58.845 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-04 12:39:58.845 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-11-04 12:39:58.857 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-11-04 12:39:58.861 [http-nio-8080-exec-10] PrimaryKey - Forcing column [order_id] to be non-null as it is part of the primary key for table [orders]
[DEBUG] 2020-11-04 12:39:58.864 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: hote.entity.User.orders
[DEBUG] 2020-11-04 12:39:58.867 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: hote.entity.User.orders through a foreign key
[DEBUG] 2020-11-04 12:39:58.868 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: hote.entity.User.orders -> orders
[DEBUG] 2020-11-04 12:39:58.869 [http-nio-8080-exec-10] TableBinder - Retrieving property hote.entity.Order.user
[DEBUG] 2020-11-04 12:39:58.869 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Order
[DEBUG] 2020-11-04 12:39:58.869 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-04 12:39:58.883 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-11-04 12:39:58.960 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-11-04 12:39:58.961 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-11-04 12:39:58.962 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2020-11-04 12:39:58.963 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2020-11-04 12:39:58.963 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-11-04 12:39:58.963 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2020-11-04 12:39:58.963 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-11-04 12:39:58.963 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-11-04 12:39:58.963 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2020-11-04 12:39:58.963 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-11-04 12:39:58.964 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2020-11-04 12:39:58.965 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2020-11-04 12:39:59.126 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-11-04 12:39:59.176 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-11-04 12:39:59.176 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.8, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-51-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotel, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3384fb4d, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/hotel, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-11-04 12:39:59.215 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-04 12:39:59.216 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-04 12:39:59.249 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-11-04 12:39:59.249 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-11-04 12:39:59.263 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-11-04 12:39:59.265 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-11-04 12:39:59.265 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ca301c8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@629ba7c3]
[DEBUG] 2020-11-04 12:39:59.332 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-04 12:39:59.332 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-04 12:39:59.402 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-11-04 12:39:59.402 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-11-04 12:39:59.837 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-11-04 12:39:59.837 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-11-04 12:39:59.838 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-11-04 12:39:59.838 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-11-04 12:39:59.898 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.orders
[DEBUG] 2020-11-04 12:39:59.898 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update orders set user_id=? where order_id=?
[DEBUG] 2020-11-04 12:39:59.898 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update orders set  where order_id=?
[DEBUG] 2020-11-04 12:39:59.902 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update orders set user_id=null where user_id=? and order_id=?
[DEBUG] 2020-11-04 12:39:59.902 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update orders set user_id=null where user_id=?
[DEBUG] 2020-11-04 12:39:59.913 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-11-04 12:39:59.913 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-11-04 12:39:59.913 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.id, user_.first_name as first_na2_1_, user_.last_name as last_nam3_1_, user_.user_name as user_nam4_1_ from user user_ where user_.id=?
[DEBUG] 2020-11-04 12:39:59.913 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-04 12:39:59.913 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2020-11-04 12:39:59.913 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-11-04 12:39:59.913 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-11-04 12:39:59.948 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6494418a]
[DEBUG] 2020-11-04 12:39:59.949 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-04 12:39:59.949 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-04 12:39:59.949 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-11-04 12:39:59.953 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57d11937]
[DEBUG] 2020-11-04 12:39:59.957 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c532d55]
[DEBUG] 2020-11-04 12:39:59.960 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-11-04 12:39:59.960 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-11-04 12:39:59.961 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-11-04 12:39:59.961 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-04 12:39:59.961 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:39:59.986 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:39:59.998 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - order_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {order_id1_0_2_}

[DEBUG] 2020-11-04 12:40:00.002 [http-nio-8080-exec-10] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.order_id as order_id1_0_1_, orders1_.order_id as order_id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:40:00.002 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17255e77]
[DEBUG] 2020-11-04 12:40:00.002 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-11-04 12:40:00.002 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-11-04 12:40:00.002 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-11-04 12:40:00.002 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bece87a]
[DEBUG] 2020-11-04 12:40:00.003 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa54bbc]
[DEBUG] 2020-11-04 12:40:00.003 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-11-04 12:40:00.003 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-11-04 12:40:00.003 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-11-04 12:40:00.003 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-11-04 12:40:00.003 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:40:00.003 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:40:00.007 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - order_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {order_id1_0_2_}

[DEBUG] 2020-11-04 12:40:00.007 [http-nio-8080-exec-10] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.order_id as order_id1_0_1_, orders1_.order_id as order_id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:40:00.028 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.order_id as order_id1_0_3_, orders1_.order_id as order_id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:40:00.031 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.order_id as order_id1_0_3_, orders1_.order_id as order_id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:40:00.031 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: hote.entity.Order
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select order_id from orders where order_id =?
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select order_.order_id, order_.description as descript2_0_, order_.user_id as user_id3_0_ from orders order_ where order_.order_id=?
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into orders (description, user_id, order_id) values (?, ?, ?)
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update orders set description=?, user_id=? where order_id=?
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from orders where order_id=?
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f9e4f9]
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-04 12:40:00.032 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-04 12:40:00.033 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5777de60]
[DEBUG] 2020-11-04 12:40:00.034 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-04 12:40:00.034 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-04 12:40:00.034 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-11-04 12:40:00.034 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-11-04 12:40:00.034 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-04 12:40:00.034 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:40:00.034 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:40:00.036 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-04 12:40:00.036 [http-nio-8080-exec-10] EntityLoader - Static select for entity hote.entity.Order [NONE]: select order0_.order_id as order_id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.order_id=?
[DEBUG] 2020-11-04 12:40:00.036 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e05c02e]
[DEBUG] 2020-11-04 12:40:00.036 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-04 12:40:00.036 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-04 12:40:00.037 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d18325d]
[DEBUG] 2020-11-04 12:40:00.037 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-11-04 12:40:00.037 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-11-04 12:40:00.037 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-11-04 12:40:00.037 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-11-04 12:40:00.037 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-11-04 12:40:00.037 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:40:00.037 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:40:00.038 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-04 12:40:00.042 [http-nio-8080-exec-10] EntityLoader - Static select for entity hote.entity.Order [READ]: select order0_.order_id as order_id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.order_id=?
[DEBUG] 2020-11-04 12:40:00.047 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity hote.entity.Order: select order0_.order_id as order_id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.order_id=?
[DEBUG] 2020-11-04 12:40:00.049 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Order: select order0_.order_id as order_id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.order_id=?
[DEBUG] 2020-11-04 12:40:00.065 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ed75e74]
[DEBUG] 2020-11-04 12:40:00.066 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f1765d3]
[DEBUG] 2020-11-04 12:40:00.066 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-04 12:40:00.066 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-04 12:40:00.066 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-04 12:40:00.066 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-04 12:40:00.072 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-04 12:40:00.073 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.orders)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:0>, path=[hote.entity.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:1>, path=[hote.entity.User.orders].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - order_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {order_id1_0_1_}

[DEBUG] 2020-11-04 12:40:00.073 [http-nio-8080-exec-10] CollectionLoader - Static select for collection hote.entity.User.orders: select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:00.170 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-11-04 12:40:00.171 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-11-04 12:40:00.172 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-11-04 12:40:00.195 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-11-04 12:40:00.195 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-11-04 12:40:00.200 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-11-04 12:40:00.200 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-11-04 12:40:00.204 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@322955bc
[DEBUG] 2020-11-04 12:40:00.206 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 9ecc4d97-63e0-4a2c-8a96-a114bead28bc (<unnamed>)
[DEBUG] 2020-11-04 12:40:00.206 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-11-04 12:40:00.455 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-11-04 12:40:00.537 [http-nio-8080-exec-10] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-11-04 12:40:00.581 [http-nio-8080-exec-10] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@48850b93
[DEBUG] 2020-11-04 12:40:00.653 [http-nio-8080-exec-10] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-11-04 12:40:00.664 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-04 12:40:00.688 [http-nio-8080-exec-10] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'hote'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-11-04 12:40:00.747 [http-nio-8080-exec-10] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-11-04 12:40:00.787 [http-nio-8080-exec-10] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-11-04 12:40:00.788 [http-nio-8080-exec-10] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-11-04 12:40:00.795 [http-nio-8080-exec-10] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-11-04 12:40:00.795 [http-nio-8080-exec-10] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-11-04 12:40:00.825 [http-nio-8080-exec-10] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-11-04 12:40:00.829 [http-nio-8080-exec-10] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-11-04 12:40:00.831 [http-nio-8080-exec-10] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}

[DEBUG] 2020-11-04 12:40:00.831 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-04 12:40:00.849 [http-nio-8080-exec-10] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-11-04 12:40:00.849 [http-nio-8080-exec-10] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_ from user user0_
[DEBUG] 2020-11-04 12:40:00.853 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-04 12:40:00.895 [http-nio-8080-exec-10] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_ from user user0_
[DEBUG] 2020-11-04 12:40:00.944 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-11-04 12:40:00.951 [http-nio-8080-exec-10] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:00.987 [http-nio-8080-exec-10] Loader - Result set row: 1
[DEBUG] 2020-11-04 12:40:00.988 [http-nio-8080-exec-10] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:00.988 [http-nio-8080-exec-10] Loader - Result set row: 2
[DEBUG] 2020-11-04 12:40:00.988 [http-nio-8080-exec-10] Loader - Result row: EntityKey[hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:00.990 [http-nio-8080-exec-10] Loader - Result set row: 3
[DEBUG] 2020-11-04 12:40:00.990 [http-nio-8080-exec-10] Loader - Result row: EntityKey[hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:00.990 [http-nio-8080-exec-10] Loader - Result set row: 4
[DEBUG] 2020-11-04 12:40:00.990 [http-nio-8080-exec-10] Loader - Result row: EntityKey[hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:00.990 [http-nio-8080-exec-10] Loader - Result set row: 5
[DEBUG] 2020-11-04 12:40:00.990 [http-nio-8080-exec-10] Loader - Result row: EntityKey[hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:00.992 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:00.992 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-11-04 12:40:00.992 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:00.992 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-11-04 12:40:00.992 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:00.993 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:00.993 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.015 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-11-04 12:40:01.015 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.016 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:01.016 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:01.016 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-11-04 12:40:01.016 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.016 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-11-04 12:40:01.016 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.016 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:01.016 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-11-04 12:40:01.017 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.018 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:01.018 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:01.018 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `first_name` : value = Dianne
[DEBUG] 2020-11-04 12:40:01.018 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.018 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `last_name` : value = Klein
[DEBUG] 2020-11-04 12:40:01.018 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.019 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:01.019 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.019 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user_name` : value = dklein
[DEBUG] 2020-11-04 12:40:01.019 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `first_name` : value = Dawn
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `last_name` : value = Tillman
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user_name` : value = dtillman
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.020 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:01.030 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:01.030 [http-nio-8080-exec-10] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:01.036 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:01.059 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.059 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:01.059 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.062 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:01.062 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:01.063 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:01.063 [http-nio-8080-exec-10] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:01.068 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:01.069 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.069 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:01.069 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.070 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:01.070 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:01.070 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:01.070 [http-nio-8080-exec-10] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:01.072 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:01.072 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:01.077 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:01.091 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:01.091 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:01.091 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-11-04 12:40:01.091 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond Milk, Granola
[DEBUG] 2020-11-04 12:40:01.091 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.091 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-11-04 12:40:01.091 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and creamer
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:01.092 [http-nio-8080-exec-10] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:01.098 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:01.098 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.098 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:01.098 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.098 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:01.098 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:01.098 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:01.099 [http-nio-8080-exec-10] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:01.100 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:01.100 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives 
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.104 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-11-04 12:40:01.105 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.105 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:01.105 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.105 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:01.105 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:01.105 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:01.105 [http-nio-8080-exec-10] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:01.110 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:01.113 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:01.114 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:01.114 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:01.114 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:01.114 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:01.115 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.116 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:40:01.116 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:40:01.116 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-11-04 12:40:01.116 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.116 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:01.116 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:01.118 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:01.119 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:01.119 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:01.120 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-04 12:40:31.002 [http-nio-8080-exec-6] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-11-04 12:40:31.005 [http-nio-8080-exec-6] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_ from user user0_
[DEBUG] 2020-11-04 12:40:31.006 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-11-04 12:40:31.006 [http-nio-8080-exec-6] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:31.006 [http-nio-8080-exec-6] Loader - Result set row: 1
[DEBUG] 2020-11-04 12:40:31.006 [http-nio-8080-exec-6] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:31.006 [http-nio-8080-exec-6] Loader - Result set row: 2
[DEBUG] 2020-11-04 12:40:31.006 [http-nio-8080-exec-6] Loader - Result row: EntityKey[hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:31.008 [http-nio-8080-exec-6] Loader - Result set row: 3
[DEBUG] 2020-11-04 12:40:31.008 [http-nio-8080-exec-6] Loader - Result row: EntityKey[hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:31.008 [http-nio-8080-exec-6] Loader - Result set row: 4
[DEBUG] 2020-11-04 12:40:31.008 [http-nio-8080-exec-6] Loader - Result row: EntityKey[hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:31.009 [http-nio-8080-exec-6] Loader - Result set row: 5
[DEBUG] 2020-11-04 12:40:31.009 [http-nio-8080-exec-6] Loader - Result row: EntityKey[hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.010 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:31.012 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.012 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-11-04 12:40:31.012 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.012 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:31.012 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:31.012 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-11-04 12:40:31.012 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.013 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-11-04 12:40:31.013 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.013 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:31.013 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.013 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-11-04 12:40:31.013 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.018 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:31.018 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:31.018 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-11-04 12:40:31.020 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.020 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-11-04 12:40:31.020 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.020 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:31.020 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.020 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-11-04 12:40:31.020 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.022 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:31.022 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:31.023 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `first_name` : value = Dianne
[DEBUG] 2020-11-04 12:40:31.023 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `last_name` : value = Klein
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user_name` : value = dklein
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:31.024 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `first_name` : value = Dawn
[DEBUG] 2020-11-04 12:40:31.025 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.027 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `last_name` : value = Tillman
[DEBUG] 2020-11-04 12:40:31.027 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.027 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:31.027 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.028 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user_name` : value = dtillman
[DEBUG] 2020-11-04 12:40:31.028 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.028 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:31.028 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:31.028 [http-nio-8080-exec-6] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:31.031 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:31.031 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.031 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:31.031 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.031 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:31.031 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:31.031 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:31.032 [http-nio-8080-exec-6] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:31.035 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:31.035 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.035 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:31.035 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.035 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:31.035 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:31.036 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:31.036 [http-nio-8080-exec-6] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:31.038 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:31.038 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:31.038 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:31.038 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:31.038 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:31.039 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-11-04 12:40:31.039 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond Milk, Granola
[DEBUG] 2020-11-04 12:40:31.039 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.042 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and creamer
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:31.043 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:31.046 [http-nio-8080-exec-6] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:31.048 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:31.049 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.049 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:31.049 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.049 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:31.049 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:31.049 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:31.049 [http-nio-8080-exec-6] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:31.059 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:31.060 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:31.062 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:31.064 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:31.064 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:31.064 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-11-04 12:40:31.064 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-11-04 12:40:31.064 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.064 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-11-04 12:40:31.064 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives 
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:31.065 [http-nio-8080-exec-6] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:31.068 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:31.068 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:31.068 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:31.068 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:31.068 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:31.068 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:31.069 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-04 12:40:33.973 [http-nio-8080-exec-7] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.order_id as order_id1_0_1_, orders1_.order_id as order_id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-11-04 12:40:33.976 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:33.976 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-04 12:40:33.977 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:33.977 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:33.977 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-04 12:40:33.977 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:33.979 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-11-04 12:40:33.979 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-04 12:40:33.980 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:33.983 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-11-04 12:40:33.983 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-04 12:40:33.983 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-11-04 12:40:33.984 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:33.985 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:33.988 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:33.989 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-11-04 12:40:33.989 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-04 12:40:53.813 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-11-04 12:40:53.813 [http-nio-8080-exec-4] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_ from user user0_
[DEBUG] 2020-11-04 12:40:53.816 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2020-11-04 12:40:53.816 [http-nio-8080-exec-4] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:53.816 [http-nio-8080-exec-4] Loader - Result set row: 1
[DEBUG] 2020-11-04 12:40:53.816 [http-nio-8080-exec-4] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:53.816 [http-nio-8080-exec-4] Loader - Result set row: 2
[DEBUG] 2020-11-04 12:40:53.816 [http-nio-8080-exec-4] Loader - Result row: EntityKey[hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] Loader - Result set row: 3
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] Loader - Result row: EntityKey[hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] Loader - Result set row: 4
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] Loader - Result row: EntityKey[hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] Loader - Result set row: 5
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] Loader - Result row: EntityKey[hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.817 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-11-04 12:40:53.820 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.820 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:53.820 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `first_name` : value = Dianne
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `last_name` : value = Klein
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:53.821 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.823 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user_name` : value = dklein
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.User#5]
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `first_name` : value = Dawn
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `last_name` : value = Tillman
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-04 12:40:53.824 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.826 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user_name` : value = dtillman
[DEBUG] 2020-11-04 12:40:53.827 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.827 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.User#6]
[DEBUG] 2020-11-04 12:40:53.827 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:53.828 [http-nio-8080-exec-4] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:53.830 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:53.831 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.831 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#6]
[DEBUG] 2020-11-04 12:40:53.831 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.831 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:53.831 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:53.831 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:53.831 [http-nio-8080-exec-4] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:53.832 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:53.832 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.832 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#5]
[DEBUG] 2020-11-04 12:40:53.832 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.832 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:53.832 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:53.832 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:53.832 [http-nio-8080-exec-4] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:53.833 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:53.834 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:53.834 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:53.834 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:53.836 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond Milk, Granola
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and creamer
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-11-04 12:40:53.837 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.838 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-11-04 12:40:53.838 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.838 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:53.838 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:53.838 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:53.838 [http-nio-8080-exec-4] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:53.839 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:53.839 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.839 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#3]
[DEBUG] 2020-11-04 12:40:53.839 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.839 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:53.839 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:53.840 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:53.840 [http-nio-8080-exec-4] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:53.840 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:53.842 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:53.843 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:53.844 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:53.845 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:53.845 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-11-04 12:40:53.845 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-11-04 12:40:53.845 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.845 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-11-04 12:40:53.845 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives 
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:53.846 [http-nio-8080-exec-4] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.order_id as order_id1_0_0_, orders0_.order_id as order_id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-11-04 12:40:53.848 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:53.848 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-04 12:40:53.856 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:53.856 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-04 12:40:53.856 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:40:53.857 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.858 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-11-04 12:40:53.859 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:40:53.859 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-11-04 12:40:53.859 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.859 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-04 12:40:53.859 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-04 12:40:53.859 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [hote.entity.Order#12]
[DEBUG] 2020-11-04 12:40:53.859 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.860 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-11-04 12:40:53.861 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-11-04 12:40:53.865 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-04 12:40:53.865 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-04 12:40:53.865 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
