[DEBUG] 2020-10-07 10:11:54.948 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-07 10:11:55.028 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-07 10:11:55.094 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-10-07 10:11:55.994 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-10-07 10:11:56.005 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-10-07 10:11:57.149 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-07 10:11:58.444 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-07 10:11:58.564 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-07 10:11:58.577 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-10-07 10:11:58.691 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-10-07 10:11:58.891 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@295bf2a
[DEBUG] 2020-10-07 10:11:58.892 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@295bf2a
[DEBUG] 2020-10-07 10:11:58.892 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@295bf2a
[DEBUG] 2020-10-07 10:11:58.893 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4eb1c69
[DEBUG] 2020-10-07 10:11:58.902 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18460128
[DEBUG] 2020-10-07 10:11:58.906 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a08078c
[DEBUG] 2020-10-07 10:11:58.908 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1174a305
[DEBUG] 2020-10-07 10:11:58.915 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1174a305
[DEBUG] 2020-10-07 10:11:58.915 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1174a305
[DEBUG] 2020-10-07 10:11:58.918 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@987455b
[DEBUG] 2020-10-07 10:11:58.929 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@987455b
[DEBUG] 2020-10-07 10:11:58.929 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@987455b
[DEBUG] 2020-10-07 10:11:58.936 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@20576557
[DEBUG] 2020-10-07 10:11:58.937 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@20576557
[DEBUG] 2020-10-07 10:11:58.937 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@20576557
[DEBUG] 2020-10-07 10:11:58.949 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1bc776b7
[DEBUG] 2020-10-07 10:11:58.950 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1bc776b7
[DEBUG] 2020-10-07 10:11:58.953 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bc776b7
[DEBUG] 2020-10-07 10:11:58.965 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ec7bce0
[DEBUG] 2020-10-07 10:11:58.965 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ec7bce0
[DEBUG] 2020-10-07 10:11:58.965 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ec7bce0
[DEBUG] 2020-10-07 10:11:58.970 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6b69761b
[DEBUG] 2020-10-07 10:11:58.971 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6b69761b
[DEBUG] 2020-10-07 10:11:58.976 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b69761b
[DEBUG] 2020-10-07 10:11:58.978 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e47a03
[DEBUG] 2020-10-07 10:11:58.981 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e47a03
[DEBUG] 2020-10-07 10:11:58.981 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e47a03
[DEBUG] 2020-10-07 10:11:58.983 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@278667fd
[DEBUG] 2020-10-07 10:11:58.983 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@278667fd
[DEBUG] 2020-10-07 10:11:58.991 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1000d54d
[DEBUG] 2020-10-07 10:11:58.991 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1000d54d
[DEBUG] 2020-10-07 10:11:58.998 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7636823f
[DEBUG] 2020-10-07 10:11:58.998 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7636823f
[DEBUG] 2020-10-07 10:11:58.999 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7fd26ad8
[DEBUG] 2020-10-07 10:11:59.002 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7cea0110
[DEBUG] 2020-10-07 10:11:59.005 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1729ec00
[DEBUG] 2020-10-07 10:11:59.010 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1729ec00
[DEBUG] 2020-10-07 10:11:59.017 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@459b187a
[DEBUG] 2020-10-07 10:11:59.018 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@459b187a
[DEBUG] 2020-10-07 10:11:59.060 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5f7da3d3
[DEBUG] 2020-10-07 10:11:59.063 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5f7da3d3
[DEBUG] 2020-10-07 10:11:59.069 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@77ec6a3d
[DEBUG] 2020-10-07 10:11:59.073 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@77ec6a3d
[DEBUG] 2020-10-07 10:11:59.079 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@245ec1a6
[DEBUG] 2020-10-07 10:11:59.085 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@245ec1a6
[DEBUG] 2020-10-07 10:11:59.088 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2016f509
[DEBUG] 2020-10-07 10:11:59.089 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2016f509
[DEBUG] 2020-10-07 10:11:59.097 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2123064f
[DEBUG] 2020-10-07 10:11:59.098 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2123064f
[DEBUG] 2020-10-07 10:11:59.112 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@73fb1d7f
[DEBUG] 2020-10-07 10:11:59.113 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@73fb1d7f
[DEBUG] 2020-10-07 10:11:59.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ecdbab8
[DEBUG] 2020-10-07 10:11:59.117 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ecdbab8
[DEBUG] 2020-10-07 10:11:59.126 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c251f90
[DEBUG] 2020-10-07 10:11:59.127 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c251f90
[DEBUG] 2020-10-07 10:11:59.132 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@10afe71a
[DEBUG] 2020-10-07 10:11:59.139 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@10afe71a
[DEBUG] 2020-10-07 10:11:59.142 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@9fc9f91
[DEBUG] 2020-10-07 10:11:59.143 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9fc9f91
[DEBUG] 2020-10-07 10:11:59.143 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9fc9f91
[DEBUG] 2020-10-07 10:11:59.149 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17690e14
[DEBUG] 2020-10-07 10:11:59.153 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@75961f16
[DEBUG] 2020-10-07 10:11:59.153 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75961f16
[DEBUG] 2020-10-07 10:11:59.153 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75961f16
[DEBUG] 2020-10-07 10:11:59.155 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3bddc676
[DEBUG] 2020-10-07 10:11:59.161 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4d3ca6c7
[DEBUG] 2020-10-07 10:11:59.171 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d3ca6c7
[DEBUG] 2020-10-07 10:11:59.174 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4beabeec
[DEBUG] 2020-10-07 10:11:59.174 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4beabeec
[DEBUG] 2020-10-07 10:11:59.179 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@18da4dd
[DEBUG] 2020-10-07 10:11:59.179 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@18da4dd
[DEBUG] 2020-10-07 10:11:59.186 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7d04529c
[DEBUG] 2020-10-07 10:11:59.187 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d04529c
[DEBUG] 2020-10-07 10:11:59.189 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@720bf653
[DEBUG] 2020-10-07 10:11:59.189 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@720bf653
[DEBUG] 2020-10-07 10:11:59.193 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70c53dbe
[DEBUG] 2020-10-07 10:11:59.198 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2241f05b
[DEBUG] 2020-10-07 10:11:59.198 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2241f05b
[DEBUG] 2020-10-07 10:11:59.198 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2241f05b
[DEBUG] 2020-10-07 10:11:59.205 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3414a8c3
[DEBUG] 2020-10-07 10:11:59.205 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3414a8c3
[DEBUG] 2020-10-07 10:11:59.205 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3414a8c3
[DEBUG] 2020-10-07 10:11:59.213 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a67b4ec
[DEBUG] 2020-10-07 10:11:59.214 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@79fd6f95
[DEBUG] 2020-10-07 10:11:59.221 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@113e13f9
[DEBUG] 2020-10-07 10:11:59.222 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@113e13f9
[DEBUG] 2020-10-07 10:11:59.222 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@113e13f9
[DEBUG] 2020-10-07 10:11:59.224 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@124ac145
[DEBUG] 2020-10-07 10:11:59.226 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@124ac145
[DEBUG] 2020-10-07 10:11:59.229 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@124ac145
[DEBUG] 2020-10-07 10:11:59.230 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@188cbcde
[DEBUG] 2020-10-07 10:11:59.231 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4af70944
[DEBUG] 2020-10-07 10:11:59.240 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@65c33b92
[DEBUG] 2020-10-07 10:11:59.240 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@65c33b92
[DEBUG] 2020-10-07 10:11:59.242 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78cd163b
[DEBUG] 2020-10-07 10:11:59.249 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@711d1a52
[DEBUG] 2020-10-07 10:11:59.249 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@711d1a52
[DEBUG] 2020-10-07 10:11:59.258 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4068102e
[DEBUG] 2020-10-07 10:11:59.259 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4068102e
[DEBUG] 2020-10-07 10:11:59.260 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21079a12
[DEBUG] 2020-10-07 10:11:59.261 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2b8bb184
[DEBUG] 2020-10-07 10:11:59.264 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@14982a82
[DEBUG] 2020-10-07 10:11:59.285 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2436ea2f
[DEBUG] 2020-10-07 10:11:59.285 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2436ea2f
[DEBUG] 2020-10-07 10:11:59.286 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f038248
[DEBUG] 2020-10-07 10:11:59.292 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@78e22d35
[DEBUG] 2020-10-07 10:11:59.292 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e8a1ab4
[DEBUG] 2020-10-07 10:11:59.292 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@59f93db8
[DEBUG] 2020-10-07 10:11:59.292 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1aabf50d
[DEBUG] 2020-10-07 10:11:59.293 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73c9e8e8
[DEBUG] 2020-10-07 10:11:59.293 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@de8039f
[DEBUG] 2020-10-07 10:11:59.294 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1deceb67
[DEBUG] 2020-10-07 10:11:59.538 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-07 10:11:59.554 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-07 10:11:59.564 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-07 10:11:59.565 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-07 10:11:59.566 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-07 10:11:59.578 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-07 10:11:59.590 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-07 10:11:59.604 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-07 10:11:59.619 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-07 10:11:59.627 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-07 10:11:59.628 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-07 10:11:59.637 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-07 10:11:59.637 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-07 10:11:59.649 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-07 10:11:59.695 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotel_test
[INFO ] 2020-10-07 10:11:59.696 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-07 10:11:59.699 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-07 10:12:00.637 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-07 10:12:01.435 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-07 10:12:01.446 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-07 10:12:01.446 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-07 10:12:01.629 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-07 10:12:01.768 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-07 10:12:01.955 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-07 10:12:02.334 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-07 10:12:02.358 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31db34da]
[DEBUG] 2020-10-07 10:12:02.912 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-10-07 10:12:03.049 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-07 10:12:03.083 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-10-07 10:12:03.103 [main] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-10-07 10:12:03.314 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.325 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-07 10:12:03.340 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-10-07 10:12:03.344 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-07 10:12:03.358 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-07 10:12:03.376 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-07 10:12:03.387 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.395 [main] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-10-07 10:12:03.395 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-10-07 10:12:03.396 [main] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-10-07 10:12:03.396 [main] PropertyBinder - Building property first_name
[DEBUG] 2020-10-07 10:12:03.400 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.400 [main] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-10-07 10:12:03.400 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-10-07 10:12:03.400 [main] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-10-07 10:12:03.401 [main] PropertyBinder - Building property last_name
[DEBUG] 2020-10-07 10:12:03.409 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-07 10:12:03.410 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.420 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.496 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.505 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.506 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-07 10:12:03.514 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-07 10:12:03.514 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-07 10:12:03.516 [main] CollectionBinder - Collection role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:03.530 [main] PropertyBinder - Building property orders
[DEBUG] 2020-10-07 10:12:03.533 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.534 [main] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-10-07 10:12:03.534 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-10-07 10:12:03.534 [main] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-10-07 10:12:03.541 [main] PropertyBinder - Building property user_name
[DEBUG] 2020-10-07 10:12:03.544 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Order
[DEBUG] 2020-10-07 10:12:03.548 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-07 10:12:03.548 [main] EntityBinder - Import with entity name Order
[DEBUG] 2020-10-07 10:12:03.549 [main] EntityBinder - Bind entity hote.entity.Order on table orders
[DEBUG] 2020-10-07 10:12:03.568 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.570 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-07 10:12:03.570 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:id]
[DEBUG] 2020-10-07 10:12:03.570 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-07 10:12:03.571 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-07 10:12:03.574 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-07 10:12:03.574 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.574 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-10-07 10:12:03.575 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:description]
[DEBUG] 2020-10-07 10:12:03.582 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-10-07 10:12:03.583 [main] PropertyBinder - Building property description
[DEBUG] 2020-10-07 10:12:03.583 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-07 10:12:03.583 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-07 10:12:03.587 [main] PropertyBinder - Building property user
[DEBUG] 2020-10-07 10:12:03.593 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-10-07 10:12:03.593 [main] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-10-07 10:12:03.594 [main] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-10-07 10:12:03.594 [main] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-10-07 10:12:03.595 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-10-07 10:12:03.597 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-10-07 10:12:03.620 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-10-07 10:12:03.621 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [orders]
[DEBUG] 2020-10-07 10:12:03.621 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:03.622 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.orders through a foreign key
[DEBUG] 2020-10-07 10:12:03.624 [main] CollectionBinder - Mapping collection: hote.entity.User.orders -> orders
[DEBUG] 2020-10-07 10:12:03.641 [main] TableBinder - Retrieving property hote.entity.Order.user
[DEBUG] 2020-10-07 10:12:03.642 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Order
[DEBUG] 2020-10-07 10:12:03.642 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-10-07 10:12:03.662 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-10-07 10:12:03.870 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-10-07 10:12:03.875 [main] Settings - SessionFactory name : null
[DEBUG] 2020-10-07 10:12:03.875 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-10-07 10:12:03.876 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-10-07 10:12:03.876 [main] Settings - Statistics: disabled
[DEBUG] 2020-10-07 10:12:03.876 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-10-07 10:12:03.876 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-10-07 10:12:03.876 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-10-07 10:12:03.876 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-10-07 10:12:03.885 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-10-07 10:12:03.885 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-10-07 10:12:03.885 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-10-07 10:12:03.885 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-10-07 10:12:03.885 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-10-07 10:12:03.886 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-10-07 10:12:03.886 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-10-07 10:12:03.886 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-10-07 10:12:03.886 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-10-07 10:12:03.886 [main] Settings - Named query checking : enabled
[DEBUG] 2020-10-07 10:12:03.886 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-10-07 10:12:03.886 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-10-07 10:12:03.887 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-10-07 10:12:03.887 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-10-07 10:12:03.887 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-10-07 10:12:03.887 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-10-07 10:12:03.887 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-10-07 10:12:03.887 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-10-07 10:12:03.888 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-10-07 10:12:03.888 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-10-07 10:12:03.888 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-10-07 10:12:03.888 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-10-07 10:12:03.888 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-10-07 10:12:03.888 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-10-07 10:12:03.889 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-10-07 10:12:03.893 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-10-07 10:12:03.893 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-10-07 10:12:03.893 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-10-07 10:12:03.893 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-10-07 10:12:03.893 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-10-07 10:12:04.265 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-10-07 10:12:04.369 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-10-07 10:12:04.376 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/snap/intellij-idea-ultimate/253/lib/idea_rt.jar:/snap/intellij-idea-ultimate/253/plugins/junit/lib/junit5-rt.jar:/snap/intellij-idea-ultimate/253/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket41071, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotel_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/HotelWebsie, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@19b02dfd, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hotel_test, java.class.version=55.0}
[DEBUG] 2020-10-07 10:12:04.546 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-10-07 10:12:04.547 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-10-07 10:12:04.549 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-10-07 10:12:04.549 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4b56b031]
[DEBUG] 2020-10-07 10:12:04.971 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-10-07 10:12:04.974 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-10-07 10:12:05.088 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-10-07 10:12:05.093 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-10-07 10:12:06.639 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-10-07 10:12:06.644 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-10-07 10:12:06.645 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-10-07 10:12:06.645 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-10-07 10:12:06.860 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:06.860 [main] AbstractCollectionPersister -  Row insert: update orders set user_id=? where id=?
[DEBUG] 2020-10-07 10:12:06.861 [main] AbstractCollectionPersister -  Row update: update orders set  where id=?
[DEBUG] 2020-10-07 10:12:06.861 [main] AbstractCollectionPersister -  Row delete: update orders set user_id=null where user_id=? and id=?
[DEBUG] 2020-10-07 10:12:06.861 [main] AbstractCollectionPersister -  One-shot delete: update orders set user_id=null where user_id=?
[DEBUG] 2020-10-07 10:12:06.880 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-10-07 10:12:06.880 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-10-07 10:12:06.881 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.first_name as first_na2_1_, user_.last_name as last_nam3_1_, user_.user_name as user_nam4_1_ from user user_ where user_.id=?
[DEBUG] 2020-10-07 10:12:06.885 [main] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-10-07 10:12:06.885 [main] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2020-10-07 10:12:06.885 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-10-07 10:12:06.885 [main] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-10-07 10:12:07.034 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b33256]
[DEBUG] 2020-10-07 10:12:07.039 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-10-07 10:12:07.039 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-10-07 10:12:07.039 [main] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-10-07 10:12:07.068 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bcdd11]
[DEBUG] 2020-10-07 10:12:07.087 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1aa9]
[DEBUG] 2020-10-07 10:12:07.092 [main] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-10-07 10:12:07.093 [main] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-10-07 10:12:07.093 [main] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-10-07 10:12:07.095 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-10-07 10:12:07.095 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-07 10:12:07.203 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-07 10:12:07.236 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-10-07 10:12:07.261 [main] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:07.261 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ac4915e]
[DEBUG] 2020-10-07 10:12:07.262 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-10-07 10:12:07.262 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-10-07 10:12:07.262 [main] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-10-07 10:12:07.262 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cc2c551]
[DEBUG] 2020-10-07 10:12:07.263 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d84b3a2]
[DEBUG] 2020-10-07 10:12:07.263 [main] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-10-07 10:12:07.263 [main] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-10-07 10:12:07.263 [main] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-10-07 10:12:07.264 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-10-07 10:12:07.264 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-07 10:12:07.264 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-07 10:12:07.273 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-10-07 10:12:07.274 [main] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:07.347 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.id as id1_0_3_, orders1_.id as id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:07.352 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.id as id1_0_3_, orders1_.id as id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:07.352 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Order
[DEBUG] 2020-10-07 10:12:07.353 [main] AbstractEntityPersister -  Version select: select id from orders where id =?
[DEBUG] 2020-10-07 10:12:07.353 [main] AbstractEntityPersister -  Snapshot select: select order_.id, order_.description as descript2_0_, order_.user_id as user_id3_0_ from orders order_ where order_.id=?
[DEBUG] 2020-10-07 10:12:07.353 [main] AbstractEntityPersister -  Insert 0: insert into orders (description, user_id, id) values (?, ?, ?)
[DEBUG] 2020-10-07 10:12:07.353 [main] AbstractEntityPersister -  Update 0: update orders set description=?, user_id=? where id=?
[DEBUG] 2020-10-07 10:12:07.353 [main] AbstractEntityPersister -  Delete 0: delete from orders where id=?
[DEBUG] 2020-10-07 10:12:07.353 [main] AbstractEntityPersister -  Identity insert: insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-10-07 10:12:07.354 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7523d5a1]
[DEBUG] 2020-10-07 10:12:07.355 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-07 10:12:07.360 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-07 10:12:07.360 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61853c7e]
[DEBUG] 2020-10-07 10:12:07.362 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-10-07 10:12:07.362 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-10-07 10:12:07.362 [main] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-10-07 10:12:07.363 [main] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-10-07 10:12:07.363 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-10-07 10:12:07.363 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-07 10:12:07.364 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-07 10:12:07.370 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-10-07 10:12:07.370 [main] EntityLoader - Static select for entity hote.entity.Order [NONE]: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-07 10:12:07.371 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ae924f1]
[DEBUG] 2020-10-07 10:12:07.371 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-07 10:12:07.371 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-07 10:12:07.372 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27bcb4ad]
[DEBUG] 2020-10-07 10:12:07.373 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-10-07 10:12:07.373 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-10-07 10:12:07.373 [main] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-10-07 10:12:07.373 [main] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-10-07 10:12:07.374 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-10-07 10:12:07.374 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-07 10:12:07.383 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-07 10:12:07.384 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-10-07 10:12:07.384 [main] EntityLoader - Static select for entity hote.entity.Order [READ]: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-07 10:12:07.385 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Order: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.id=?
[DEBUG] 2020-10-07 10:12:07.387 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Order: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.id=?
[DEBUG] 2020-10-07 10:12:07.418 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4217bce6]
[DEBUG] 2020-10-07 10:12:07.419 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa752bb]
[DEBUG] 2020-10-07 10:12:07.419 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-07 10:12:07.419 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-07 10:12:07.420 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-10-07 10:12:07.420 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-07 10:12:07.422 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-07 10:12:07.431 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.orders)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:0>, path=[hote.entity.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:1>, path=[hote.entity.User.orders].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-10-07 10:12:07.433 [main] CollectionLoader - Static select for collection hote.entity.User.orders: select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:07.627 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-10-07 10:12:07.630 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-10-07 10:12:07.632 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-10-07 10:12:07.652 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-10-07 10:12:07.652 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-10-07 10:12:07.661 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-10-07 10:12:07.665 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-10-07 10:12:07.672 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b75b890
[DEBUG] 2020-10-07 10:12:07.676 [main] SessionFactoryRegistry - Registering SessionFactory: 88d16945-f4c9-4465-b5b7-3eabaaa15864 (<unnamed>)
[DEBUG] 2020-10-07 10:12:07.676 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-10-07 10:12:08.164 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-10-07 10:12:08.301 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-07 10:12:08.508 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:08.517 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:08.586 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:08.592 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:08.593 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:08.593 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:08.593 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:08.605 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:08.605 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:08.605 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:08.605 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:08.605 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:08.605 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:08.609 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:08.611 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:08.688 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:08.689 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:08.690 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:08.691 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:08.710 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:08.710 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:08.720 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:08.744 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:08.745 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:08.746 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:08.747 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:08.753 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:08.753 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:08.754 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:08.754 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:08.754 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:08.754 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:08.755 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:08.755 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:08.756 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:08.756 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:08.756 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:08.758 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#2
[DEBUG] 2020-10-07 10:12:08.758 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:08.786 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-07 10:12:08.787 [main] TransactionImpl - begin
[DEBUG] 2020-10-07 10:12:08.844 [main] TransactionImpl - committing
[DEBUG] 2020-10-07 10:12:08.845 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-07 10:12:08.845 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-07 10:12:08.852 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-10-07 10:12:08.852 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-10-07 10:12:08.854 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-07 10:12:08.861 [main] EntityPrinter - hote.entity.Order{description=Books, id=2, user=hote.entity.User#2}
[DEBUG] 2020-10-07 10:12:08.902 [main] SQL - delete from orders where id=?
[DEBUG] 2020-10-07 10:12:08.940 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:08.945 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:08.946 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-10-07 10:12:08.947 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-07 10:12:08.956 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:08.959 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#2
[DEBUG] 2020-10-07 10:12:08.960 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:09.305 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0
[DEBUG] 2020-10-07 10:12:09.394 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@194911c1
[DEBUG] 2020-10-07 10:12:09.635 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0
[DEBUG] 2020-10-07 10:12:09.661 [main] HqlParser - weakKeywords() : new LT(1) token - ["Order",<108> previously: <41>,line=1,col=41,possibleID=true]
[DEBUG] 2020-10-07 10:12:09.663 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:09.705 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'hote'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Order'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-10-07 10:12:09.905 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:09.988 [main] FromElement - FromClause{level=1} : hote.entity.Order (generatedAlias0) -> order0_
[DEBUG] 2020-10-07 10:12:09.993 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-07 10:12:10.001 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:10.001 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} order0_.id ) ( FromClause{level=1} orders order0_ ) )
[DEBUG] 2020-10-07 10:12:10.047 [main] JoinProcessor - Using FROM fragment [orders order0_]
[DEBUG] 2020-10-07 10:12:10.052 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:10.057 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.id as id1_0_' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.description as descript2_0_, order0_.user_id as user_id3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'orders order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=orders,tableAlias=order0_,origin=null,columns={,className=hote.entity.Order}}

[DEBUG] 2020-10-07 10:12:10.057 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:10.136 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0
[DEBUG] 2020-10-07 10:12:10.137 [main] QueryTranslatorImpl - SQL: select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_
[DEBUG] 2020-10-07 10:12:10.137 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:10.223 [main] SQL - select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_
[DEBUG] 2020-10-07 10:12:10.240 [main] Loader - Result set row: 0
[DEBUG] 2020-10-07 10:12:10.246 [main] Loader - Result row: EntityKey[hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:10.247 [main] Loader - Result set row: 1
[DEBUG] 2020-10-07 10:12:10.248 [main] Loader - Result row: EntityKey[hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:10.253 [main] Loader - Result set row: 2
[DEBUG] 2020-10-07 10:12:10.254 [main] Loader - Result row: EntityKey[hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:10.257 [main] Loader - Result set row: 3
[DEBUG] 2020-10-07 10:12:10.257 [main] Loader - Result row: EntityKey[hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:10.258 [main] Loader - Result set row: 4
[DEBUG] 2020-10-07 10:12:10.259 [main] Loader - Result row: EntityKey[hote.entity.Order#5]
[DEBUG] 2020-10-07 10:12:10.259 [main] Loader - Result set row: 5
[DEBUG] 2020-10-07 10:12:10.260 [main] Loader - Result row: EntityKey[hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:10.265 [main] Loader - Result set row: 6
[DEBUG] 2020-10-07 10:12:10.265 [main] Loader - Result row: EntityKey[hote.entity.Order#7]
[DEBUG] 2020-10-07 10:12:10.266 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:10.267 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-07 10:12:10.268 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.276 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:10.277 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.277 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:10.294 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:10.294 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.295 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:10.304 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:10.305 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.305 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:10.308 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-07 10:12:10.308 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.308 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:10.309 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:10.309 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-07 10:12:10.309 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.309 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-07 10:12:10.309 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.309 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:10.309 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.310 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-07 10:12:10.310 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.310 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:10.310 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:10.310 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:10.311 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:10.311 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:10.311 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-10-07 10:12:10.312 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:10.312 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:10.312 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:10.312 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.324 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:10.324 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.325 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:10.332 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:10.333 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.333 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:10.334 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:10.334 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.335 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:10.335 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:10.335 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:10.335 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.335 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:10.336 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.336 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:10.336 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.336 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:10.343 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.343 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:10.343 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:10.344 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:10.344 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:10.345 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:10.345 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-07 10:12:10.345 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:10.345 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:10.345 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:10.346 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.346 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:10.346 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.357 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:10.357 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:10.357 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-07 10:12:10.358 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.358 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:10.358 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.360 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:10.360 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-10-07 10:12:10.361 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond, 
[DEBUG] 2020-10-07 10:12:10.361 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.361 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-07 10:12:10.361 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.361 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:10.377 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:10.378 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.380 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:10.381 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:10.381 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.381 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:10.382 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-10-07 10:12:10.382 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-10-07 10:12:10.382 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.382 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-10-07 10:12:10.382 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.382 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:10.382 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.383 [main] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-10-07 10:12:10.385 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.388 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-10-07 10:12:10.388 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:10.389 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:10.392 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:10.392 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:10.392 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#4
[DEBUG] 2020-10-07 10:12:10.393 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-10-07 10:12:10.393 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:10.393 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-07 10:12:10.393 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.393 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:10.393 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.394 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:10.394 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-10-07 10:12:10.394 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and cremenr
[DEBUG] 2020-10-07 10:12:10.394 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.394 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-07 10:12:10.394 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.395 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-10-07 10:12:10.411 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:10.728 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.description=:param0
[DEBUG] 2020-10-07 10:12:10.736 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0 where generatedAlias0.description=:param0
[DEBUG] 2020-10-07 10:12:10.745 [main] HqlParser - weakKeywords() : new LT(1) token - ["Order",<108> previously: <41>,line=1,col=41,possibleID=true]
[DEBUG] 2020-10-07 10:12:10.757 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:10.759 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-07 10:12:10.759 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:10.759 [main] FromElement - FromClause{level=1} : hote.entity.Order (generatedAlias0) -> order0_
[DEBUG] 2020-10-07 10:12:10.772 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-07 10:12:10.782 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-07 10:12:10.786 [main] DotNode - getDataType() : description -> org.hibernate.type.StringType@7636823f
[DEBUG] 2020-10-07 10:12:10.795 [main] FromReferenceNode - Resolved : generatedAlias0.description -> order0_.description
[DEBUG] 2020-10-07 10:12:10.803 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:10.805 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} order0_.id ) ( FromClause{level=1} orders order0_ ) ( where ( = ( order0_.description order0_.id description ) ? ) ) )
[DEBUG] 2020-10-07 10:12:10.806 [main] JoinProcessor - Using FROM fragment [orders order0_]
[DEBUG] 2020-10-07 10:12:10.812 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:10.814 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.id as id1_0_' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.description as descript2_0_, order0_.user_id as user_id3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'orders order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=orders,tableAlias=order0_,origin=null,columns={,className=hote.entity.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=generatedAlias0.description,tableAlias=order0_,className=hote.entity.Order,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'order0_.id' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7636823f}

[DEBUG] 2020-10-07 10:12:10.817 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:10.817 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0 where generatedAlias0.description=:param0
[DEBUG] 2020-10-07 10:12:10.817 [main] QueryTranslatorImpl - SQL: select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_ where order0_.description=?
[DEBUG] 2020-10-07 10:12:10.817 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:10.841 [main] SQL - select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_ where order0_.description=?
[DEBUG] 2020-10-07 10:12:10.851 [main] Loader - Result set row: 0
[DEBUG] 2020-10-07 10:12:10.851 [main] Loader - Result row: EntityKey[hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:10.852 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:10.856 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:10.856 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.857 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:10.857 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.857 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:10.873 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:10.873 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.874 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:10.875 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:10.875 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:10.885 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:10.886 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:10.886 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:10.886 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.887 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:10.887 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.887 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:10.887 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.887 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:10.898 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.898 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:10.898 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:10.898 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:10.899 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.899 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:10.899 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:10.899 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:10.899 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:10.900 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:10.900 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:10.900 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:10.900 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-07 10:12:10.912 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:10.917 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:11.112 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.description like :param0
[DEBUG] 2020-10-07 10:12:11.119 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0 where generatedAlias0.description like :param0
[DEBUG] 2020-10-07 10:12:11.124 [main] HqlParser - weakKeywords() : new LT(1) token - ["Order",<108> previously: <41>,line=1,col=41,possibleID=true]
[DEBUG] 2020-10-07 10:12:11.125 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:11.131 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-07 10:12:11.132 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:11.132 [main] FromElement - FromClause{level=1} : hote.entity.Order (generatedAlias0) -> order0_
[DEBUG] 2020-10-07 10:12:11.132 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-07 10:12:11.136 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-07 10:12:11.141 [main] DotNode - getDataType() : description -> org.hibernate.type.StringType@7636823f
[DEBUG] 2020-10-07 10:12:11.141 [main] FromReferenceNode - Resolved : generatedAlias0.description -> order0_.description
[DEBUG] 2020-10-07 10:12:11.142 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:11.142 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} order0_.id ) ( FromClause{level=1} orders order0_ ) ( where ( like ( order0_.description order0_.id description ) ? ) ) )
[DEBUG] 2020-10-07 10:12:11.143 [main] JoinProcessor - Using FROM fragment [orders order0_]
[DEBUG] 2020-10-07 10:12:11.143 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:11.144 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.id as id1_0_' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.description as descript2_0_, order0_.user_id as user_id3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'orders order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=orders,tableAlias=order0_,origin=null,columns={,className=hote.entity.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'order0_.description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=generatedAlias0.description,tableAlias=order0_,className=hote.entity.Order,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'order0_.id' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7636823f}

[DEBUG] 2020-10-07 10:12:11.144 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:11.144 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0 where generatedAlias0.description like :param0
[DEBUG] 2020-10-07 10:12:11.150 [main] QueryTranslatorImpl - SQL: select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_ where order0_.description like ?
[DEBUG] 2020-10-07 10:12:11.150 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:11.151 [main] SQL - select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_ where order0_.description like ?
[DEBUG] 2020-10-07 10:12:11.164 [main] Loader - Result set row: 0
[DEBUG] 2020-10-07 10:12:11.165 [main] Loader - Result row: EntityKey[hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:11.165 [main] Loader - Result set row: 1
[DEBUG] 2020-10-07 10:12:11.165 [main] Loader - Result row: EntityKey[hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:11.174 [main] Loader - Result set row: 2
[DEBUG] 2020-10-07 10:12:11.174 [main] Loader - Result row: EntityKey[hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:11.177 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:11.177 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:11.177 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.177 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:11.177 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.178 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:11.181 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.182 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.183 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.183 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:11.183 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.184 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.184 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:11.184 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:11.184 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.184 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:11.191 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.192 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:11.192 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.192 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:11.192 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.193 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:11.193 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:11.193 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:11.193 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.193 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:11.193 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.194 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:11.194 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.194 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.194 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.201 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.201 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-07 10:12:11.201 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:11.202 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:11.202 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-07 10:12:11.202 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.202 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.202 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.202 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:11.213 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.213 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.225 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.226 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:11.226 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.226 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.227 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-07 10:12:11.227 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.227 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.228 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:11.228 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-07 10:12:11.228 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.228 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-07 10:12:11.232 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.233 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:11.233 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.233 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-07 10:12:11.233 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.233 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:11.233 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:11.233 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-07 10:12:11.234 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.234 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.234 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.234 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:11.234 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.235 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.235 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.235 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.235 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-10-07 10:12:11.236 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:11.236 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:11.236 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-07 10:12:11.236 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.236 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.245 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.245 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:11.249 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:11.393 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-07 10:12:11.406 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.406 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.407 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:11.408 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:11.408 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.411 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:11.411 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.411 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:11.412 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.413 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:11.413 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.413 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.414 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:11.426 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.426 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.434 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.435 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:11.435 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.436 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:11.436 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:11.436 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.436 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:11.436 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.437 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:11.441 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.441 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.441 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.442 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.443 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:11.443 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#3
[DEBUG] 2020-10-07 10:12:11.443 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:11.466 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-07 10:12:11.470 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.471 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.472 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:11.481 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:11.481 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.481 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:11.481 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.482 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:11.483 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.483 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:11.483 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.483 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.491 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:11.497 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.497 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.498 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.498 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:11.499 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.499 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:11.499 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:11.499 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.500 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:11.500 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.500 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:11.500 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.500 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:11.500 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.510 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.511 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:11.511 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#3
[DEBUG] 2020-10-07 10:12:11.513 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:11.688 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:11.703 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.703 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.708 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.708 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:11.710 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.711 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.716 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-07 10:12:11.716 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.720 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.720 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:11.720 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-07 10:12:11.721 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.721 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-07 10:12:11.721 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.721 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:11.721 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.721 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-07 10:12:11.721 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.725 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:11.725 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:11.725 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-07 10:12:11.725 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.725 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.725 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.725 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:11.726 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:11.726 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-07 10:12:11.726 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.726 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.726 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.726 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:11.726 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:11.727 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-07 10:12:11.727 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.727 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.727 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.727 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:11.731 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.732 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.733 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.733 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.734 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-10-07 10:12:11.734 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:11.754 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-07 10:12:11.755 [main] TransactionImpl - begin
[DEBUG] 2020-10-07 10:12:11.783 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-10-07 10:12:11.788 [main] SQL - insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-10-07 10:12:11.836 [main] IdentifierGeneratorHelper - Natively generated identity: 40
[DEBUG] 2020-10-07 10:12:11.837 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.852 [main] TransactionImpl - committing
[DEBUG] 2020-10-07 10:12:11.852 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-07 10:12:11.852 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-07 10:12:11.858 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-10-07 10:12:11.858 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-10-07 10:12:11.858 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-07 10:12:11.859 [main] EntityPrinter - hote.entity.Order{description=Plates, id=40, user=hote.entity.User#1}
[DEBUG] 2020-10-07 10:12:11.864 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:11.874 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:11.887 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-07 10:12:11.897 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.898 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:11.909 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#40]
[DEBUG] 2020-10-07 10:12:11.909 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-10-07 10:12:11.909 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.909 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.909 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.910 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#40]
[DEBUG] 2020-10-07 10:12:11.910 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:11.910 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-07 10:12:11.911 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.911 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-07 10:12:11.911 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.911 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:11.918 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.918 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-07 10:12:11.919 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.919 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:11.919 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.920 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.922 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:11.928 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.929 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:11.932 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.936 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:11.937 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.937 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-07 10:12:11.938 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.939 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-10-07 10:12:11.947 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.948 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:11.948 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-07 10:12:11.948 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.948 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.948 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.948 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:11.949 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:11.949 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-07 10:12:11.949 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.956 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.956 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.957 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:11.957 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:11.957 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-07 10:12:11.957 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.957 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:11.957 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:11.957 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:11.958 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.958 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:11.958 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:11.958 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:11.958 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:11.959 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#40
[DEBUG] 2020-10-07 10:12:11.959 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.119 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-07 10:12:12.130 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:12.130 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:12.141 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:12.141 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:12.141 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.141 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:12.142 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.142 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:12.143 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:12.143 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:12.143 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.143 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:12.143 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.143 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:12.143 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.149 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:12.149 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.149 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:12.149 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:12.150 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:12.150 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:12.161 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:12.161 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:12.162 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:12.163 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:12.163 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:12.163 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:12.163 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:12.164 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.164 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:12.164 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.164 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:12.164 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:12.164 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:12.164 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:12.164 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:12.171 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:12.171 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#2
[DEBUG] 2020-10-07 10:12:12.171 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.453 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:12.464 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:12.465 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:12.470 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:12.470 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-10-07 10:12:12.470 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-10-07 10:12:12.470 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.470 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-10-07 10:12:12.470 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.470 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:12.472 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.473 [main] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-10-07 10:12:12.473 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.473 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-10-07 10:12:12.473 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:12.473 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:12.473 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:12.474 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:12.474 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#3
[DEBUG] 2020-10-07 10:12:12.474 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.484 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-07 10:12:12.485 [main] TransactionImpl - begin
[DEBUG] 2020-10-07 10:12:12.489 [main] TransactionImpl - committing
[DEBUG] 2020-10-07 10:12:12.489 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-07 10:12:12.489 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-07 10:12:12.514 [main] Collections - Collection dereferenced: [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:12.516 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-10-07 10:12:12.523 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2020-10-07 10:12:12.523 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-07 10:12:12.523 [main] EntityPrinter - hote.entity.User{user_name=bcurry, last_name=Curry, orders=[], id=3, first_name=Barney}
[DEBUG] 2020-10-07 10:12:12.524 [main] SQL - delete from user where id=?
[DEBUG] 2020-10-07 10:12:12.534 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.537 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.539 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-10-07 10:12:12.539 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:12.549 [main] CollectionLoadContext - No collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:12.549 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:12.552 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#3
[DEBUG] 2020-10-07 10:12:12.552 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.697 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-07 10:12:12.698 [main] TransactionImpl - begin
[DEBUG] 2020-10-07 10:12:12.704 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-10-07 10:12:12.705 [main] SQL - insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-10-07 10:12:12.712 [main] IdentifierGeneratorHelper - Natively generated identity: 23
[DEBUG] 2020-10-07 10:12:12.713 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:12.713 [main] TransactionImpl - committing
[DEBUG] 2020-10-07 10:12:12.713 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-07 10:12:12.714 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-07 10:12:12.718 [main] Collections - Collection found: [hote.entity.User.orders#23], was: [<unreferenced>] (initialized)
[DEBUG] 2020-10-07 10:12:12.721 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-10-07 10:12:12.721 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2020-10-07 10:12:12.722 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-07 10:12:12.726 [main] EntityPrinter - hote.entity.User{user_name=jackrobert, last_name=robertson, orders=[], id=23, first_name=jack}
[DEBUG] 2020-10-07 10:12:12.734 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.740 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.742 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:12.752 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:12.753 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:12.757 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [hote.entity.User.orders#23]
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#23]
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Processing attribute `first_name` : value = jack
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Processing attribute `last_name` : value = robertson
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jackrobert
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.758 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#23]
[DEBUG] 2020-10-07 10:12:12.758 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:12.758 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#23]
[DEBUG] 2020-10-07 10:12:12.758 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:12.759 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:12.759 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#23
[DEBUG] 2020-10-07 10:12:12.759 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:12.933 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-10-07 10:12:12.937 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-10-07 10:12:12.943 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:12.944 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'hote'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-10-07 10:12:12.946 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:12.950 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-10-07 10:12:12.950 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-10-07 10:12:12.951 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:12.951 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-10-07 10:12:12.956 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-10-07 10:12:12.956 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:12.957 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}

[DEBUG] 2020-10-07 10:12:12.957 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:12.957 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0
[DEBUG] 2020-10-07 10:12:12.957 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_ from user user0_
[DEBUG] 2020-10-07 10:12:12.957 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:12.958 [main] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_ from user user0_
[DEBUG] 2020-10-07 10:12:12.970 [main] Loader - Result set row: 0
[DEBUG] 2020-10-07 10:12:12.974 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:12.980 [main] Loader - Result set row: 1
[DEBUG] 2020-10-07 10:12:12.981 [main] Loader - Result row: EntityKey[hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:12.982 [main] Loader - Result set row: 2
[DEBUG] 2020-10-07 10:12:12.982 [main] Loader - Result row: EntityKey[hote.entity.User#3]
[DEBUG] 2020-10-07 10:12:12.982 [main] Loader - Result set row: 3
[DEBUG] 2020-10-07 10:12:12.982 [main] Loader - Result row: EntityKey[hote.entity.User#4]
[DEBUG] 2020-10-07 10:12:12.983 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:12.983 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-07 10:12:12.983 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.983 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-07 10:12:12.983 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.984 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:12.984 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.992 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-07 10:12:12.992 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.992 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:12.993 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-10-07 10:12:12.994 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.003 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-10-07 10:12:13.003 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-10-07 10:12:13.003 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-10-07 10:12:13.003 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.003 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-10-07 10:12:13.003 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.005 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:13.005 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.005 [main] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-10-07 10:12:13.005 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.005 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-10-07 10:12:13.009 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.009 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:13.015 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.015 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:13.016 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.016 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:13.023 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.023 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-10-07 10:12:13.024 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond, 
[DEBUG] 2020-10-07 10:12:13.024 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.024 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-07 10:12:13.024 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.024 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-10-07 10:12:13.024 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-10-07 10:12:13.029 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and cremenr
[DEBUG] 2020-10-07 10:12:13.029 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.029 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-07 10:12:13.029 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.029 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-10-07 10:12:13.029 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.030 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.030 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.030 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.030 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:13.030 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:13.031 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:13.040 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:13.040 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.040 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:13.040 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.041 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.043 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:13.043 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.043 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:13.047 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.048 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:13.052 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.054 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:13.055 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.055 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:13.056 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:13.056 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.056 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:13.056 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.056 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:13.065 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:13.065 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:13.065 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.065 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:13.065 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.065 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:13.065 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.066 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.066 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.066 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.066 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:13.066 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.067 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:13.080 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.080 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:13.086 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.087 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:13.087 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.088 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-07 10:12:13.088 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.096 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:13.096 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-07 10:12:13.096 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.097 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:13.097 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.097 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:13.097 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:13.097 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-07 10:12:13.097 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.097 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:13.098 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.099 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:13.099 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:13.099 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-07 10:12:13.099 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.099 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:13.099 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.100 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:13.107 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.107 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.108 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.108 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.108 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:13.108 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:13.282 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-10-07 10:12:13.286 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-10-07 10:12:13.291 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:13.292 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'last_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-07 10:12:13.295 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:13.296 [main] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-10-07 10:12:13.296 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-10-07 10:12:13.296 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-10-07 10:12:13.297 [main] DotNode - getDataType() : last_name -> org.hibernate.type.StringType@7636823f
[DEBUG] 2020-10-07 10:12:13.297 [main] FromReferenceNode - Resolved : generatedAlias0.last_name -> user0_.last_name
[DEBUG] 2020-10-07 10:12:13.297 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:13.297 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.last_name user0_.id last_name ) ? ) ) )
[DEBUG] 2020-10-07 10:12:13.298 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-10-07 10:12:13.298 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-07 10:12:13.307 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=last_name,dereferenceType=PRIMITIVE,getPropertyPath=last_name,path=generatedAlias0.last_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'last_name' {originalText=last_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7636823f}

[DEBUG] 2020-10-07 10:12:13.307 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:13.307 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.last_name like :param0
[DEBUG] 2020-10-07 10:12:13.307 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-10-07 10:12:13.307 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-07 10:12:13.308 [main] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.user_name as user_nam4_1_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-10-07 10:12:13.319 [main] Loader - Result set row: 0
[DEBUG] 2020-10-07 10:12:13.319 [main] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:13.320 [main] Loader - Result set row: 1
[DEBUG] 2020-10-07 10:12:13.320 [main] Loader - Result row: EntityKey[hote.entity.User#3]
[DEBUG] 2020-10-07 10:12:13.328 [main] Loader - Result set row: 2
[DEBUG] 2020-10-07 10:12:13.329 [main] Loader - Result row: EntityKey[hote.entity.User#4]
[DEBUG] 2020-10-07 10:12:13.329 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:13.329 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-07 10:12:13.329 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.329 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#3]
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Barney
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.330 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Curry
[DEBUG] 2020-10-07 10:12:13.331 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.331 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:13.331 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.331 [main] TwoPhaseLoad - Processing attribute `user_name` : value = bcurry
[DEBUG] 2020-10-07 10:12:13.331 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.336 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#3]
[DEBUG] 2020-10-07 10:12:13.336 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-10-07 10:12:13.336 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-10-07 10:12:13.336 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.336 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-10-07 10:12:13.336 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.337 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:13.337 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.337 [main] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-10-07 10:12:13.337 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.337 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-10-07 10:12:13.337 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.338 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:13.349 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.350 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:13.353 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.354 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:13.354 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.355 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-10-07 10:12:13.355 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond, 
[DEBUG] 2020-10-07 10:12:13.356 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.356 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-07 10:12:13.356 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.364 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-10-07 10:12:13.365 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-10-07 10:12:13.365 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and cremenr
[DEBUG] 2020-10-07 10:12:13.365 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.365 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-07 10:12:13.365 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.366 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-10-07 10:12:13.373 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.373 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-10-07 10:12:13.373 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.374 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.374 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:13.374 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:13.375 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:13.388 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:13.389 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.390 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#3]
[DEBUG] 2020-10-07 10:12:13.390 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.390 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.391 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:13.391 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.391 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-07 10:12:13.402 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.403 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:13.408 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.409 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:13.416 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.418 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-07 10:12:13.418 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.419 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:13.420 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.420 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-07 10:12:13.420 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:13.420 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-07 10:12:13.420 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.420 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-07 10:12:13.420 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.420 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-07 10:12:13.420 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.421 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-07 10:12:13.429 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.429 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.429 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-07 10:12:13.430 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:13.569 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:13.574 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:13.578 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:13.582 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.587 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:13.588 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:13.592 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.592 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:13.592 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:13.593 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.593 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:13.593 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.593 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:13.593 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.593 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:13.593 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.593 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:13.594 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:13.594 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:13.594 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.594 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:13.594 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.596 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:13.597 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:13.597 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:13.597 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.597 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:13.597 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.597 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:13.599 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.599 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.599 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.608 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.609 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-07 10:12:13.609 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:13.622 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:13.630 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:13.630 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:13.634 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.637 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-07 10:12:13.637 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:13.639 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.640 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:13.640 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:13.640 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.640 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-07 10:12:13.640 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.640 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:13.640 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.644 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-07 10:12:13.644 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:13.645 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-07 10:12:13.646 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.646 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-07 10:12:13.646 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.646 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-07 10:12:13.646 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.646 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-07 10:12:13.646 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.647 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.647 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-07 10:12:13.647 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:13.798 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-07 10:12:13.801 [main] TransactionImpl - begin
[DEBUG] 2020-10-07 10:12:13.804 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-10-07 10:12:13.805 [main] SQL - insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-10-07 10:12:13.808 [main] IdentifierGeneratorHelper - Natively generated identity: 24
[DEBUG] 2020-10-07 10:12:13.814 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.818 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-10-07 10:12:13.818 [main] SQL - insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-10-07 10:12:13.824 [main] IdentifierGeneratorHelper - Natively generated identity: 41
[DEBUG] 2020-10-07 10:12:13.825 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.826 [main] TransactionImpl - committing
[DEBUG] 2020-10-07 10:12:13.826 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-07 10:12:13.828 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-07 10:12:13.828 [main] Collections - Collection found: [hote.entity.User.orders#24], was: [<unreferenced>] (initialized)
[DEBUG] 2020-10-07 10:12:13.829 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2020-10-07 10:12:13.832 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2020-10-07 10:12:13.832 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-07 10:12:13.833 [main] EntityPrinter - hote.entity.User{user_name=fflintstone, last_name=Flintstone, orders=[hote.entity.Order#41], id=24, first_name=Fred}
[DEBUG] 2020-10-07 10:12:13.834 [main] EntityPrinter - hote.entity.Order{description=Order 1, id=41, user=hote.entity.User#24}
[DEBUG] 2020-10-07 10:12:13.838 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:13.842 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-07 10:12:13.845 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-07 10:12:13.856 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-07 10:12:13.859 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-07 10:12:13.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#24]
[DEBUG] 2020-10-07 10:12:13.860 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#24]
[DEBUG] 2020-10-07 10:12:13.860 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Flintstone
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fflintstone
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#24]
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#41]
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Processing attribute `description` : value = Order 1
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.861 [main] TwoPhaseLoad - Processing attribute `user` : value = 24
[DEBUG] 2020-10-07 10:12:13.862 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-07 10:12:13.868 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#41]
[DEBUG] 2020-10-07 10:12:13.868 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.869 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#24]
[DEBUG] 2020-10-07 10:12:13.869 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-07 10:12:13.869 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-07 10:12:13.869 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#24
[DEBUG] 2020-10-07 10:12:13.869 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
