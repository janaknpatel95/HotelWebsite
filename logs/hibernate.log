[DEBUG] 2020-10-06 12:04:13.714 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-06 12:04:13.739 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-06 12:04:13.762 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-10-06 12:04:13.955 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-10-06 12:04:13.966 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-10-06 12:04:14.609 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-06 12:04:15.423 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-06 12:04:15.470 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-06 12:04:15.471 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-10-06 12:04:15.538 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-10-06 12:04:15.639 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@175acfb2
[DEBUG] 2020-10-06 12:04:15.642 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@175acfb2
[DEBUG] 2020-10-06 12:04:15.642 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@175acfb2
[DEBUG] 2020-10-06 12:04:15.643 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30af7377
[DEBUG] 2020-10-06 12:04:15.643 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f099cef
[DEBUG] 2020-10-06 12:04:15.650 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7fedfe27
[DEBUG] 2020-10-06 12:04:15.651 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1d207fad
[DEBUG] 2020-10-06 12:04:15.657 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1d207fad
[DEBUG] 2020-10-06 12:04:15.657 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d207fad
[DEBUG] 2020-10-06 12:04:15.658 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@488b50ec
[DEBUG] 2020-10-06 12:04:15.658 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@488b50ec
[DEBUG] 2020-10-06 12:04:15.658 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@488b50ec
[DEBUG] 2020-10-06 12:04:15.664 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6d2d99fc
[DEBUG] 2020-10-06 12:04:15.665 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6d2d99fc
[DEBUG] 2020-10-06 12:04:15.665 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6d2d99fc
[DEBUG] 2020-10-06 12:04:15.666 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3a095ec0
[DEBUG] 2020-10-06 12:04:15.666 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3a095ec0
[DEBUG] 2020-10-06 12:04:15.666 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a095ec0
[DEBUG] 2020-10-06 12:04:15.667 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e8a46b7
[DEBUG] 2020-10-06 12:04:15.667 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e8a46b7
[DEBUG] 2020-10-06 12:04:15.669 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e8a46b7
[DEBUG] 2020-10-06 12:04:15.669 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1e6308a9
[DEBUG] 2020-10-06 12:04:15.672 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1e6308a9
[DEBUG] 2020-10-06 12:04:15.672 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e6308a9
[DEBUG] 2020-10-06 12:04:15.674 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@783ec989
[DEBUG] 2020-10-06 12:04:15.674 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@783ec989
[DEBUG] 2020-10-06 12:04:15.675 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@783ec989
[DEBUG] 2020-10-06 12:04:15.676 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@50825a02
[DEBUG] 2020-10-06 12:04:15.676 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@50825a02
[DEBUG] 2020-10-06 12:04:15.676 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2abc224d
[DEBUG] 2020-10-06 12:04:15.680 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2abc224d
[DEBUG] 2020-10-06 12:04:15.685 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@71178a52
[DEBUG] 2020-10-06 12:04:15.685 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@71178a52
[DEBUG] 2020-10-06 12:04:15.685 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@9a7a808
[DEBUG] 2020-10-06 12:04:15.686 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@29be7749
[DEBUG] 2020-10-06 12:04:15.687 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@79767781
[DEBUG] 2020-10-06 12:04:15.687 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@79767781
[DEBUG] 2020-10-06 12:04:15.687 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@16c3ca31
[DEBUG] 2020-10-06 12:04:15.687 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@16c3ca31
[DEBUG] 2020-10-06 12:04:15.697 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@31e32ea2
[DEBUG] 2020-10-06 12:04:15.697 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31e32ea2
[DEBUG] 2020-10-06 12:04:15.701 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6075b2d3
[DEBUG] 2020-10-06 12:04:15.701 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6075b2d3
[DEBUG] 2020-10-06 12:04:15.702 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5560bcdf
[DEBUG] 2020-10-06 12:04:15.702 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5560bcdf
[DEBUG] 2020-10-06 12:04:15.703 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4bdc8b5d
[DEBUG] 2020-10-06 12:04:15.708 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4bdc8b5d
[DEBUG] 2020-10-06 12:04:15.711 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5467eea4
[DEBUG] 2020-10-06 12:04:15.711 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5467eea4
[DEBUG] 2020-10-06 12:04:15.713 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21719a0
[DEBUG] 2020-10-06 12:04:15.713 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21719a0
[DEBUG] 2020-10-06 12:04:15.718 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@12a160c2
[DEBUG] 2020-10-06 12:04:15.718 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@12a160c2
[DEBUG] 2020-10-06 12:04:15.719 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@56da52a7
[DEBUG] 2020-10-06 12:04:15.719 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56da52a7
[DEBUG] 2020-10-06 12:04:15.720 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@11841b15
[DEBUG] 2020-10-06 12:04:15.720 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11841b15
[DEBUG] 2020-10-06 12:04:15.720 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d235104
[DEBUG] 2020-10-06 12:04:15.722 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d235104
[DEBUG] 2020-10-06 12:04:15.725 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d235104
[DEBUG] 2020-10-06 12:04:15.726 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4443ef6f
[DEBUG] 2020-10-06 12:04:15.726 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@75b3673
[DEBUG] 2020-10-06 12:04:15.726 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75b3673
[DEBUG] 2020-10-06 12:04:15.727 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75b3673
[DEBUG] 2020-10-06 12:04:15.727 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71391b3f
[DEBUG] 2020-10-06 12:04:15.727 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@42c2f48c
[DEBUG] 2020-10-06 12:04:15.733 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@42c2f48c
[DEBUG] 2020-10-06 12:04:15.735 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@14151bc5
[DEBUG] 2020-10-06 12:04:15.735 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14151bc5
[DEBUG] 2020-10-06 12:04:15.736 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@982bb90
[DEBUG] 2020-10-06 12:04:15.738 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@982bb90
[DEBUG] 2020-10-06 12:04:15.738 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@44f3fe83
[DEBUG] 2020-10-06 12:04:15.739 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44f3fe83
[DEBUG] 2020-10-06 12:04:15.740 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6de30571
[DEBUG] 2020-10-06 12:04:15.740 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6de30571
[DEBUG] 2020-10-06 12:04:15.741 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3df978b9
[DEBUG] 2020-10-06 12:04:15.741 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@47f08b81
[DEBUG] 2020-10-06 12:04:15.745 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@47f08b81
[DEBUG] 2020-10-06 12:04:15.749 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@47f08b81
[DEBUG] 2020-10-06 12:04:15.750 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f8e0cee
[DEBUG] 2020-10-06 12:04:15.750 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f8e0cee
[DEBUG] 2020-10-06 12:04:15.750 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f8e0cee
[DEBUG] 2020-10-06 12:04:15.750 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6ceb7b5e
[DEBUG] 2020-10-06 12:04:15.750 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3a91d146
[DEBUG] 2020-10-06 12:04:15.751 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@392a04e7
[DEBUG] 2020-10-06 12:04:15.751 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@392a04e7
[DEBUG] 2020-10-06 12:04:15.755 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@392a04e7
[DEBUG] 2020-10-06 12:04:15.758 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5f404594
[DEBUG] 2020-10-06 12:04:15.758 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5f404594
[DEBUG] 2020-10-06 12:04:15.758 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5f404594
[DEBUG] 2020-10-06 12:04:15.758 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@460b6d54
[DEBUG] 2020-10-06 12:04:15.759 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@27b71f50
[DEBUG] 2020-10-06 12:04:15.759 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6c37bd27
[DEBUG] 2020-10-06 12:04:15.759 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6c37bd27
[DEBUG] 2020-10-06 12:04:15.760 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74fe5966
[DEBUG] 2020-10-06 12:04:15.760 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5cf8edcf
[DEBUG] 2020-10-06 12:04:15.760 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5cf8edcf
[DEBUG] 2020-10-06 12:04:15.816 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@65004ff6
[DEBUG] 2020-10-06 12:04:15.816 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65004ff6
[DEBUG] 2020-10-06 12:04:15.817 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@989da1
[DEBUG] 2020-10-06 12:04:15.817 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2032e725
[DEBUG] 2020-10-06 12:04:15.818 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@55b8dbda
[DEBUG] 2020-10-06 12:04:15.821 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@773dab28
[DEBUG] 2020-10-06 12:04:15.826 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@773dab28
[DEBUG] 2020-10-06 12:04:15.837 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@353efdbf
[DEBUG] 2020-10-06 12:04:15.838 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@55cff952
[DEBUG] 2020-10-06 12:04:15.838 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@660591fb
[DEBUG] 2020-10-06 12:04:15.838 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a55a6e8
[DEBUG] 2020-10-06 12:04:15.838 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8c46918
[DEBUG] 2020-10-06 12:04:15.843 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@226b143b
[DEBUG] 2020-10-06 12:04:15.843 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@682bd3c4
[DEBUG] 2020-10-06 12:04:15.843 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f2e4acf
[DEBUG] 2020-10-06 12:04:15.929 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-06 12:04:15.930 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-06 12:04:15.931 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-06 12:04:15.931 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-06 12:04:15.931 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-06 12:04:15.932 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-06 12:04:15.933 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-06 12:04:15.936 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-06 12:04:15.936 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-06 12:04:15.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-06 12:04:15.938 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-06 12:04:15.938 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-06 12:04:15.938 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-06 12:04:15.938 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-06 12:04:15.951 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotel_test
[INFO ] 2020-10-06 12:04:15.951 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-06 12:04:15.951 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-06 12:04:16.243 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-06 12:04:17.476 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-06 12:04:17.489 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-06 12:04:17.489 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-06 12:04:17.579 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-06 12:04:17.641 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-06 12:04:17.709 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-06 12:04:17.808 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-06 12:04:17.823 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4867ab9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@65f2f9b0]
[DEBUG] 2020-10-06 12:04:17.907 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-10-06 12:04:17.928 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-06 12:04:17.932 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-10-06 12:04:17.938 [main] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-10-06 12:04:17.977 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:17.982 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-06 12:04:17.983 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-10-06 12:04:17.985 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-06 12:04:17.990 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-06 12:04:17.992 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-06 12:04:17.997 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:17.998 [main] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-10-06 12:04:17.998 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-10-06 12:04:17.998 [main] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-10-06 12:04:17.998 [main] PropertyBinder - Building property first_name
[DEBUG] 2020-10-06 12:04:17.998 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:17.998 [main] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-10-06 12:04:17.998 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-10-06 12:04:17.999 [main] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-10-06 12:04:17.999 [main] PropertyBinder - Building property last_name
[DEBUG] 2020-10-06 12:04:18.000 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-06 12:04:18.001 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:18.005 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:18.022 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:18.028 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:18.028 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-06 12:04:18.029 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-06 12:04:18.029 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-06 12:04:18.030 [main] CollectionBinder - Collection role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:18.031 [main] PropertyBinder - Building property orders
[DEBUG] 2020-10-06 12:04:18.032 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:18.033 [main] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-10-06 12:04:18.033 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-10-06 12:04:18.033 [main] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-10-06 12:04:18.033 [main] PropertyBinder - Building property user_name
[DEBUG] 2020-10-06 12:04:18.033 [main] AnnotationBinder - Binding entity from annotated class: hote.entity.Order
[DEBUG] 2020-10-06 12:04:18.037 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-06 12:04:18.037 [main] EntityBinder - Import with entity name Order
[DEBUG] 2020-10-06 12:04:18.037 [main] EntityBinder - Bind entity hote.entity.Order on table orders
[DEBUG] 2020-10-06 12:04:18.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:18.039 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-06 12:04:18.039 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:id]
[DEBUG] 2020-10-06 12:04:18.040 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-06 12:04:18.040 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-06 12:04:18.041 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-06 12:04:18.041 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:18.041 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-10-06 12:04:18.041 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Order:description]
[DEBUG] 2020-10-06 12:04:18.044 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-10-06 12:04:18.045 [main] PropertyBinder - Building property description
[DEBUG] 2020-10-06 12:04:18.045 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-06 12:04:18.045 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(orders), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-06 12:04:18.046 [main] PropertyBinder - Building property user
[DEBUG] 2020-10-06 12:04:18.048 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-10-06 12:04:18.048 [main] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-10-06 12:04:18.048 [main] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-10-06 12:04:18.048 [main] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-10-06 12:04:18.048 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-10-06 12:04:18.048 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-10-06 12:04:18.054 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-10-06 12:04:18.055 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [orders]
[DEBUG] 2020-10-06 12:04:18.055 [main] CollectionSecondPass - Second pass for collection: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:18.055 [main] CollectionBinder - Binding a OneToMany: hote.entity.User.orders through a foreign key
[DEBUG] 2020-10-06 12:04:18.056 [main] CollectionBinder - Mapping collection: hote.entity.User.orders -> orders
[DEBUG] 2020-10-06 12:04:18.061 [main] TableBinder - Retrieving property hote.entity.Order.user
[DEBUG] 2020-10-06 12:04:18.061 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Order
[DEBUG] 2020-10-06 12:04:18.061 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-10-06 12:04:18.065 [main] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-10-06 12:04:18.121 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - SessionFactory name : null
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - Statistics: disabled
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-10-06 12:04:18.122 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Named query checking : enabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-10-06 12:04:18.123 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-10-06 12:04:18.124 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-10-06 12:04:18.124 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-10-06 12:04:18.124 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-10-06 12:04:18.124 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-10-06 12:04:18.124 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-10-06 12:04:18.124 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-10-06 12:04:18.124 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-10-06 12:04:18.125 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-10-06 12:04:18.125 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-10-06 12:04:18.203 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-10-06 12:04:18.232 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-10-06 12:04:18.232 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/snap/intellij-idea-ultimate/248/lib/idea_rt.jar:/snap/intellij-idea-ultimate/248/plugins/junit/lib/junit5-rt.jar:/snap/intellij-idea-ultimate/248/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/HotelWebsie/target/test-classes:/home/student/IdeaProjects/HotelWebsie/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket39045, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotel_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/HotelWebsie, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e4c72d6, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hotel_test, java.class.version=55.0}
[DEBUG] 2020-10-06 12:04:18.271 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-10-06 12:04:18.271 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-10-06 12:04:18.274 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-10-06 12:04:18.274 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4867ab9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61a91c9b]
[DEBUG] 2020-10-06 12:04:18.418 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-10-06 12:04:18.418 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-10-06 12:04:18.447 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-10-06 12:04:18.447 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-10-06 12:04:18.795 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-10-06 12:04:18.796 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-10-06 12:04:18.796 [main] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Order] is safe
[DEBUG] 2020-10-06 12:04:18.796 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Order
[DEBUG] 2020-10-06 12:04:18.836 [main] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:18.836 [main] AbstractCollectionPersister -  Row insert: update orders set user_id=? where id=?
[DEBUG] 2020-10-06 12:04:18.836 [main] AbstractCollectionPersister -  Row update: update orders set  where id=?
[DEBUG] 2020-10-06 12:04:18.836 [main] AbstractCollectionPersister -  Row delete: update orders set user_id=null where user_id=? and id=?
[DEBUG] 2020-10-06 12:04:18.836 [main] AbstractCollectionPersister -  One-shot delete: update orders set user_id=null where user_id=?
[DEBUG] 2020-10-06 12:04:18.841 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-10-06 12:04:18.841 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-10-06 12:04:18.841 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.first_name as first_na2_1_, user_.last_name as last_nam3_1_, user_.user_name as user_nam4_1_ from user user_ where user_.id=?
[DEBUG] 2020-10-06 12:04:18.844 [main] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-10-06 12:04:18.845 [main] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2020-10-06 12:04:18.845 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-10-06 12:04:18.845 [main] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-10-06 12:04:18.882 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6579cdbb]
[DEBUG] 2020-10-06 12:04:18.883 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-10-06 12:04:18.883 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-10-06 12:04:18.883 [main] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-10-06 12:04:18.894 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3663d0ba]
[DEBUG] 2020-10-06 12:04:18.895 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d66e944]
[DEBUG] 2020-10-06 12:04:18.896 [main] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-10-06 12:04:18.896 [main] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-10-06 12:04:18.896 [main] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-10-06 12:04:18.896 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-10-06 12:04:18.896 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 12:04:18.909 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 12:04:18.914 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-10-06 12:04:18.922 [main] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:18.922 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@552cede7]
[DEBUG] 2020-10-06 12:04:18.922 [main] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-10-06 12:04:18.922 [main] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-10-06 12:04:18.922 [main] MetamodelGraphWalker - Visiting attribute path : orders
[DEBUG] 2020-10-06 12:04:18.922 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@151732fb]
[DEBUG] 2020-10-06 12:04:18.923 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@729c8063]
[DEBUG] 2020-10-06 12:04:18.923 [main] MetamodelGraphWalker - Visiting attribute path : orders.description
[DEBUG] 2020-10-06 12:04:18.923 [main] MetamodelGraphWalker - Visiting attribute path : orders.user
[DEBUG] 2020-10-06 12:04:18.923 [main] MetamodelGraphWalker - Property path deemed to be circular : orders.user
[DEBUG] 2020-10-06 12:04:18.923 [main] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-10-06 12:04:18.925 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 12:04:18.925 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 12:04:18.925 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:1>, path=hote.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:2>, path=hote.entity.User.orders.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(orders)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.orders)
                - SQL table alias mapping - orders1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Order)
                      - SQL table alias mapping - orders1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-10-06 12:04:18.925 [main] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:18.942 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.id as id1_0_3_, orders1_.id as id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:18.945 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.user_name as user_nam4_1_1_, orders1_.user_id as user_id3_0_3_, orders1_.id as id1_0_3_, orders1_.id as id1_0_0_, orders1_.description as descript2_0_0_, orders1_.user_id as user_id3_0_0_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:18.945 [main] AbstractEntityPersister - Static SQL for entity: hote.entity.Order
[DEBUG] 2020-10-06 12:04:18.945 [main] AbstractEntityPersister -  Version select: select id from orders where id =?
[DEBUG] 2020-10-06 12:04:18.945 [main] AbstractEntityPersister -  Snapshot select: select order_.id, order_.description as descript2_0_, order_.user_id as user_id3_0_ from orders order_ where order_.id=?
[DEBUG] 2020-10-06 12:04:18.945 [main] AbstractEntityPersister -  Insert 0: insert into orders (description, user_id, id) values (?, ?, ?)
[DEBUG] 2020-10-06 12:04:18.945 [main] AbstractEntityPersister -  Update 0: update orders set description=?, user_id=? where id=?
[DEBUG] 2020-10-06 12:04:18.945 [main] AbstractEntityPersister -  Delete 0: delete from orders where id=?
[DEBUG] 2020-10-06 12:04:18.945 [main] AbstractEntityPersister -  Identity insert: insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-10-06 12:04:18.945 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40ce9049]
[DEBUG] 2020-10-06 12:04:18.945 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-06 12:04:18.945 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-06 12:04:18.946 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65c5bf0e]
[DEBUG] 2020-10-06 12:04:18.946 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-10-06 12:04:18.946 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-10-06 12:04:18.946 [main] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-10-06 12:04:18.946 [main] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-10-06 12:04:18.946 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-10-06 12:04:18.946 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 12:04:18.946 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 12:04:18.949 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-10-06 12:04:18.949 [main] EntityLoader - Static select for entity hote.entity.Order [NONE]: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:18.949 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664e848c]
[DEBUG] 2020-10-06 12:04:18.949 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-06 12:04:18.949 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-06 12:04:18.949 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@114a5e0]
[DEBUG] 2020-10-06 12:04:18.949 [main] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-10-06 12:04:18.949 [main] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-10-06 12:04:18.949 [main] MetamodelGraphWalker - Visiting attribute path : user.orders
[DEBUG] 2020-10-06 12:04:18.949 [main] MetamodelGraphWalker - Property path deemed to be circular : user.orders
[DEBUG] 2020-10-06 12:04:18.949 [main] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-10-06 12:04:18.955 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 12:04:18.956 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 12:04:18.957 [main] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Order)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Order, querySpaceUid=<gen:0>, path=hote.entity.Order)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-10-06 12:04:18.957 [main] EntityLoader - Static select for entity hote.entity.Order [READ]: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:18.957 [main] Loader - Static select for action ACTION_MERGE on entity hote.entity.Order: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.id=?
[DEBUG] 2020-10-06 12:04:18.958 [main] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Order: select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_ from orders order0_ where order0_.id=?
[DEBUG] 2020-10-06 12:04:18.969 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61191222]
[DEBUG] 2020-10-06 12:04:18.969 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58833798]
[DEBUG] 2020-10-06 12:04:18.970 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-06 12:04:18.970 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-06 12:04:18.970 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-10-06 12:04:18.971 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-06 12:04:18.972 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-06 12:04:18.973 [main] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.orders)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.orders, querySpaceUid=<gen:0>, path=[hote.entity.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Order, querySpaceUid=<gen:1>, path=[hote.entity.User.orders].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-10-06 12:04:18.973 [main] CollectionLoader - Static select for collection hote.entity.User.orders: select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 12:04:19.014 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-10-06 12:04:19.015 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-10-06 12:04:19.015 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-10-06 12:04:19.019 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-10-06 12:04:19.019 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-10-06 12:04:19.019 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-10-06 12:04:19.020 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-10-06 12:04:19.026 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b6bccb4
[DEBUG] 2020-10-06 12:04:19.033 [main] SessionFactoryRegistry - Registering SessionFactory: bb243ec5-3d84-482e-ab17-949e796abff9 (<unnamed>)
[DEBUG] 2020-10-06 12:04:19.033 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-10-06 12:04:19.233 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-10-06 12:04:19.253 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:19.277 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.278 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.293 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.295 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:19.295 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.295 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.295 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.295 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.295 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.295 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:19.296 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.296 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:19.299 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.299 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.301 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.312 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:19.315 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.315 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.315 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.316 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.316 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 12:04:19.320 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.325 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.325 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.325 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.326 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.326 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.326 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:19.326 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.326 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.327 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.327 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.327 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.327 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.327 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.327 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.327 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 12:04:19.327 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#2
[DEBUG] 2020-10-06 12:04:19.328 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:19.335 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-06 12:04:19.339 [main] TransactionImpl - begin
[DEBUG] 2020-10-06 12:04:19.347 [main] TransactionImpl - committing
[DEBUG] 2020-10-06 12:04:19.348 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-06 12:04:19.348 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-06 12:04:19.350 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-10-06 12:04:19.350 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-10-06 12:04:19.351 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-06 12:04:19.355 [main] EntityPrinter - hote.entity.Order{description=Books, id=2, user=hote.entity.User#2}
[DEBUG] 2020-10-06 12:04:19.359 [main] SQL - delete from orders where id=?
[DEBUG] 2020-10-06 12:04:19.369 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:19.370 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:19.370 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-10-06 12:04:19.370 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:19.373 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.373 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#2
[DEBUG] 2020-10-06 12:04:19.373 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:19.479 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0
[DEBUG] 2020-10-06 12:04:19.490 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2506b881
[DEBUG] 2020-10-06 12:04:19.523 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0
[DEBUG] 2020-10-06 12:04:19.531 [main] HqlParser - weakKeywords() : new LT(1) token - ["Order",<108> previously: <41>,line=1,col=41,possibleID=true]
[DEBUG] 2020-10-06 12:04:19.532 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.539 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'hote'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Order'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-10-06 12:04:19.572 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.589 [main] FromElement - FromClause{level=1} : hote.entity.Order (generatedAlias0) -> order0_
[DEBUG] 2020-10-06 12:04:19.589 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-06 12:04:19.590 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.595 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} order0_.id ) ( FromClause{level=1} orders order0_ ) )
[DEBUG] 2020-10-06 12:04:19.607 [main] JoinProcessor - Using FROM fragment [orders order0_]
[DEBUG] 2020-10-06 12:04:19.607 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.608 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.id as id1_0_' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.description as descript2_0_, order0_.user_id as user_id3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'orders order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=orders,tableAlias=order0_,origin=null,columns={,className=hote.entity.Order}}

[DEBUG] 2020-10-06 12:04:19.608 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.618 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0
[DEBUG] 2020-10-06 12:04:19.618 [main] QueryTranslatorImpl - SQL: select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_
[DEBUG] 2020-10-06 12:04:19.618 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.629 [main] SQL - select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_
[DEBUG] 2020-10-06 12:04:19.634 [main] Loader - Result set row: 0
[DEBUG] 2020-10-06 12:04:19.635 [main] Loader - Result row: EntityKey[hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:19.635 [main] Loader - Result set row: 1
[DEBUG] 2020-10-06 12:04:19.635 [main] Loader - Result row: EntityKey[hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.635 [main] Loader - Result set row: 2
[DEBUG] 2020-10-06 12:04:19.635 [main] Loader - Result row: EntityKey[hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.636 [main] Loader - Result set row: 3
[DEBUG] 2020-10-06 12:04:19.636 [main] Loader - Result row: EntityKey[hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:19.637 [main] Loader - Result set row: 4
[DEBUG] 2020-10-06 12:04:19.637 [main] Loader - Result row: EntityKey[hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:19.637 [main] Loader - Result set row: 5
[DEBUG] 2020-10-06 12:04:19.637 [main] Loader - Result row: EntityKey[hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:19.637 [main] Loader - Result set row: 6
[DEBUG] 2020-10-06 12:04:19.637 [main] Loader - Result row: EntityKey[hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:19.637 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:19.637 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-06 12:04:19.637 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.638 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:19.639 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.639 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.647 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.647 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.647 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:19.647 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.647 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.647 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:19.648 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-06 12:04:19.648 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.648 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.648 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:19.648 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.648 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:19.648 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.648 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.649 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-10-06 12:04:19.649 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:19.649 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.649 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:19.649 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.649 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.649 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.649 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.651 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.651 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.651 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.651 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.652 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.652 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:19.652 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.656 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.656 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.658 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.658 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.658 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.659 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond, 
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-06 12:04:19.659 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.661 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.662 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.662 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.662 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:19.662 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.662 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.663 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-10-06 12:04:19.663 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.663 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:19.663 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.663 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.663 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#4
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and cremenr
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.663 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:19.669 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:19.739 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0
[DEBUG] 2020-10-06 12:04:19.740 [main] SQL - select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_
[DEBUG] 2020-10-06 12:04:19.742 [main] Loader - Result set row: 0
[DEBUG] 2020-10-06 12:04:19.742 [main] Loader - Result row: EntityKey[hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:19.742 [main] Loader - Result set row: 1
[DEBUG] 2020-10-06 12:04:19.742 [main] Loader - Result row: EntityKey[hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.742 [main] Loader - Result set row: 2
[DEBUG] 2020-10-06 12:04:19.742 [main] Loader - Result row: EntityKey[hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.742 [main] Loader - Result set row: 3
[DEBUG] 2020-10-06 12:04:19.742 [main] Loader - Result row: EntityKey[hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:19.743 [main] Loader - Result set row: 4
[DEBUG] 2020-10-06 12:04:19.743 [main] Loader - Result row: EntityKey[hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:19.745 [main] Loader - Result set row: 5
[DEBUG] 2020-10-06 12:04:19.746 [main] Loader - Result row: EntityKey[hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:19.746 [main] Loader - Result set row: 6
[DEBUG] 2020-10-06 12:04:19.746 [main] Loader - Result row: EntityKey[hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:19.747 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:19.747 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-06 12:04:19.747 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.747 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:19.747 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.747 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.754 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.754 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.754 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:19.755 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.755 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.755 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:19.755 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-06 12:04:19.755 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.755 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.755 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:19.755 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.755 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:19.755 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.756 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.757 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-10-06 12:04:19.757 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:19.757 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.757 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:19.757 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.757 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.757 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.757 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.759 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.759 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.759 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.760 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.760 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.760 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.763 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.763 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.763 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.772 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.772 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.777 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond, 
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-06 12:04:19.778 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.778 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.783 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.783 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.783 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:19.783 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.783 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.783 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:19.783 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-10-06 12:04:19.783 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-10-06 12:04:19.783 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.783 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-10-06 12:04:19.783 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.783 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.783 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.783 [main] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-10-06 12:04:19.784 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.784 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:19.784 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.784 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.784 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#4
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and cremenr
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.784 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:19.784 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:19.893 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.description=:param0
[DEBUG] 2020-10-06 12:04:19.895 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0 where generatedAlias0.description=:param0
[DEBUG] 2020-10-06 12:04:19.898 [main] HqlParser - weakKeywords() : new LT(1) token - ["Order",<108> previously: <41>,line=1,col=41,possibleID=true]
[DEBUG] 2020-10-06 12:04:19.899 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.902 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-06 12:04:19.902 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.902 [main] FromElement - FromClause{level=1} : hote.entity.Order (generatedAlias0) -> order0_
[DEBUG] 2020-10-06 12:04:19.902 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-06 12:04:19.904 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-06 12:04:19.905 [main] DotNode - getDataType() : description -> org.hibernate.type.StringType@71178a52
[DEBUG] 2020-10-06 12:04:19.908 [main] FromReferenceNode - Resolved : generatedAlias0.description -> order0_.description
[DEBUG] 2020-10-06 12:04:19.910 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.911 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} order0_.id ) ( FromClause{level=1} orders order0_ ) ( where ( = ( order0_.description order0_.id description ) ? ) ) )
[DEBUG] 2020-10-06 12:04:19.911 [main] JoinProcessor - Using FROM fragment [orders order0_]
[DEBUG] 2020-10-06 12:04:19.911 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.912 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.id as id1_0_' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.description as descript2_0_, order0_.user_id as user_id3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'orders order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=orders,tableAlias=order0_,origin=null,columns={,className=hote.entity.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=generatedAlias0.description,tableAlias=order0_,className=hote.entity.Order,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'order0_.id' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@71178a52}

[DEBUG] 2020-10-06 12:04:19.912 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.912 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0 where generatedAlias0.description=:param0
[DEBUG] 2020-10-06 12:04:19.912 [main] QueryTranslatorImpl - SQL: select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_ where order0_.description=?
[DEBUG] 2020-10-06 12:04:19.912 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.914 [main] SQL - select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_ where order0_.description=?
[DEBUG] 2020-10-06 12:04:19.919 [main] Loader - Result set row: 0
[DEBUG] 2020-10-06 12:04:19.919 [main] Loader - Result row: EntityKey[hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.919 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.919 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:19.919 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.919 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.919 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.919 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.924 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.925 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.925 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.925 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.925 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.925 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.926 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.926 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.926 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.926 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.926 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-06 12:04:19.926 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.927 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:19.972 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.description like :param0
[DEBUG] 2020-10-06 12:04:19.973 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0 where generatedAlias0.description like :param0
[DEBUG] 2020-10-06 12:04:19.973 [main] HqlParser - weakKeywords() : new LT(1) token - ["Order",<108> previously: <41>,line=1,col=41,possibleID=true]
[DEBUG] 2020-10-06 12:04:19.974 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.974 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-06 12:04:19.974 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.974 [main] FromElement - FromClause{level=1} : hote.entity.Order (generatedAlias0) -> order0_
[DEBUG] 2020-10-06 12:04:19.974 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-06 12:04:19.974 [main] FromReferenceNode - Resolved : generatedAlias0 -> order0_.id
[DEBUG] 2020-10-06 12:04:19.974 [main] DotNode - getDataType() : description -> org.hibernate.type.StringType@71178a52
[DEBUG] 2020-10-06 12:04:19.974 [main] FromReferenceNode - Resolved : generatedAlias0.description -> order0_.description
[DEBUG] 2020-10-06 12:04:19.974 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.974 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} order0_.id ) ( FromClause{level=1} orders order0_ ) ( where ( like ( order0_.description order0_.id description ) ? ) ) )
[DEBUG] 2020-10-06 12:04:19.975 [main] JoinProcessor - Using FROM fragment [orders order0_]
[DEBUG] 2020-10-06 12:04:19.975 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-06 12:04:19.975 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.id as id1_0_' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.description as descript2_0_, order0_.user_id as user_id3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'orders order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=orders,tableAlias=order0_,origin=null,columns={,className=hote.entity.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'order0_.description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=generatedAlias0.description,tableAlias=order0_,className=hote.entity.Order,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'order0_.id' {alias=generatedAlias0, className=hote.entity.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@71178a52}

[DEBUG] 2020-10-06 12:04:19.975 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.975 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.Order as generatedAlias0 where generatedAlias0.description like :param0
[DEBUG] 2020-10-06 12:04:19.975 [main] QueryTranslatorImpl - SQL: select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_ where order0_.description like ?
[DEBUG] 2020-10-06 12:04:19.975 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-06 12:04:19.978 [main] SQL - select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_ where order0_.description like ?
[DEBUG] 2020-10-06 12:04:19.985 [main] Loader - Result set row: 0
[DEBUG] 2020-10-06 12:04:19.987 [main] Loader - Result row: EntityKey[hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.987 [main] Loader - Result set row: 1
[DEBUG] 2020-10-06 12:04:19.987 [main] Loader - Result row: EntityKey[hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:19.988 [main] Loader - Result set row: 2
[DEBUG] 2020-10-06 12:04:19.988 [main] Loader - Result row: EntityKey[hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:19.989 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.989 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:19.989 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.989 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.989 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.989 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.992 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:19.992 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.993 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.993 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:19.993 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:19.993 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.993 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.993 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:19.993 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.993 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:19.993 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.994 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:19.994 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.994 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:19.994 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:19.996 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:19.996 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-06 12:04:19.996 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:19.996 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:19.996 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-06 12:04:19.996 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.996 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:19.996 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:19.996 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:19.999 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.000 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.001 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.001 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.001 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.003 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.003 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-06 12:04:20.003 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.003 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.004 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.005 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.005 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.005 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.005 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.005 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.005 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-10-06 12:04:20.005 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:20.005 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.005 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-06 12:04:20.005 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.007 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.007 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.007 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.008 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.059 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:20.061 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.061 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.062 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.063 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.063 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.063 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 12:04:20.063 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.064 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.064 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.065 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.065 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.065 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.065 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:20.065 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.065 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.065 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.065 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.065 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.065 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.065 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.066 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.066 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 12:04:20.066 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#3
[DEBUG] 2020-10-06 12:04:20.066 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.072 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:20.076 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.076 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.076 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.077 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.077 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.077 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.077 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 12:04:20.079 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.082 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.083 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.083 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.083 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.083 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.083 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:20.083 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.083 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.083 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.084 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.084 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.084 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.084 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.084 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.084 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 12:04:20.084 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#3
[DEBUG] 2020-10-06 12:04:20.084 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.130 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:20.132 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.132 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.132 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.132 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.132 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.133 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.133 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-06 12:04:20.133 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.133 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.133 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.135 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.135 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.135 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.135 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.136 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.136 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-10-06 12:04:20.136 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.140 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-06 12:04:20.140 [main] TransactionImpl - begin
[DEBUG] 2020-10-06 12:04:20.147 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-10-06 12:04:20.149 [main] SQL - insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-10-06 12:04:20.157 [main] IdentifierGeneratorHelper - Natively generated identity: 30
[DEBUG] 2020-10-06 12:04:20.157 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.159 [main] TransactionImpl - committing
[DEBUG] 2020-10-06 12:04:20.159 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-06 12:04:20.159 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-06 12:04:20.159 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-10-06 12:04:20.159 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-10-06 12:04:20.159 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-06 12:04:20.159 [main] EntityPrinter - hote.entity.Order{description=Plates, id=30, user=hote.entity.User#1}
[DEBUG] 2020-10-06 12:04:20.161 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.163 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.166 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:20.167 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.167 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#30]
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#30]
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.167 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-06 12:04:20.168 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.168 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:20.168 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.168 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.168 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 12:04:20.170 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.170 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.172 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.172 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.172 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.172 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-06 12:04:20.172 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.173 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-10-06 12:04:20.173 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.173 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.173 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-06 12:04:20.173 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.173 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.173 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.174 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.174 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.174 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.174 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.174 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.175 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 12:04:20.175 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#30
[DEBUG] 2020-10-06 12:04:20.175 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.228 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:20.230 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.230 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.230 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:20.231 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.231 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.231 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.237 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.238 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 12:04:20.241 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.241 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.241 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.241 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.241 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.241 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.241 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:20.241 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.241 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.241 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.242 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.242 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.242 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.242 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.242 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.244 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 12:04:20.244 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#2
[DEBUG] 2020-10-06 12:04:20.244 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.293 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:20.295 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.295 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.297 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.297 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.297 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.297 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 12:04:20.301 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.301 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.304 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.304 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.304 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.312 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.312 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:20.312 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.313 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.313 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.313 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.313 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.313 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.313 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.313 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.313 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 12:04:20.313 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#3
[DEBUG] 2020-10-06 12:04:20.313 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.316 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-06 12:04:20.316 [main] TransactionImpl - begin
[DEBUG] 2020-10-06 12:04:20.319 [main] TransactionImpl - committing
[DEBUG] 2020-10-06 12:04:20.319 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-06 12:04:20.319 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-06 12:04:20.319 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-10-06 12:04:20.319 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-10-06 12:04:20.319 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-06 12:04:20.319 [main] EntityPrinter - hote.entity.Order{description=Plates, forks, and knives, id=3, user=hote.entity.User#2}
[DEBUG] 2020-10-06 12:04:20.319 [main] SQL - delete from orders where id=?
[DEBUG] 2020-10-06 12:04:20.324 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.324 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.324 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-10-06 12:04:20.326 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:20.327 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.329 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#3
[DEBUG] 2020-10-06 12:04:20.329 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.377 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-06 12:04:20.377 [main] TransactionImpl - begin
[DEBUG] 2020-10-06 12:04:20.380 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-10-06 12:04:20.380 [main] SQL - insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-10-06 12:04:20.381 [main] IdentifierGeneratorHelper - Natively generated identity: 14
[DEBUG] 2020-10-06 12:04:20.381 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.383 [main] TransactionImpl - committing
[DEBUG] 2020-10-06 12:04:20.383 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-06 12:04:20.383 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-06 12:04:20.387 [main] Collections - Collection found: [hote.entity.User.orders#14], was: [<unreferenced>] (initialized)
[DEBUG] 2020-10-06 12:04:20.387 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-10-06 12:04:20.387 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2020-10-06 12:04:20.387 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-06 12:04:20.387 [main] EntityPrinter - hote.entity.User{user_name=jackrobert, last_name=robertson, orders=[], id=14, first_name=jack}
[DEBUG] 2020-10-06 12:04:20.393 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.394 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.394 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:20.397 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.397 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#14
[DEBUG] 2020-10-06 12:04:20.397 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.471 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0
[DEBUG] 2020-10-06 12:04:20.471 [main] SQL - select order0_.id as id1_0_, order0_.description as descript2_0_, order0_.user_id as user_id3_0_ from orders order0_
[DEBUG] 2020-10-06 12:04:20.474 [main] Loader - Result set row: 0
[DEBUG] 2020-10-06 12:04:20.474 [main] Loader - Result row: EntityKey[hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.476 [main] Loader - Result set row: 1
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result row: EntityKey[hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result set row: 2
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result row: EntityKey[hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result set row: 3
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result row: EntityKey[hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result set row: 4
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result row: EntityKey[hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result set row: 5
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result row: EntityKey[hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result set row: 6
[DEBUG] 2020-10-06 12:04:20.477 [main] Loader - Result row: EntityKey[hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:20.477 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.477 [main] TwoPhaseLoad - Processing attribute `description` : value = plates
[DEBUG] 2020-10-06 12:04:20.477 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.477 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.477 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.477 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:20.485 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.485 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.486 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-10-06 12:04:20.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Joe
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Coyne
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Processing attribute `user_name` : value = jcoyne
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-10-06 12:04:20.486 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.486 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#1]
[DEBUG] 2020-10-06 12:04:20.486 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.486 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.486 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#1
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#1]
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.486 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.486 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:20.491 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.491 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.491 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.491 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.491 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.491 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.491 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.491 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:20.491 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.494 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:20.494 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.494 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.494 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.495 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.495 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.495 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.495 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.495 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#2
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Processing attribute `description` : value = Soccer ball
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#4]
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, Almond, 
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-06 12:04:20.495 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.495 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:20.497 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.497 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.497 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:20.497 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.497 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.498 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#4]
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Karen
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Mack
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Processing attribute `user_name` : value = kmack
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#4]
[DEBUG] 2020-10-06 12:04:20.498 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.498 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#4]
[DEBUG] 2020-10-06 12:04:20.498 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.498 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.498 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#4
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#5]
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Processing attribute `description` : value = Bananas
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#6]
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Processing attribute `description` : value = Coffee, cups, and cremenr
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.498 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#7]
[DEBUG] 2020-10-06 12:04:20.498 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.608 [main] SQL - select order0_.id as id1_0_0_, order0_.description as descript2_0_0_, order0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.user_name as user_nam4_1_1_ from orders order0_ left outer join user user1_ on order0_.user_id=user1_.id where order0_.id=?
[DEBUG] 2020-10-06 12:04:20.611 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.612 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.612 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.612 [main] TwoPhaseLoad - Processing attribute `description` : value = Books
[DEBUG] 2020-10-06 12:04:20.612 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.612 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.612 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#2]
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Hensen
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fhensen
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.614 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#2]
[DEBUG] 2020-10-06 12:04:20.614 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.614 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.614 [main] SQL - select orders0_.user_id as user_id3_0_0_, orders0_.id as id1_0_0_, orders0_.id as id1_0_1_, orders0_.description as descript2_0_1_, orders0_.user_id as user_id3_0_1_ from orders orders0_ where orders0_.user_id=?
[DEBUG] 2020-10-06 12:04:20.615 [main] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.617 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.618 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.618 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-10-06 12:04:20.619 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.621 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.622 [main] TwoPhaseLoad - Processing attribute `description` : value = Plates, forks, and knives
[DEBUG] 2020-10-06 12:04:20.622 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.622 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-10-06 12:04:20.622 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.622 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#3]
[DEBUG] 2020-10-06 12:04:20.622 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.622 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#2]
[DEBUG] 2020-10-06 12:04:20.622 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.622 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.622 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-06 12:04:20.622 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.Order#2
[DEBUG] 2020-10-06 12:04:20.622 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.680 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-06 12:04:20.680 [main] TransactionImpl - begin
[DEBUG] 2020-10-06 12:04:20.681 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-10-06 12:04:20.681 [main] SQL - insert into user (first_name, last_name, user_name) values (?, ?, ?)
[DEBUG] 2020-10-06 12:04:20.682 [main] IdentifierGeneratorHelper - Natively generated identity: 15
[DEBUG] 2020-10-06 12:04:20.682 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.683 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-10-06 12:04:20.683 [main] SQL - insert into orders (description, user_id) values (?, ?)
[DEBUG] 2020-10-06 12:04:20.684 [main] IdentifierGeneratorHelper - Natively generated identity: 31
[DEBUG] 2020-10-06 12:04:20.684 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.685 [main] TransactionImpl - committing
[DEBUG] 2020-10-06 12:04:20.685 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-10-06 12:04:20.685 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-10-06 12:04:20.685 [main] Collections - Collection found: [hote.entity.User.orders#15], was: [<unreferenced>] (initialized)
[DEBUG] 2020-10-06 12:04:20.687 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2020-10-06 12:04:20.687 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2020-10-06 12:04:20.687 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-10-06 12:04:20.687 [main] EntityPrinter - hote.entity.User{user_name=fflintstone, last_name=Flintstone, orders=[hote.entity.Order#31], id=15, first_name=Fred}
[DEBUG] 2020-10-06 12:04:20.688 [main] EntityPrinter - hote.entity.Order{description=Order 1, id=31, user=hote.entity.User#15}
[DEBUG] 2020-10-06 12:04:20.691 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.693 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-06 12:04:20.693 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.user_name as user_nam4_1_0_, orders1_.user_id as user_id3_0_1_, orders1_.id as id1_0_1_, orders1_.id as id1_0_2_, orders1_.description as descript2_0_2_, orders1_.user_id as user_id3_0_2_ from user user0_ left outer join orders orders1_ on user0_.id=orders1_.user_id where user0_.id=?
[DEBUG] 2020-10-06 12:04:20.698 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-10-06 12:04:20.698 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-10-06 12:04:20.699 [main] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.orders#15]
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.User#15]
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Processing attribute `first_name` : value = Fred
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Processing attribute `last_name` : value = Flintstone
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Processing attribute `orders` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Attribute (`orders`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Processing attribute `user_name` : value = fflintstone
[DEBUG] 2020-10-06 12:04:20.699 [main] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.700 [main] TwoPhaseLoad - Done materializing entity [hote.entity.User#15]
[DEBUG] 2020-10-06 12:04:20.700 [main] TwoPhaseLoad - Resolving attributes for [hote.entity.Order#31]
[DEBUG] 2020-10-06 12:04:20.700 [main] TwoPhaseLoad - Processing attribute `description` : value = Order 1
[DEBUG] 2020-10-06 12:04:20.700 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.700 [main] TwoPhaseLoad - Processing attribute `user` : value = 15
[DEBUG] 2020-10-06 12:04:20.700 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-06 12:04:20.702 [main] TwoPhaseLoad - Done materializing entity [hote.entity.Order#31]
[DEBUG] 2020-10-06 12:04:20.702 [main] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.702 [main] CollectionLoadContext - Collection fully initialized: [hote.entity.User.orders#15]
[DEBUG] 2020-10-06 12:04:20.702 [main] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.orders
[DEBUG] 2020-10-06 12:04:20.702 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-06 12:04:20.702 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : hote.entity.User#15
[DEBUG] 2020-10-06 12:04:20.702 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
