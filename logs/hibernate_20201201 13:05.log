[DEBUG] 2020-12-01 13:05:42.890 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-01 13:05:42.910 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-01 13:05:42.926 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-12-01 13:05:43.170 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-12-01 13:05:43.177 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-12-01 13:05:43.519 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-01 13:05:44.237 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-01 13:05:44.284 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-01 13:05:44.289 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-12-01 13:05:44.357 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-12-01 13:05:44.474 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@16e9fcfe
[DEBUG] 2020-12-01 13:05:44.474 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@16e9fcfe
[DEBUG] 2020-12-01 13:05:44.475 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@16e9fcfe
[DEBUG] 2020-12-01 13:05:44.475 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@678aa57c
[DEBUG] 2020-12-01 13:05:44.476 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a3f515e
[DEBUG] 2020-12-01 13:05:44.476 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@363828cc
[DEBUG] 2020-12-01 13:05:44.477 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@402336ad
[DEBUG] 2020-12-01 13:05:44.477 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@402336ad
[DEBUG] 2020-12-01 13:05:44.480 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@402336ad
[DEBUG] 2020-12-01 13:05:44.483 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@261cd5db
[DEBUG] 2020-12-01 13:05:44.483 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@261cd5db
[DEBUG] 2020-12-01 13:05:44.483 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@261cd5db
[DEBUG] 2020-12-01 13:05:44.490 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@b8871f5
[DEBUG] 2020-12-01 13:05:44.495 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@b8871f5
[DEBUG] 2020-12-01 13:05:44.495 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b8871f5
[DEBUG] 2020-12-01 13:05:44.497 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2bc51aac
[DEBUG] 2020-12-01 13:05:44.497 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2bc51aac
[DEBUG] 2020-12-01 13:05:44.497 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2bc51aac
[DEBUG] 2020-12-01 13:05:44.498 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7799e095
[DEBUG] 2020-12-01 13:05:44.498 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7799e095
[DEBUG] 2020-12-01 13:05:44.498 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7799e095
[DEBUG] 2020-12-01 13:05:44.500 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@431bfe42
[DEBUG] 2020-12-01 13:05:44.504 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@431bfe42
[DEBUG] 2020-12-01 13:05:44.504 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@431bfe42
[DEBUG] 2020-12-01 13:05:44.506 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3dd2eba5
[DEBUG] 2020-12-01 13:05:44.506 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3dd2eba5
[DEBUG] 2020-12-01 13:05:44.506 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dd2eba5
[DEBUG] 2020-12-01 13:05:44.507 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@330b78e2
[DEBUG] 2020-12-01 13:05:44.507 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@330b78e2
[DEBUG] 2020-12-01 13:05:44.515 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@109f5b0f
[DEBUG] 2020-12-01 13:05:44.515 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@109f5b0f
[DEBUG] 2020-12-01 13:05:44.518 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7ed5142a
[DEBUG] 2020-12-01 13:05:44.519 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7ed5142a
[DEBUG] 2020-12-01 13:05:44.519 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3042795c
[DEBUG] 2020-12-01 13:05:44.520 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7bfd2a9a
[DEBUG] 2020-12-01 13:05:44.527 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@59aa3c10
[DEBUG] 2020-12-01 13:05:44.527 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@59aa3c10
[DEBUG] 2020-12-01 13:05:44.528 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3838a3d5
[DEBUG] 2020-12-01 13:05:44.528 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3838a3d5
[DEBUG] 2020-12-01 13:05:44.542 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@e7baed4
[DEBUG] 2020-12-01 13:05:44.542 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@e7baed4
[DEBUG] 2020-12-01 13:05:44.544 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@66e43ec1
[DEBUG] 2020-12-01 13:05:44.544 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@66e43ec1
[DEBUG] 2020-12-01 13:05:44.545 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4cb15b00
[DEBUG] 2020-12-01 13:05:44.549 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4cb15b00
[DEBUG] 2020-12-01 13:05:44.553 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@47008da1
[DEBUG] 2020-12-01 13:05:44.553 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@47008da1
[DEBUG] 2020-12-01 13:05:44.556 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1887875f
[DEBUG] 2020-12-01 13:05:44.556 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1887875f
[DEBUG] 2020-12-01 13:05:44.562 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1d7241e8
[DEBUG] 2020-12-01 13:05:44.562 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1d7241e8
[DEBUG] 2020-12-01 13:05:44.565 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43562a6f
[DEBUG] 2020-12-01 13:05:44.565 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43562a6f
[DEBUG] 2020-12-01 13:05:44.566 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1f13df3
[DEBUG] 2020-12-01 13:05:44.567 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f13df3
[DEBUG] 2020-12-01 13:05:44.571 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@49e5479
[DEBUG] 2020-12-01 13:05:44.571 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49e5479
[DEBUG] 2020-12-01 13:05:44.572 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@36a33c47
[DEBUG] 2020-12-01 13:05:44.575 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36a33c47
[DEBUG] 2020-12-01 13:05:44.575 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36a33c47
[DEBUG] 2020-12-01 13:05:44.579 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2afffa4a
[DEBUG] 2020-12-01 13:05:44.580 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6ad476cb
[DEBUG] 2020-12-01 13:05:44.580 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ad476cb
[DEBUG] 2020-12-01 13:05:44.580 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ad476cb
[DEBUG] 2020-12-01 13:05:44.588 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@278aedce
[DEBUG] 2020-12-01 13:05:44.590 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@206b02bc
[DEBUG] 2020-12-01 13:05:44.590 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@206b02bc
[DEBUG] 2020-12-01 13:05:44.594 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@28adbba5
[DEBUG] 2020-12-01 13:05:44.595 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28adbba5
[DEBUG] 2020-12-01 13:05:44.595 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b6ea4e6
[DEBUG] 2020-12-01 13:05:44.595 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b6ea4e6
[DEBUG] 2020-12-01 13:05:44.598 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4180ab01
[DEBUG] 2020-12-01 13:05:44.599 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4180ab01
[DEBUG] 2020-12-01 13:05:44.601 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@581927e2
[DEBUG] 2020-12-01 13:05:44.601 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@581927e2
[DEBUG] 2020-12-01 13:05:44.605 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@728ef84c
[DEBUG] 2020-12-01 13:05:44.606 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1654e298
[DEBUG] 2020-12-01 13:05:44.606 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1654e298
[DEBUG] 2020-12-01 13:05:44.606 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1654e298
[DEBUG] 2020-12-01 13:05:44.607 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4a9e4119
[DEBUG] 2020-12-01 13:05:44.607 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4a9e4119
[DEBUG] 2020-12-01 13:05:44.607 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4a9e4119
[DEBUG] 2020-12-01 13:05:44.608 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@224a45d3
[DEBUG] 2020-12-01 13:05:44.611 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4e3c6a75
[DEBUG] 2020-12-01 13:05:44.616 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@eb9d8b8
[DEBUG] 2020-12-01 13:05:44.616 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@eb9d8b8
[DEBUG] 2020-12-01 13:05:44.616 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@eb9d8b8
[DEBUG] 2020-12-01 13:05:44.617 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7e78b67e
[DEBUG] 2020-12-01 13:05:44.617 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7e78b67e
[DEBUG] 2020-12-01 13:05:44.617 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7e78b67e
[DEBUG] 2020-12-01 13:05:44.619 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6751386c
[DEBUG] 2020-12-01 13:05:44.619 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@73f77411
[DEBUG] 2020-12-01 13:05:44.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a4df9e3
[DEBUG] 2020-12-01 13:05:44.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a4df9e3
[DEBUG] 2020-12-01 13:05:44.626 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c2d9a66
[DEBUG] 2020-12-01 13:05:44.629 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3adde1c7
[DEBUG] 2020-12-01 13:05:44.629 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3adde1c7
[DEBUG] 2020-12-01 13:05:44.630 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@707355a9
[DEBUG] 2020-12-01 13:05:44.630 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@707355a9
[DEBUG] 2020-12-01 13:05:44.633 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3bbf75fd
[DEBUG] 2020-12-01 13:05:44.634 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26a566fc
[DEBUG] 2020-12-01 13:05:44.637 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7e3b4c1b
[DEBUG] 2020-12-01 13:05:44.643 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@73a663a0
[DEBUG] 2020-12-01 13:05:44.649 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73a663a0
[DEBUG] 2020-12-01 13:05:44.650 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28f1c6d6
[DEBUG] 2020-12-01 13:05:44.650 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3dd04144
[DEBUG] 2020-12-01 13:05:44.651 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@601c31a
[DEBUG] 2020-12-01 13:05:44.653 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e2b72fd
[DEBUG] 2020-12-01 13:05:44.656 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@184ad498
[DEBUG] 2020-12-01 13:05:44.656 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@27af6cb4
[DEBUG] 2020-12-01 13:05:44.656 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2fbe6248
[DEBUG] 2020-12-01 13:05:44.656 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ae741d8
[DEBUG] 2020-12-01 13:05:44.711 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-01 13:05:44.712 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-01 13:05:44.712 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-01 13:05:44.714 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-01 13:05:44.714 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-01 13:05:44.720 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-01 13:05:44.722 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-01 13:05:44.726 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-01 13:05:44.727 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-01 13:05:44.728 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-01 13:05:44.728 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-01 13:05:44.728 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-01 13:05:44.728 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-01 13:05:44.731 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-01 13:05:44.744 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hotelFull
[INFO ] 2020-12-01 13:05:44.744 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-01 13:05:44.744 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-01 13:05:45.126 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-01 13:05:45.719 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2020-12-01 13:05:45.737 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-01 13:05:45.737 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-01 13:05:45.877 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-01 13:05:45.943 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-01 13:05:46.047 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-01 13:05:46.189 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-01 13:05:46.202 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1830259e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2b9021de]
[DEBUG] 2020-12-01 13:05:46.431 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: hote.entity.User
[DEBUG] 2020-12-01 13:05:46.537 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-01 13:05:46.562 [http-nio-8080-exec-2] EntityBinder - Import with entity name User
[DEBUG] 2020-12-01 13:05:46.571 [http-nio-8080-exec-2] EntityBinder - Bind entity hote.entity.User on table user
[DEBUG] 2020-12-01 13:05:46.631 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.637 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-01 13:05:46.639 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:id]
[DEBUG] 2020-12-01 13:05:46.646 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-01 13:05:46.652 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-12-01 13:05:46.659 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-01 13:05:46.667 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.667 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property Password with lazy=false
[DEBUG] 2020-12-01 13:05:46.667 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:Password]
[DEBUG] 2020-12-01 13:05:46.667 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for Password
[DEBUG] 2020-12-01 13:05:46.668 [http-nio-8080-exec-2] PropertyBinder - Building property Password
[DEBUG] 2020-12-01 13:05:46.668 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.668 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-12-01 13:05:46.668 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:address]
[DEBUG] 2020-12-01 13:05:46.668 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-12-01 13:05:46.669 [http-nio-8080-exec-2] PropertyBinder - Building property address
[DEBUG] 2020-12-01 13:05:46.669 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=details, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.669 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property details with lazy=false
[DEBUG] 2020-12-01 13:05:46.669 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:details]
[DEBUG] 2020-12-01 13:05:46.671 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for details
[DEBUG] 2020-12-01 13:05:46.671 [http-nio-8080-exec-2] PropertyBinder - Building property details
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:email]
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:first_name]
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] PropertyBinder - Building property first_name
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:last_name]
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] PropertyBinder - Building property last_name
[DEBUG] 2020-12-01 13:05:46.674 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.675 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-12-01 13:05:46.675 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:phone]
[DEBUG] 2020-12-01 13:05:46.675 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-12-01 13:05:46.675 [http-nio-8080-exec-2] PropertyBinder - Building property phone
[DEBUG] 2020-12-01 13:05:46.683 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-01 13:05:46.683 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.690 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.725 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.726 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=reservations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.727 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-01 13:05:46.733 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-01 13:05:46.739 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-01 13:05:46.739 [http-nio-8080-exec-2] CollectionBinder - Collection role: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:46.750 [http-nio-8080-exec-2] PropertyBinder - Building property reservations
[DEBUG] 2020-12-01 13:05:46.751 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-01 13:05:46.751 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.751 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.751 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.751 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.755 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-01 13:05:46.757 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-01 13:05:46.758 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-01 13:05:46.758 [http-nio-8080-exec-2] CollectionBinder - Collection role: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:46.758 [http-nio-8080-exec-2] PropertyBinder - Building property roles
[DEBUG] 2020-12-01 13:05:46.758 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.758 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property user_name with lazy=false
[DEBUG] 2020-12-01 13:05:46.758 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.User:user_name]
[DEBUG] 2020-12-01 13:05:46.758 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for user_name
[DEBUG] 2020-12-01 13:05:46.758 [http-nio-8080-exec-2] PropertyBinder - Building property user_name
[DEBUG] 2020-12-01 13:05:46.759 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: hote.entity.Role
[DEBUG] 2020-12-01 13:05:46.760 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-01 13:05:46.760 [http-nio-8080-exec-2] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-01 13:05:46.760 [http-nio-8080-exec-2] EntityBinder - Bind entity hote.entity.Role on table role
[DEBUG] 2020-12-01 13:05:46.779 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.779 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-01 13:05:46.779 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:id]
[DEBUG] 2020-12-01 13:05:46.779 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-01 13:05:46.780 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-12-01 13:05:46.780 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-01 13:05:46.780 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.781 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-01 13:05:46.781 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:roleName]
[DEBUG] 2020-12-01 13:05:46.781 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-01 13:05:46.782 [http-nio-8080-exec-2] PropertyBinder - Building property roleName
[DEBUG] 2020-12-01 13:05:46.782 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-01 13:05:46.782 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.785 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-12-01 13:05:46.786 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.787 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-12-01 13:05:46.787 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Role:userName]
[DEBUG] 2020-12-01 13:05:46.787 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-12-01 13:05:46.787 [http-nio-8080-exec-2] PropertyBinder - Building property userName
[DEBUG] 2020-12-01 13:05:46.787 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: hote.entity.Reservation
[DEBUG] 2020-12-01 13:05:46.787 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-01 13:05:46.787 [http-nio-8080-exec-2] EntityBinder - Import with entity name Reservation
[DEBUG] 2020-12-01 13:05:46.787 [http-nio-8080-exec-2] EntityBinder - Bind entity hote.entity.Reservation on table reservation
[DEBUG] 2020-12-01 13:05:46.789 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.789 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-01 13:05:46.789 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:id]
[DEBUG] 2020-12-01 13:05:46.789 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-01 13:05:46.789 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-12-01 13:05:46.790 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-01 13:05:46.790 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.790 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property end_date with lazy=false
[DEBUG] 2020-12-01 13:05:46.791 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:end_date]
[DEBUG] 2020-12-01 13:05:46.792 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for end_date
[DEBUG] 2020-12-01 13:05:46.793 [http-nio-8080-exec-2] PropertyBinder - Building property end_date
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='reservation'}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] CollectionBinder - Collection role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=start_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.795 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property start_date with lazy=false
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:start_date]
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for start_date
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] PropertyBinder - Building property start_date
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=total_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property total_price with lazy=false
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Reservation:total_price]
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for total_price
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] PropertyBinder - Building property total_price
[DEBUG] 2020-12-01 13:05:46.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='guest_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-01 13:05:46.797 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reservation), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.797 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-12-01 13:05:46.797 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: hote.entity.Room
[DEBUG] 2020-12-01 13:05:46.797 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-01 13:05:46.797 [http-nio-8080-exec-2] EntityBinder - Import with entity name Room
[DEBUG] 2020-12-01 13:05:46.797 [http-nio-8080-exec-2] EntityBinder - Bind entity hote.entity.Room on table room
[DEBUG] 2020-12-01 13:05:46.798 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.798 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-01 13:05:46.798 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:id]
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=Avalable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property Avalable with lazy=false
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:Avalable]
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for Avalable
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] PropertyBinder - Building property Avalable
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=current_price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property current_price with lazy=false
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:current_price]
[DEBUG] 2020-12-01 13:05:46.799 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for current_price
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] PropertyBinder - Building property current_price
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:description]
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=roomReserveds_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roomReserveds_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-01 13:05:46.801 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-01 13:05:46.801 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='room'}
[DEBUG] 2020-12-01 13:05:46.801 [http-nio-8080-exec-2] CollectionBinder - Collection role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-01 13:05:46.801 [http-nio-8080-exec-2] PropertyBinder - Building property roomReserveds
[DEBUG] 2020-12-01 13:05:46.807 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room), mappingColumn=room_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.807 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property room_name with lazy=false
[DEBUG] 2020-12-01 13:05:46.807 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.Room:room_name]
[DEBUG] 2020-12-01 13:05:46.808 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for room_name
[DEBUG] 2020-12-01 13:05:46.808 [http-nio-8080-exec-2] PropertyBinder - Building property room_name
[DEBUG] 2020-12-01 13:05:46.808 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: hote.entity.RoomReserved
[DEBUG] 2020-12-01 13:05:46.808 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-01 13:05:46.808 [http-nio-8080-exec-2] EntityBinder - Import with entity name Roomreserved
[DEBUG] 2020-12-01 13:05:46.809 [http-nio-8080-exec-2] EntityBinder - Bind entity hote.entity.RoomReserved on table room_reserved
[DEBUG] 2020-12-01 13:05:46.813 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.813 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-01 13:05:46.813 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:id]
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [hote.entity.RoomReserved:price]
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] PropertyBinder - Building property price
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='reservation_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-01 13:05:46.814 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=reservation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.815 [http-nio-8080-exec-2] PropertyBinder - Building property reservation
[DEBUG] 2020-12-01 13:05:46.815 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='room_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-01 13:05:46.815 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(room_reserved), mappingColumn=room, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-01 13:05:46.815 [http-nio-8080-exec-2] PropertyBinder - Building property room
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for Password
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for details
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for user_name
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-01 13:05:46.816 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for end_date
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for start_date
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for total_price
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for Avalable
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for current_price
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for room_name
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-01 13:05:46.817 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-01 13:05:46.822 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-01 13:05:46.822 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-01 13:05:46.822 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [reservation]
[DEBUG] 2020-12-01 13:05:46.822 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room]
[DEBUG] 2020-12-01 13:05:46.822 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [room_reserved]
[DEBUG] 2020-12-01 13:05:46.822 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:46.823 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: hote.entity.User.reservations through a foreign key
[DEBUG] 2020-12-01 13:05:46.824 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: hote.entity.User.reservations -> reservation
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] TableBinder - Retrieving property hote.entity.Reservation.user
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: guest_id, one-to-many: hote.entity.Reservation
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: hote.entity.User.roles through a foreign key
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: hote.entity.User.roles -> role
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] TableBinder - Retrieving property hote.entity.Role.user
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user_id, one-to-many: hote.entity.Role
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:46.825 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: hote.entity.Reservation.roomReserveds through a foreign key
[DEBUG] 2020-12-01 13:05:46.829 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: hote.entity.Reservation.roomReserveds -> room_reserved
[DEBUG] 2020-12-01 13:05:46.832 [http-nio-8080-exec-2] TableBinder - Retrieving property hote.entity.RoomReserved.reservation
[DEBUG] 2020-12-01 13:05:46.833 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: reservation_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-12-01 13:05:46.833 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-01 13:05:46.835 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: hote.entity.Room.roomReserveds through a foreign key
[DEBUG] 2020-12-01 13:05:46.835 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: hote.entity.Room.roomReserveds -> room_reserved
[DEBUG] 2020-12-01 13:05:46.835 [http-nio-8080-exec-2] TableBinder - Retrieving property hote.entity.RoomReserved.room
[DEBUG] 2020-12-01 13:05:46.835 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: room_id, one-to-many: hote.entity.RoomReserved
[DEBUG] 2020-12-01 13:05:46.835 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-01 13:05:46.836 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-01 13:05:46.836 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-12-01 13:05:46.836 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-12-01 13:05:46.839 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-01 13:05:46.839 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.User
[DEBUG] 2020-12-01 13:05:46.839 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Reservation
[DEBUG] 2020-12-01 13:05:46.839 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: hote.entity.Room
[DEBUG] 2020-12-01 13:05:46.919 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2020-12-01 13:05:46.920 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-12-01 13:05:46.921 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2020-12-01 13:05:46.922 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2020-12-01 13:05:47.071 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-12-01 13:05:47.153 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-12-01 13:05:47.153 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.8, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-51-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hotelFull, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.2/tomcat/Unnamed_HotelWebsie_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@fb3374d, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/hotelFull, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-12-01 13:05:47.216 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-12-01 13:05:47.216 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-12-01 13:05:47.242 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-12-01 13:05:47.242 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-12-01 13:05:47.243 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-12-01 13:05:47.243 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-12-01 13:05:47.244 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-12-01 13:05:47.244 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-12-01 13:05:47.254 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-12-01 13:05:47.254 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-12-01 13:05:47.262 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-12-01 13:05:47.263 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-12-01 13:05:47.263 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1830259e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1a4c0d3f]
[DEBUG] 2020-12-01 13:05:47.341 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-12-01 13:05:47.341 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-12-01 13:05:47.418 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Reservation] is safe
[DEBUG] 2020-12-01 13:05:47.438 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Reservation
[DEBUG] 2020-12-01 13:05:47.871 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-12-01 13:05:47.871 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-12-01 13:05:47.872 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Room] is safe
[DEBUG] 2020-12-01 13:05:47.872 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Room
[DEBUG] 2020-12-01 13:05:47.937 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-12-01 13:05:47.937 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-12-01 13:05:47.937 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.RoomReserved] is safe
[DEBUG] 2020-12-01 13:05:47.937 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.RoomReserved
[DEBUG] 2020-12-01 13:05:47.969 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-12-01 13:05:47.969 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-12-01 13:05:47.970 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.User] is safe
[DEBUG] 2020-12-01 13:05:47.970 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.User
[DEBUG] 2020-12-01 13:05:48.051 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-12-01 13:05:48.051 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-12-01 13:05:48.052 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [hote.entity.Role] is safe
[DEBUG] 2020-12-01 13:05:48.054 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : hote.entity.Role
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update reservation set guest_id=? where id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update reservation set  where id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update reservation set guest_id=null where guest_id=? and id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update reservation set guest_id=null where guest_id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update room_reserved set reservation_id=? where id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update room_reserved set reservation_id=null where reservation_id=? and id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update room_reserved set reservation_id=null where reservation_id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update room_reserved set room_id=? where id=?
[DEBUG] 2020-12-01 13:05:48.094 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update room_reserved set  where id=?
[DEBUG] 2020-12-01 13:05:48.095 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update room_reserved set room_id=null where room_id=? and id=?
[DEBUG] 2020-12-01 13:05:48.095 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update room_reserved set room_id=null where room_id=?
[DEBUG] 2020-12-01 13:05:48.103 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: hote.entity.Reservation
[DEBUG] 2020-12-01 13:05:48.103 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from reservation where id =?
[DEBUG] 2020-12-01 13:05:48.103 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select reservatio_.id, reservatio_.end_date as end_date2_0_, reservatio_.start_date as start_da3_0_, reservatio_.total_price as total_pr4_0_, reservatio_.guest_id as guest_id5_0_ from reservation reservatio_ where reservatio_.id=?
[DEBUG] 2020-12-01 13:05:48.103 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into reservation (end_date, start_date, total_price, guest_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.103 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update reservation set end_date=?, start_date=?, total_price=?, guest_id=? where id=?
[DEBUG] 2020-12-01 13:05:48.107 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from reservation where id=?
[DEBUG] 2020-12-01 13:05:48.107 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into reservation (end_date, start_date, total_price, guest_id) values (?, ?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.143 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45cc20d9]
[DEBUG] 2020-12-01 13:05:48.144 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-01 13:05:48.144 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-01 13:05:48.152 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17b8252b]
[DEBUG] 2020-12-01 13:05:48.156 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ddc272]
[DEBUG] 2020-12-01 13:05:48.157 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-01 13:05:48.157 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.157 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.158 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-01 13:05:48.158 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619dd29c]
[DEBUG] 2020-12-01 13:05:48.160 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-12-01 13:05:48.160 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-12-01 13:05:48.160 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-12-01 13:05:48.161 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.164 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.164 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-12-01 13:05:48.164 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-01 13:05:48.164 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-01 13:05:48.165 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-01 13:05:48.165 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cfbdd1a]
[DEBUG] 2020-12-01 13:05:48.165 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-01 13:05:48.165 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32a71751]
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dbf940f]
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-12-01 13:05:48.166 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-01 13:05:48.167 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.193 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.212 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.Reservation [NONE]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3672808d]
[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56400f71]
[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca3b278]
[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.221 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.222 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-01 13:05:48.222 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224510c2]
[DEBUG] 2020-12-01 13:05:48.222 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.Avalable
[DEBUG] 2020-12-01 13:05:48.222 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.current_price
[DEBUG] 2020-12-01 13:05:48.222 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.description
[DEBUG] 2020-12-01 13:05:48.222 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.222 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.222 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room.room_name
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24985e00]
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.reservations
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f5d8cf8]
[DEBUG] 2020-12-01 13:05:48.224 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1c79d5]
[DEBUG] 2020-12-01 13:05:48.226 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-12-01 13:05:48.227 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-01 13:05:48.227 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-01 13:05:48.227 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2020-12-01 13:05:48.227 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-01 13:05:48.227 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.227 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.228 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Reservation)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:0>, path=hote.entity.Reservation)
          - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Reservation.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Reservation.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:3>, path=hote.entity.Reservation.roomReserveds.<elements>.room)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Reservation.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:5>, path=hote.entity.Reservation.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:6>, path=hote.entity.Reservation.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Reservation)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Reservation.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {reservat3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(room)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Room)
                            - SQL table alias mapping - room2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:4> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=hote.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id4_1_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_1_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=hote.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-01 13:05:48.234 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.Reservation [READ]: select reservatio0_.id as id1_0_0_, reservatio0_.end_date as end_date2_0_0_, reservatio0_.start_date as start_da3_0_0_, reservatio0_.total_price as total_pr4_0_0_, reservatio0_.guest_id as guest_id5_0_0_, roomreserv1_.reservation_id as reservat3_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, room2_.id as id1_2_3_, room2_.Avalable as Avalable2_2_3_, room2_.current_price as current_3_2_3_, room2_.description as descript4_2_3_, room2_.room_name as room_nam5_2_3_, user3_.id as id1_4_4_, user3_.Password as Password2_4_4_, user3_.address as address3_4_4_, user3_.details as details4_4_4_, user3_.email as email5_4_4_, user3_.first_name as first_na6_4_4_, user3_.last_name as last_nam7_4_4_, user3_.phone as phone8_4_4_, user3_.user_name as user_nam9_4_4_, roles4_.user_id as user_id4_1_5_, roles4_.id as id1_1_5_, roles4_.id as id1_1_6_, roles4_.role_name as role_nam2_1_6_, roles4_.user_id as user_id4_1_6_, roles4_.user_name as user_nam3_1_6_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id left outer join room room2_ on roomreserv1_.room_id=room2_.id left outer join user user3_ on reservatio0_.guest_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where reservatio0_.id=?
[DEBUG] 2020-12-01 13:05:48.297 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-12-01 13:05:48.297 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Reservation: select reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_, roomreserv1_.reservation_id as reservat3_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from reservation reservatio0_ left outer join room_reserved roomreserv1_ on reservatio0_.id=roomreserv1_.reservation_id where reservatio0_.id=?
[DEBUG] 2020-12-01 13:05:48.297 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: hote.entity.Room
[DEBUG] 2020-12-01 13:05:48.298 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from room where id =?
[DEBUG] 2020-12-01 13:05:48.298 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select room_.id, room_.Avalable as Avalable2_2_, room_.current_price as current_3_2_, room_.description as descript4_2_, room_.room_name as room_nam5_2_ from room room_ where room_.id=?
[DEBUG] 2020-12-01 13:05:48.298 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into room (Avalable, current_price, description, room_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.298 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update room set Avalable=?, current_price=?, description=?, room_name=? where id=?
[DEBUG] 2020-12-01 13:05:48.298 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from room where id=?
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into room (Avalable, current_price, description, room_name) values (?, ?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab58544]
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10496b3d]
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@623c86d1]
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fcb39ee]
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-12-01 13:05:48.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-12-01 13:05:48.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-12-01 13:05:48.300 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10a8a39f]
[DEBUG] 2020-12-01 13:05:48.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-01 13:05:48.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-12-01 13:05:48.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-12-01 13:05:48.300 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.301 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.302 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-01 13:05:48.302 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.Room [NONE]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-12-01 13:05:48.302 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31fff974]
[DEBUG] 2020-12-01 13:05:48.302 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : Avalable
[DEBUG] 2020-12-01 13:05:48.302 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : current_price
[DEBUG] 2020-12-01 13:05:48.303 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-01 13:05:48.303 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-01 13:05:48.306 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@574c13ad]
[DEBUG] 2020-12-01 13:05:48.306 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2adf680]
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.price
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1012646]
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.end_date
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.start_date
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.total_price
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.reservation.user
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c8d173d]
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds.room
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roomReserveds.room
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room_name
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.307 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.308 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Room)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Room, querySpaceUid=<gen:0>, path=hote.entity.Room)
          - CollectionAttributeFetchImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:1>, path=hote.entity.Room.roomReserveds)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:2>, path=hote.entity.Room.roomReserveds.<elements>)
                - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Room.roomReserveds.<elements>.reservation)
                   - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:4>, path=hote.entity.Room.roomReserveds.<elements>.reservation.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Room)
          - SQL table alias mapping - room0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.Room.roomReserveds)
                - SQL table alias mapping - roomreserv1_
                - alias suffix - 1_
                - suffixed key columns - {room_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.RoomReserved)
                      - SQL table alias mapping - roomreserv1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(reservation)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-01 13:05:48.308 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.Room [READ]: select room0_.id as id1_2_0_, room0_.Avalable as Avalable2_2_0_, room0_.current_price as current_3_2_0_, room0_.description as descript4_2_0_, room0_.room_name as room_nam5_2_0_, roomreserv1_.room_id as room_id4_3_1_, roomreserv1_.id as id1_3_1_, roomreserv1_.id as id1_3_2_, roomreserv1_.price as price2_3_2_, roomreserv1_.reservation_id as reservat3_3_2_, roomreserv1_.room_id as room_id4_3_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id left outer join reservation reservatio2_ on roomreserv1_.reservation_id=reservatio2_.id where room0_.id=?
[DEBUG] 2020-12-01 13:05:48.309 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-12-01 13:05:48.311 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Room: select room0_.id as id1_2_1_, room0_.Avalable as Avalable2_2_1_, room0_.current_price as current_3_2_1_, room0_.description as descript4_2_1_, room0_.room_name as room_nam5_2_1_, roomreserv1_.room_id as room_id4_3_3_, roomreserv1_.id as id1_3_3_, roomreserv1_.id as id1_3_0_, roomreserv1_.price as price2_3_0_, roomreserv1_.reservation_id as reservat3_3_0_, roomreserv1_.room_id as room_id4_3_0_ from room room0_ left outer join room_reserved roomreserv1_ on room0_.id=roomreserv1_.room_id where room0_.id=?
[DEBUG] 2020-12-01 13:05:48.314 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: hote.entity.RoomReserved
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from room_reserved where id =?
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select roomreserv_.id, roomreserv_.price as price2_3_, roomreserv_.reservation_id as reservat3_3_, roomreserv_.room_id as room_id4_3_ from room_reserved roomreserv_ where roomreserv_.id=?
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into room_reserved (price, reservation_id, room_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update room_reserved set price=?, reservation_id=?, room_id=? where id=?
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from room_reserved where id=?
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into room_reserved (price, reservation_id, room_id) values (?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1632cb1a]
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c761b14]
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285cbf4f]
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-01 13:05:48.317 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-01 13:05:48.318 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-01 13:05:48.318 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-01 13:05:48.318 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-01 13:05:48.318 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-01 13:05:48.321 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-01 13:05:48.321 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-01 13:05:48.321 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15a2d1c7]
[DEBUG] 2020-12-01 13:05:48.321 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd03420]
[DEBUG] 2020-12-01 13:05:48.321 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-01 13:05:48.322 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-01 13:05:48.322 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@463b44d2]
[DEBUG] 2020-12-01 13:05:48.325 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-01 13:05:48.325 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-01 13:05:48.325 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-01 13:05:48.325 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.325 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.325 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-01 13:05:48.325 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.325 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.RoomReserved [NONE]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a515fbb]
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2bd2e6]
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e9be96]
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43029c46]
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e76140b]
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12f7165d]
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.326 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.RoomReserved)
    - Returns
       - EntityReturnImpl(entity=hote.entity.RoomReserved, querySpaceUid=<gen:0>, path=hote.entity.RoomReserved)
          - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=hote.entity.RoomReserved.reservation)
             - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:2>, path=hote.entity.RoomReserved.reservation.user)
                - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:3>, path=hote.entity.RoomReserved.reservation.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:4>, path=hote.entity.RoomReserved.reservation.user.roles.<elements>)
          - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.RoomReserved.room)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.RoomReserved)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(reservation)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(room)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=hote.entity.Room)
                - SQL table alias mapping - room3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.RoomReserved [READ]: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_, reservatio1_.id as id1_0_1_, reservatio1_.end_date as end_date2_0_1_, reservatio1_.start_date as start_da3_0_1_, reservatio1_.total_price as total_pr4_0_1_, reservatio1_.guest_id as guest_id5_0_1_, user2_.id as id1_4_2_, user2_.Password as Password2_4_2_, user2_.address as address3_4_2_, user2_.details as details4_4_2_, user2_.email as email5_4_2_, user2_.first_name as first_na6_4_2_, user2_.last_name as last_nam7_4_2_, user2_.phone as phone8_4_2_, user2_.user_name as user_nam9_4_2_, room3_.id as id1_2_3_, room3_.Avalable as Avalable2_2_3_, room3_.current_price as current_3_2_3_, room3_.description as descript4_2_3_, room3_.room_name as room_nam5_2_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id left outer join room room3_ on roomreserv0_.room_id=room3_.id where roomreserv0_.id=?
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity hote.entity.RoomReserved: select roomreserv0_.id as id1_3_0_, roomreserv0_.price as price2_3_0_, roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.room_id as room_id4_3_0_ from room_reserved roomreserv0_ where roomreserv0_.id=?
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: hote.entity.User
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select user_.id, user_.Password as Password2_4_, user_.address as address3_4_, user_.details as details4_4_, user_.email as email5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.phone as phone8_4_, user_.user_name as user_nam9_4_ from user user_ where user_.id=?
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into user (Password, address, details, email, first_name, last_name, phone, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update user set Password=?, address=?, details=?, email=?, first_name=?, last_name=?, phone=?, user_name=? where id=?
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-12-01 13:05:48.327 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into user (Password, address, details, email, first_name, last_name, phone, user_name) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12f8a3a7]
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ff859e]
[DEBUG] 2020-12-01 13:05:48.328 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c3532f2]
[DEBUG] 2020-12-01 13:05:48.332 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-12-01 13:05:48.333 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-12-01 13:05:48.333 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cce7663]
[DEBUG] 2020-12-01 13:05:48.333 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f961aa]
[DEBUG] 2020-12-01 13:05:48.333 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-12-01 13:05:48.333 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f9af3fc]
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-01 13:05:48.337 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d8c2f94]
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78bacbf1]
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.338 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b73d1a5]
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : Password
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : details
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-01 13:05:48.339 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations
[DEBUG] 2020-12-01 13:05:48.340 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f9a51b7]
[DEBUG] 2020-12-01 13:05:48.340 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@355dd381]
[DEBUG] 2020-12-01 13:05:48.340 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.end_date
[DEBUG] 2020-12-01 13:05:48.340 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds
[DEBUG] 2020-12-01 13:05:48.340 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b11652e]
[DEBUG] 2020-12-01 13:05:48.341 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200b7016]
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.price
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservations.roomReserveds.reservation
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.roomReserveds.room
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4cf0e3]
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.start_date
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.total_price
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservations.user
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservations.user
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@473cbcbc]
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53085f03]
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user_name
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.342 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.User)
    - Returns
       - EntityReturnImpl(entity=hote.entity.User, querySpaceUid=<gen:0>, path=hote.entity.User)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:1>, path=hote.entity.User.reservations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=hote.entity.User.reservations.<elements>)
                - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:3>, path=hote.entity.User.reservations.<elements>.roomReserveds)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:4>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>)
                      - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:5>, path=hote.entity.User.reservations.<elements>.roomReserveds.<elements>.room)
          - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:6>, path=hote.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:7>, path=hote.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(reservations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=hote.entity.User.reservations)
                - SQL table alias mapping - reservatio1_
                - alias suffix - 1_
                - suffixed key columns - {guest_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(roomReserveds)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=hote.entity.Reservation.roomReserveds)
                            - SQL table alias mapping - roomreserv2_
                            - alias suffix - 3_
                            - suffixed key columns - {reservat3_3_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_3_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=hote.entity.RoomReserved)
                                  - SQL table alias mapping - roomreserv2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_3_4_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=hote.entity.User.roles)
                - SQL table alias mapping - roles3_
                - alias suffix - 5_
                - suffixed key columns - {user_id4_1_5_}
                - entity-element alias suffix - 6_
                - 6_entity-element suffixed key columns - id1_1_6_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=hote.entity.Role)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_1_6_}

[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.User [READ]: select user0_.id as id1_4_0_, user0_.Password as Password2_4_0_, user0_.address as address3_4_0_, user0_.details as details4_4_0_, user0_.email as email5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.phone as phone8_4_0_, user0_.user_name as user_nam9_4_0_, reservatio1_.guest_id as guest_id5_0_1_, reservatio1_.id as id1_0_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, roomreserv2_.reservation_id as reservat3_3_3_, roomreserv2_.id as id1_3_3_, roomreserv2_.id as id1_3_4_, roomreserv2_.price as price2_3_4_, roomreserv2_.reservation_id as reservat3_3_4_, roomreserv2_.room_id as room_id4_3_4_, roles3_.user_id as user_id4_1_5_, roles3_.id as id1_1_5_, roles3_.id as id1_1_6_, roles3_.role_name as role_nam2_1_6_, roles3_.user_id as user_id4_1_6_, roles3_.user_name as user_nam3_1_6_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id left outer join room_reserved roomreserv2_ on reservatio1_.id=roomreserv2_.reservation_id left outer join role roles3_ on user0_.id=roles3_.user_id where user0_.id=?
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity hote.entity.User: select user0_.id as id1_4_1_, user0_.Password as Password2_4_1_, user0_.address as address3_4_1_, user0_.details as details4_4_1_, user0_.email as email5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.phone as phone8_4_1_, user0_.user_name as user_nam9_4_1_, reservatio1_.guest_id as guest_id5_0_3_, reservatio1_.id as id1_0_3_, reservatio1_.id as id1_0_0_, reservatio1_.end_date as end_date2_0_0_, reservatio1_.start_date as start_da3_0_0_, reservatio1_.total_price as total_pr4_0_0_, reservatio1_.guest_id as guest_id5_0_0_ from user user0_ left outer join reservation reservatio1_ on user0_.id=reservatio1_.guest_id where user0_.id=?
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: hote.entity.Role
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_1_, role_.user_id as user_id4_1_, role_.user_name as user_nam3_1_ from role role_ where role_.id=?
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@402fda37]
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-01 13:05:48.343 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bad91e6]
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-01 13:05:48.351 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3565e604]
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a2501b]
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ab46997]
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f93d252]
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.352 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b77899]
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6710d943]
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.Password
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.details
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.first_name
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.last_name
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c495b58]
[DEBUG] 2020-12-01 13:05:48.354 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d074c1d]
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.end_date
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.roomReserveds
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@186efb0b]
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f3e2bbf]
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.start_date
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.total_price
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.reservations.user
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.reservations.user
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.user_name
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.355 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.356 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=hote.entity.Role)
    - Returns
       - EntityReturnImpl(entity=hote.entity.Role, querySpaceUid=<gen:0>, path=hote.entity.Role)
          - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:1>, path=hote.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:2>, path=hote.entity.Role.user.reservations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:3>, path=hote.entity.Role.user.reservations.<elements>)
                   - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:4>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:5>, path=hote.entity.Role.user.reservations.<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=hote.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(reservations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=hote.entity.User.reservations)
                      - SQL table alias mapping - reservatio2_
                      - alias suffix - 2_
                      - suffixed key columns - {guest_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.Reservation)
                            - SQL table alias mapping - reservatio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}

[DEBUG] 2020-12-01 13:05:48.356 [http-nio-8080-exec-2] EntityLoader - Static select for entity hote.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_, user1_.id as id1_4_1_, user1_.Password as Password2_4_1_, user1_.address as address3_4_1_, user1_.details as details4_4_1_, user1_.email as email5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.phone as phone8_4_1_, user1_.user_name as user_nam9_4_1_, reservatio2_.guest_id as guest_id5_0_2_, reservatio2_.id as id1_0_2_, reservatio2_.id as id1_0_3_, reservatio2_.end_date as end_date2_0_3_, reservatio2_.start_date as start_da3_0_3_, reservatio2_.total_price as total_pr4_0_3_, reservatio2_.guest_id as guest_id5_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join reservation reservatio2_ on user1_.id=reservatio2_.guest_id where role0_.id=?
[DEBUG] 2020-12-01 13:05:48.356 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-01 13:05:48.356 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity hote.entity.Role: select role0_.id as id1_1_0_, role0_.role_name as role_nam2_1_0_, role0_.user_id as user_id4_1_0_, role0_.user_name as user_nam3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@515e72b5]
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7860adda]
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : end_date
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roomReserveds
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d3dce60]
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@204ea660]
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : start_date
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : total_price
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-01 13:05:48.373 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-01 13:05:48.375 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.382 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.387 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.reservations)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.reservations, querySpaceUid=<gen:0>, path=[hote.entity.User.reservations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Reservation, querySpaceUid=<gen:1>, path=[hote.entity.User.reservations].<elements>)
             - CollectionAttributeFetchImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:2>, path=[hote.entity.User.reservations].<elements>.roomReserveds)
                - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:3>, path=[hote.entity.User.reservations].<elements>.roomReserveds.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.reservations)
          - SQL table alias mapping - reservatio0_
          - alias suffix - 0_
          - suffixed key columns - {guest_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Reservation)
                - SQL table alias mapping - reservatio0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-12-01 13:05:48.387 [http-nio-8080-exec-2] CollectionLoader - Static select for collection hote.entity.User.reservations: select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-01 13:05:48.387 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32ebc304]
[DEBUG] 2020-12-01 13:05:48.387 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd82aae]
[DEBUG] 2020-12-01 13:05:48.391 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-12-01 13:05:48.391 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-01 13:05:48.391 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-01 13:05:48.391 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-12-01 13:05:48.391 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.391 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.392 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:0>, path=[hote.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:1>, path=[hote.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-12-01 13:05:48.392 [http-nio-8080-exec-2] CollectionLoader - Static select for collection hote.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-01 13:05:48.392 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46abe082]
[DEBUG] 2020-12-01 13:05:48.392 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c3c3fa3]
[DEBUG] 2020-12-01 13:05:48.392 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-01 13:05:48.392 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-01 13:05:48.392 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservation
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fef8521]
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.Avalable
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.current_price
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.description
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : room.roomReserveds
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room.room_name
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.393 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Reservation.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Reservation.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Reservation.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Reservation.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Room, querySpaceUid=<gen:2>, path=[hote.entity.Reservation.roomReserveds].<elements>.room)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Reservation.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {reservat3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(room)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Room)
                      - SQL table alias mapping - room1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] CollectionLoader - Static select for collection hote.entity.Reservation.roomReserveds: select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6415a776]
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c50f66c]
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6a6dfc]
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.end_date
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.start_date
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.total_price
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@762752cd]
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.Password
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.address
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.details
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.email
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.first_name
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.last_name
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.phone
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.reservations
[DEBUG] 2020-12-01 13:05:48.394 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : reservation.user.reservations
[DEBUG] 2020-12-01 13:05:48.397 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.roles
[DEBUG] 2020-12-01 13:05:48.398 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ddec48]
[DEBUG] 2020-12-01 13:05:48.400 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@204ec25]
[DEBUG] 2020-12-01 13:05:48.400 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : reservation.user.user_name
[DEBUG] 2020-12-01 13:05:48.400 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : room
[DEBUG] 2020-12-01 13:05:48.400 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : room
[DEBUG] 2020-12-01 13:05:48.400 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-01 13:05:48.401 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-01 13:05:48.403 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=hote.entity.Room.roomReserveds)
    - Returns
       - CollectionReturnImpl(collection=hote.entity.Room.roomReserveds, querySpaceUid=<gen:0>, path=[hote.entity.Room.roomReserveds])
          - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.RoomReserved, querySpaceUid=<gen:1>, path=[hote.entity.Room.roomReserveds].<elements>)
             - EntityAttributeFetchImpl(entity=hote.entity.Reservation, querySpaceUid=<gen:2>, path=[hote.entity.Room.roomReserveds].<elements>.reservation)
                - EntityAttributeFetchImpl(entity=hote.entity.User, querySpaceUid=<gen:3>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user)
                   - CollectionAttributeFetchImpl(collection=hote.entity.User.roles, querySpaceUid=<gen:4>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=hote.entity.Role, querySpaceUid=<gen:5>, path=[hote.entity.Room.roomReserveds].<elements>.reservation.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=hote.entity.Room.roomReserveds)
          - SQL table alias mapping - roomreserv0_
          - alias suffix - 0_
          - suffixed key columns - {room_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=hote.entity.RoomReserved)
                - SQL table alias mapping - roomreserv0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(reservation)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=hote.entity.Reservation)
                      - SQL table alias mapping - reservatio1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=hote.entity.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}

[DEBUG] 2020-12-01 13:05:48.403 [http-nio-8080-exec-2] CollectionLoader - Static select for collection hote.entity.Room.roomReserveds: select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-12-01 13:05:48.477 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-12-01 13:05:48.478 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-12-01 13:05:48.478 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-12-01 13:05:48.503 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-12-01 13:05:48.503 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-12-01 13:05:48.506 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-12-01 13:05:48.506 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-12-01 13:05:48.508 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f90c97b
[DEBUG] 2020-12-01 13:05:48.513 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: 4e06366d-2b38-4016-b4c2-0a1abdc64533 (<unnamed>)
[DEBUG] 2020-12-01 13:05:48.515 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-12-01 13:05:48.760 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-12-01 13:05:48.873 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-12-01 13:05:48.919 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6fdcbec7
[DEBUG] 2020-12-01 13:05:49.011 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-12-01 13:05:49.028 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-01 13:05:49.054 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'hote'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'first_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-12-01 13:05:49.141 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-12-01 13:05:49.219 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : hote.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-12-01 13:05:49.221 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-01 13:05:49.238 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-01 13:05:49.240 [http-nio-8080-exec-2] DotNode - getDataType() : first_name -> org.hibernate.type.StringType@7ed5142a
[DEBUG] 2020-12-01 13:05:49.240 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0.first_name -> user0_.first_name
[DEBUG] 2020-12-01 13:05:49.252 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-12-01 13:05:49.253 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.first_name user0_.id first_name ) ? ) ) )
[DEBUG] 2020-12-01 13:05:49.294 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-12-01 13:05:49.295 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-12-01 13:05:49.296 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=hote.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.first_name' {propertyName=first_name,dereferenceType=PRIMITIVE,getPropertyPath=first_name,path=generatedAlias0.first_name,tableAlias=user0_,className=hote.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=hote.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'first_name' {originalText=first_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7ed5142a}

[DEBUG] 2020-12-01 13:05:49.296 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-01 13:05:49.320 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from hote.entity.User as generatedAlias0 where generatedAlias0.first_name=:param0
[DEBUG] 2020-12-01 13:05:49.321 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.first_name=?
[DEBUG] 2020-12-01 13:05:49.321 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-01 13:05:49.405 [http-nio-8080-exec-2] SQL - select user0_.id as id1_4_, user0_.Password as Password2_4_, user0_.address as address3_4_, user0_.details as details4_4_, user0_.email as email5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.phone as phone8_4_, user0_.user_name as user_nam9_4_ from user user0_ where user0_.first_name=?
[DEBUG] 2020-12-01 13:05:49.506 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-12-01 13:05:49.519 [http-nio-8080-exec-2] Loader - Result row: EntityKey[hote.entity.User#1]
[DEBUG] 2020-12-01 13:05:49.540 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-12-01 13:05:49.540 [http-nio-8080-exec-2] Loader - Result row: EntityKey[hote.entity.User#17]
[DEBUG] 2020-12-01 13:05:49.542 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2020-12-01 13:05:49.542 [http-nio-8080-exec-2] Loader - Result row: EntityKey[hote.entity.User#18]
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.User#1]
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `Password` : value = jpatel
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 1013 8th street, baraboo, wi
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `details` : value = has reservasion
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = jpate@some.com
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.544 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-12-01 13:05:49.546 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.546 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `last_name` : value = patel
[DEBUG] 2020-12-01 13:05:49.546 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.546 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6089638522
[DEBUG] 2020-12-01 13:05:49.546 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.546 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.546 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.568 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.570 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.570 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-12-01 13:05:49.570 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.User#1]
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.User#17]
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `Password` : value = null
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = null
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `details` : value = null
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = jana@.cm
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `last_name` : value = pate
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6089638555
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user_name` : value = jpatel
[DEBUG] 2020-12-01 13:05:49.572 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.User#17]
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.User#18]
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `Password` : value = null
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`Password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = null
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `details` : value = null
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`details`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = jana@.cmww
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `first_name` : value = janak
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `last_name` : value = pateww
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 60896385553
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `reservations` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`reservations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.573 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user_name` : value = wwjpatel
[DEBUG] 2020-12-01 13:05:49.574 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.574 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.User#18]
[DEBUG] 2020-12-01 13:05:49.575 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#18]
[DEBUG] 2020-12-01 13:05:49.575 [http-nio-8080-exec-2] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-01 13:05:49.594 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#18]
[DEBUG] 2020-12-01 13:05:49.603 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:49.603 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#18]
[DEBUG] 2020-12-01 13:05:49.603 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:49.603 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.603 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.603 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#18]
[DEBUG] 2020-12-01 13:05:49.603 [http-nio-8080-exec-2] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-01 13:05:49.609 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#18]
[DEBUG] 2020-12-01 13:05:49.609 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-01 13:05:49.622 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#18]
[DEBUG] 2020-12-01 13:05:49.639 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#4]
[DEBUG] 2020-12-01 13:05:49.639 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-12-02
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `start_date` : value = 2020-12-01
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 18
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#4]
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#18]
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#4]
[DEBUG] 2020-12-01 13:05:49.640 [http-nio-8080-exec-2] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-01 13:05:49.643 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#4]
[DEBUG] 2020-12-01 13:05:49.643 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:49.643 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#4]
[DEBUG] 2020-12-01 13:05:49.643 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:49.643 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.643 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.643 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#17]
[DEBUG] 2020-12-01 13:05:49.643 [http-nio-8080-exec-2] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-01 13:05:49.644 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#17]
[DEBUG] 2020-12-01 13:05:49.644 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:49.644 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#17]
[DEBUG] 2020-12-01 13:05:49.644 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:49.644 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.644 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.644 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#17]
[DEBUG] 2020-12-01 13:05:49.644 [http-nio-8080-exec-2] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-01 13:05:49.651 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#17]
[DEBUG] 2020-12-01 13:05:49.652 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#17]
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#3]
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-12-02
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `start_date` : value = 2020-12-01
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 17
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#3]
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#17]
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#3]
[DEBUG] 2020-12-01 13:05:49.655 [http-nio-8080-exec-2] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-01 13:05:49.658 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#3]
[DEBUG] 2020-12-01 13:05:49.658 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:49.658 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#3]
[DEBUG] 2020-12-01 13:05:49.658 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:49.658 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.658 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.659 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.roles#1]
[DEBUG] 2020-12-01 13:05:49.660 [http-nio-8080-exec-2] SQL - select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role_name as role_nam2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.user_name as user_nam3_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-12-01 13:05:49.661 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.roles#1]
[DEBUG] 2020-12-01 13:05:49.661 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-01 13:05:49.661 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.roles#1]
[DEBUG] 2020-12-01 13:05:49.661 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.Role#2]
[DEBUG] 2020-12-01 13:05:49.664 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-12-01 13:05:49.665 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.665 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-01 13:05:49.665 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.665 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = jpatel
[DEBUG] 2020-12-01 13:05:49.665 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.665 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.Role#2]
[DEBUG] 2020-12-01 13:05:49.665 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:49.667 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.User.roles#1]
[DEBUG] 2020-12-01 13:05:49.667 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.roles
[DEBUG] 2020-12-01 13:05:49.667 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.667 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.667 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-01 13:05:49.667 [http-nio-8080-exec-2] SQL - select reservatio0_.guest_id as guest_id5_0_0_, reservatio0_.id as id1_0_0_, reservatio0_.id as id1_0_1_, reservatio0_.end_date as end_date2_0_1_, reservatio0_.start_date as start_da3_0_1_, reservatio0_.total_price as total_pr4_0_1_, reservatio0_.guest_id as guest_id5_0_1_ from reservation reservatio0_ where reservatio0_.guest_id=?
[DEBUG] 2020-12-01 13:05:49.672 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.User.reservations#1]
[DEBUG] 2020-12-01 13:05:49.672 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.Reservation#1]
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `end_date` : value = 2020-10-22
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`end_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `start_date` : value = 2019-10-21
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`start_date`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.673 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `total_price` : value = 50.0
[DEBUG] 2020-12-01 13:05:49.674 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`total_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.676 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-01 13:05:49.676 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.677 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.Reservation#1]
[DEBUG] 2020-12-01 13:05:49.677 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:49.677 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.User.reservations#1]
[DEBUG] 2020-12-01 13:05:49.677 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.User.reservations
[DEBUG] 2020-12-01 13:05:49.677 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.677 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.678 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-01 13:05:49.678 [http-nio-8080-exec-2] SQL - select roomreserv0_.reservation_id as reservat3_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, room1_.id as id1_2_2_, room1_.Avalable as Avalable2_2_2_, room1_.current_price as current_3_2_2_, room1_.description as descript4_2_2_, room1_.room_name as room_nam5_2_2_ from room_reserved roomreserv0_ left outer join room room1_ on roomreserv0_.room_id=room1_.id where roomreserv0_.reservation_id=?
[DEBUG] 2020-12-01 13:05:49.680 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-01 13:05:49.680 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-01 13:05:49.683 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-01 13:05:49.687 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-01 13:05:49.687 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `price` : value = 60.0
[DEBUG] 2020-12-01 13:05:49.687 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.687 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `reservation` : value = 1
[DEBUG] 2020-12-01 13:05:49.687 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`reservation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.687 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `room` : value = 1
[DEBUG] 2020-12-01 13:05:49.687 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`room`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.RoomReserved#1]
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [hote.entity.Room#1]
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `Avalable` : value = 2
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`Avalable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `current_price` : value = 60.00
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`current_price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = 2 queen bed
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roomReserveds` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roomReserveds`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `room_name` : value = 2queen
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`room_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [hote.entity.Room#1]
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.Reservation.roomReserveds#1]
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.Reservation.roomReserveds
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-01 13:05:49.688 [http-nio-8080-exec-2] SQL - select roomreserv0_.room_id as room_id4_3_0_, roomreserv0_.id as id1_3_0_, roomreserv0_.id as id1_3_1_, roomreserv0_.price as price2_3_1_, roomreserv0_.reservation_id as reservat3_3_1_, roomreserv0_.room_id as room_id4_3_1_, reservatio1_.id as id1_0_2_, reservatio1_.end_date as end_date2_0_2_, reservatio1_.start_date as start_da3_0_2_, reservatio1_.total_price as total_pr4_0_2_, reservatio1_.guest_id as guest_id5_0_2_, user2_.id as id1_4_3_, user2_.Password as Password2_4_3_, user2_.address as address3_4_3_, user2_.details as details4_4_3_, user2_.email as email5_4_3_, user2_.first_name as first_na6_4_3_, user2_.last_name as last_nam7_4_3_, user2_.phone as phone8_4_3_, user2_.user_name as user_nam9_4_3_ from room_reserved roomreserv0_ left outer join reservation reservatio1_ on roomreserv0_.reservation_id=reservatio1_.id left outer join user user2_ on reservatio1_.guest_id=user2_.id where roomreserv0_.room_id=?
[DEBUG] 2020-12-01 13:05:49.691 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-01 13:05:49.691 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-01 13:05:49.691 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-01 13:05:49.693 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-01 13:05:49.693 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [hote.entity.Room.roomReserveds#1]
[DEBUG] 2020-12-01 13:05:49.693 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: hote.entity.Room.roomReserveds
[DEBUG] 2020-12-01 13:05:49.693 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-01 13:05:49.693 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-01 13:05:49.696 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
